@using Application.ViewModels;
@using Domain.Pagination;
@using Domain.Filters;

@*
@model PagedResponse<IEnumerable<CidadeViewModel>>
@model IEnumerable<PagedResponse<CidadeViewModel>>
@model PagedResponse<CidadeViewModel>
@model IEnumerable<CidadeViewModel>
funciona -> @model PagedResponse<CidadeViewModel>
    *@
@model PagedResponseViewModel<CidadeViewModel>

@{
    ViewData["Title"] = "Index";
    //CidadeFilter CidadeFilter = new CidadeFilter() { Nome="Teste"};
    CidadeFilter CidadeFilter = ViewData["CidadeFilter"] as CidadeFilter; 
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@*@{

await Html.RenderPartialAsync("~/Views/Shared/Partials/_Buscar.cshtml", @Model);
}*@

@{
    var controllerAtual = ViewContext.RouteData.Values["controller"].ToString();

}
@*<form asp-action="Index" asp-controller="@ViewBag.FiltroPesquisa" method="get">*@

<div class="col-md-5 form-group">
    <form asp-action="Index" asp-controller=@controllerAtual method="post">
        <div class="form-actions no-color">
            <p>
                Localizar: <input asp-for=@CidadeFilter.Nome />
                <input type="submit" value="Buscar" class="btn btn-success"></> |
                <a asp-action="Index">Voltar à Lista</a>
            </p>
        </div>
    </form>
</div>















<table class="table">
    <thead>
        <tr>
            <th>
                
                <a asp-action="Index" asp-route-OrderBy=@CidadeFilter.OrderBy asp-route-SortBy=@Model.ViewModel.IdCidade>@Html.DisplayNameFor(model => model.ViewModel.IdCidade)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-OrderBy=@CidadeFilter.OrderBy asp-route-SortBy=@Model.ViewModel.Nome>@Html.DisplayNameFor(model => model.ViewModel.Nome)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ViewModel.CodigoIbge)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ViewModel.SinCapital)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ViewModel.Latitude)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ViewModel.Longitude)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ViewModel.IdPaisNavigation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ViewModel.IdUfNavigation)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Data) {
        <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.IdCidade)
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CodigoIbge)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SinCapital)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Latitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Longitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdPaisNavigation.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdUfNavigation.Nome)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.IdCidade">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.IdCidade">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.IdCidade">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

