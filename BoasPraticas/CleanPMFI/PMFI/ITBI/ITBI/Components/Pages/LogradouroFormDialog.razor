@using System.ComponentModel.DataAnnotations
@using ITBI.Entities.DBProsiga
@implements IDialogContentComponent<Logradouro>
<!-- Header -->
<FluentDialogHeader ShowDismiss="true">
    <FluentStack VerticalAlignment="VerticalAlignment.Center">
        <FluentIcon Value="@(new Icons.Regular.Size24.WindowApps())" />
        <FluentLabel Typo="Typography.PaneHeader">
            @Dialog.Instance.Parameters.Title
        </FluentLabel>
    </FluentStack>
</FluentDialogHeader>

<!-- Body -->
<FluentDialogBody>
    <EditForm EditContext="@_editContext" FormName="simple_register">
        <DataAnnotationsValidator />

             <FluentTextField Placeholder="CEP" @bind-Value="Content.ConCep">CEP</FluentTextField> 
            <FluentTextField Placeholder="Tipo Logradouro" @bind-Value="Content.ConTipoLograd">Tipo Logradouro</FluentTextField> 
            <FluentTextField Placeholder="Logradouro" @bind-Value="Content.ConEndereco">Logradouro</FluentTextField> 
            <FluentTextField Placeholder="Número" @bind-Value="Content.ConNumero">Número</FluentTextField> 
            <FluentTextField Placeholder="Bairro" @bind-Value="Content.ConBairro.BaiNome">Bairro</FluentTextField> 
            <FluentTextField Placeholder="Cidade" @bind-Value="Content.ConCidade.CidNome">Cidade</FluentTextField> 
            <FluentTextField Placeholder="Estado" @bind-Value="Content.ConCidade.CidUf">Estado</FluentTextField> 
            <FluentTextField Placeholder="Pais" @bind-Value="Content.ConCidade.Pais.PaisNome">País</FluentTextField> 

        <div style="color: var(--error);">
            <FluentValidationSummary />
        </div>
    </EditForm>
</FluentDialogBody>

<!-- Footer -->
<FluentDialogFooter>
    <FluentButton Appearance="Appearance.Accent"
                  Disabled="@(!_editContext.Validate())"
                  OnClick="@SaveAsync">
        Save
    </FluentButton>
    <FluentButton Appearance="Appearance.Neutral"
                  OnClick="@CancelAsync">
        Cancel
    </FluentButton>
</FluentDialogFooter>

@code
{
    private EditContext _editContext = default!;

    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;

    [Parameter]
    public Logradouro Content { get; set; } = default!;

    protected override void OnInitialized()
    {
        _editContext = new EditContext(Content);
    }

    private async Task SaveAsync()
    {
        if (_editContext.Validate())
        {
            await Dialog.CloseAsync(Content);
        }
    }

    private async Task CancelAsync()
    {
        await Dialog.CancelAsync();
    }

    
}