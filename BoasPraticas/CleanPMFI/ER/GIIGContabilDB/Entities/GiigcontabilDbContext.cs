using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace GIIGContabilDB.Entities;

public partial class GiigcontabilDbContext : DbContext
{
    public GiigcontabilDbContext()
    {
    }

    public GiigcontabilDbContext(DbContextOptions<GiigcontabilDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AmHodometro> AmHodometros { get; set; }

    public virtual DbSet<AmmConvenioAuxilio2003> AmmConvenioAuxilio2003s { get; set; }

    public virtual DbSet<AmmLicitacao> AmmLicitacaos { get; set; }

    public virtual DbSet<AmmLiquidacao> AmmLiquidacaos { get; set; }

    public virtual DbSet<Contas2013> Contas2013s { get; set; }

    public virtual DbSet<Contas2022> Contas2022s { get; set; }

    public virtual DbSet<ContasAlteradas2013> ContasAlteradas2013s { get; set; }

    public virtual DbSet<ContasExcluidas2013> ContasExcluidas2013s { get; set; }

    public virtual DbSet<ContasIncluidas2013> ContasIncluidas2013s { get; set; }

    public virtual DbSet<Despesas2011Excluida> Despesas2011Excluidas { get; set; }

    public virtual DbSet<Despesas2011Incluida> Despesas2011Incluidas { get; set; }

    public virtual DbSet<Despesas2013Alterada> Despesas2013Alteradas { get; set; }

    public virtual DbSet<Despesas2014> Despesas2014s { get; set; }

    public virtual DbSet<Despesas2015> Despesas2015s { get; set; }

    public virtual DbSet<Despesas2015Excluida> Despesas2015Excluidas { get; set; }

    public virtual DbSet<Despesas2015Incluida> Despesas2015Incluidas { get; set; }

    public virtual DbSet<Despesas2021> Despesas2021s { get; set; }

    public virtual DbSet<DespesasExcluidas2013> DespesasExcluidas2013s { get; set; }

    public virtual DbSet<Fontes2013> Fontes2013s { get; set; }

    public virtual DbSet<Licita2> Licita2s { get; set; }

    public virtual DbSet<LrfInscricaoSaldoDividaAtiva> LrfInscricaoSaldoDividaAtivas { get; set; }

    public virtual DbSet<Rapam> Rapams { get; set; }

    public virtual DbSet<Receitas2013Alterada> Receitas2013Alteradas { get; set; }

    public virtual DbSet<Receitas2014> Receitas2014s { get; set; }

    public virtual DbSet<Receitas2016> Receitas2016s { get; set; }

    public virtual DbSet<Receitas2021> Receitas2021s { get; set; }

    public virtual DbSet<TbAmmCancelamentoDividaFlutuante> TbAmmCancelamentoDividaFlutuantes { get; set; }

    public virtual DbSet<TbAmmComponentesComissao> TbAmmComponentesComissaos { get; set; }

    public virtual DbSet<TbAmmDevolucoesEmpenhoSubvencaoSocial> TbAmmDevolucoesEmpenhoSubvencaoSocials { get; set; }

    public virtual DbSet<TbAmmDotacaoEstadualAditivosConvenio> TbAmmDotacaoEstadualAditivosConvenios { get; set; }

    public virtual DbSet<TbAmmDotacoesEstaduaisConvenio> TbAmmDotacoesEstaduaisConvenios { get; set; }

    public virtual DbSet<TbAmmEstornosRepasseConvenio> TbAmmEstornosRepasseConvenios { get; set; }

    public virtual DbSet<TbAmmExecAntOperCredito> TbAmmExecAntOperCreditos { get; set; }

    public virtual DbSet<TbAmmExecucoesRecursosProprio> TbAmmExecucoesRecursosProprios { get; set; }

    public virtual DbSet<TbAmmFontesXconveniosAuxilio> TbAmmFontesXconveniosAuxilios { get; set; }

    public virtual DbSet<TbAmmGeracaoArquivo> TbAmmGeracaoArquivos { get; set; }

    public virtual DbSet<TbAmmGeracaoArquivosEmpenho> TbAmmGeracaoArquivosEmpenhos { get; set; }

    public virtual DbSet<TbAmmGeracaoArquivosMovimento> TbAmmGeracaoArquivosMovimentos { get; set; }

    public virtual DbSet<TbAmmGeracaoArquivosPessoa> TbAmmGeracaoArquivosPessoas { get; set; }

    public virtual DbSet<TbAmmIntervenientesConvenio> TbAmmIntervenientesConvenios { get; set; }

    public virtual DbSet<TbAmmLeisOrcamentariasIndireta> TbAmmLeisOrcamentariasIndiretas { get; set; }

    public virtual DbSet<TbAmmPgmtosExtraOrcamConvenio> TbAmmPgmtosExtraOrcamConvenios { get; set; }

    public virtual DbSet<TbAmmRessarcimentosDevolucoesSaldoConvenio> TbAmmRessarcimentosDevolucoesSaldoConvenios { get; set; }

    public virtual DbSet<TbAmmTermosAditivoConvenio> TbAmmTermosAditivoConvenios { get; set; }

    public virtual DbSet<TbAmmTipoEspecy> TbAmmTipoEspecies { get; set; }

    public virtual DbSet<TbBackUpCapRecursosContasCorrente> TbBackUpCapRecursosContasCorrentes { get; set; }

    public virtual DbSet<TbCapAditivosConvenio> TbCapAditivosConvenios { get; set; }

    public virtual DbSet<TbCapCancelamentosAditivosConvenio> TbCapCancelamentosAditivosConvenios { get; set; }

    public virtual DbSet<TbCapConvAuxPrograma> TbCapConvAuxProgramas { get; set; }

    public virtual DbSet<TbCapConvAuxProgramasConta> TbCapConvAuxProgramasContas { get; set; }

    public virtual DbSet<TbCapConvAuxProgramasRepass> TbCapConvAuxProgramasRepasses { get; set; }

    public virtual DbSet<TbCapConvAuxProgramasSituaco> TbCapConvAuxProgramasSituacoes { get; set; }

    public virtual DbSet<TbCapConvAuxProgramasTemp> TbCapConvAuxProgramasTemps { get; set; }

    public virtual DbSet<TbCapEstornosExecucaoAntecipadum> TbCapEstornosExecucaoAntecipada { get; set; }

    public virtual DbSet<TbCapExecucaoAntecipadum> TbCapExecucaoAntecipada { get; set; }

    public virtual DbSet<TbCapOrgaosRepassador> TbCapOrgaosRepassadors { get; set; }

    public virtual DbSet<TbCapRecurso> TbCapRecursos { get; set; }

    public virtual DbSet<TbCapRecursosContaContabil> TbCapRecursosContaContabils { get; set; }

    public virtual DbSet<TbCapRecursosContasCorrente> TbCapRecursosContasCorrentes { get; set; }

    public virtual DbSet<TbCapRecursosFonte> TbCapRecursosFontes { get; set; }

    public virtual DbSet<TbCapRecursosOrgaoUnidade> TbCapRecursosOrgaoUnidades { get; set; }

    public virtual DbSet<TbCapRecursosSaldosAnteriore> TbCapRecursosSaldosAnteriores { get; set; }

    public virtual DbSet<TbCapSaldoContrapartidaExecAntecipadum> TbCapSaldoContrapartidaExecAntecipada { get; set; }

    public virtual DbSet<TbCapSituaco> TbCapSituacoes { get; set; }

    public virtual DbSet<TbCapTipoContrapartidaExecucacaoAntecipadum> TbCapTipoContrapartidaExecucacaoAntecipada { get; set; }

    public virtual DbSet<TbCapTiposAditivo> TbCapTiposAditivos { get; set; }

    public virtual DbSet<TbCapTiposExecucaoAntecipadum> TbCapTiposExecucaoAntecipada { get; set; }

    public virtual DbSet<TbCntApostilamentoDotaco> TbCntApostilamentoDotacoes { get; set; }

    public virtual DbSet<TbCntApostilamentoRecurso> TbCntApostilamentoRecursos { get; set; }

    public virtual DbSet<TbCntAtosContratuai> TbCntAtosContratuais { get; set; }

    public virtual DbSet<TbCntAtosContratuaisItensLicitacao> TbCntAtosContratuaisItensLicitacaos { get; set; }

    public virtual DbSet<TbCntAtosContratuaisPublicaco> TbCntAtosContratuaisPublicacoes { get; set; }

    public virtual DbSet<TbCntContrato> TbCntContratos { get; set; }

    public virtual DbSet<TbCntContratosAbertura> TbCntContratosAberturas { get; set; }

    public virtual DbSet<TbCntContratosAssinatura> TbCntContratosAssinaturas { get; set; }

    public virtual DbSet<TbCntContratosContasContabil> TbCntContratosContasContabils { get; set; }

    public virtual DbSet<TbCntContratosDotaco> TbCntContratosDotacoes { get; set; }

    public virtual DbSet<TbCntContratosItensLicitacao> TbCntContratosItensLicitacaos { get; set; }

    public virtual DbSet<TbCntContratosParte> TbCntContratosPartes { get; set; }

    public virtual DbSet<TbCntContratosPublicacao> TbCntContratosPublicacaos { get; set; }

    public virtual DbSet<TbCntContratosRecurso> TbCntContratosRecursos { get; set; }

    public virtual DbSet<TbCntEfeitosInexecucao> TbCntEfeitosInexecucaos { get; set; }

    public virtual DbSet<TbCntNumeroAtosContratuai> TbCntNumeroAtosContratuais { get; set; }

    public virtual DbSet<TbCntOrgaosUnidadesVinculada> TbCntOrgaosUnidadesVinculadas { get; set; }

    public virtual DbSet<TbCntResponsabilidadesAdministrativa> TbCntResponsabilidadesAdministrativas { get; set; }

    public virtual DbSet<TbCntTiposAtosContratuai> TbCntTiposAtosContratuais { get; set; }

    public virtual DbSet<TbCntTiposContrato> TbCntTiposContratos { get; set; }

    public virtual DbSet<TbCntTiposGarantiaContratual> TbCntTiposGarantiaContratuals { get; set; }

    public virtual DbSet<TbCntTiposMotivoRescisaoContrato> TbCntTiposMotivoRescisaoContratos { get; set; }

    public virtual DbSet<TbCntTiposMultasContrato> TbCntTiposMultasContratos { get; set; }

    public virtual DbSet<TbCntTiposOperacaoAtosContratuai> TbCntTiposOperacaoAtosContratuais { get; set; }

    public virtual DbSet<TbCntTiposOrigemContrato> TbCntTiposOrigemContratos { get; set; }

    public virtual DbSet<TbCntTiposPartesContrato> TbCntTiposPartesContratos { get; set; }

    public virtual DbSet<TbCntTiposRedimensionamento> TbCntTiposRedimensionamentos { get; set; }

    public virtual DbSet<TbCntTiposResponsabilidadeAdm> TbCntTiposResponsabilidadeAdms { get; set; }

    public virtual DbSet<TbConSolicitacaoInscricaoCmcpublicidade> TbConSolicitacaoInscricaoCmcpublicidades { get; set; }

    public virtual DbSet<TbConSolicitacaoInscricaoCmcservico> TbConSolicitacaoInscricaoCmcservicos { get; set; }

    public virtual DbSet<TbCtcCentroCusto> TbCtcCentroCustos { get; set; }

    public virtual DbSet<TbCtcCentroCustosCriterio> TbCtcCentroCustosCriterios { get; set; }

    public virtual DbSet<TbCtcCentroCustosIten> TbCtcCentroCustosItens { get; set; }

    public virtual DbSet<TbCtcCentroCustosNaturezaDespesa> TbCtcCentroCustosNaturezaDespesas { get; set; }

    public virtual DbSet<TbCtcCentroCustosOrgaoUnidade> TbCtcCentroCustosOrgaoUnidades { get; set; }

    public virtual DbSet<TbCtcCriterio> TbCtcCriterios { get; set; }

    public virtual DbSet<TbCtcLiquidacaoCentroCusto> TbCtcLiquidacaoCentroCustos { get; set; }

    public virtual DbSet<TbCtcRateio> TbCtcRateios { get; set; }

    public virtual DbSet<TbCtcRateioCriterio> TbCtcRateioCriterios { get; set; }

    public virtual DbSet<TbCtcUnidadesMedida> TbCtcUnidadesMedidas { get; set; }

    public virtual DbSet<TbCtiAssunto> TbCtiAssuntos { get; set; }

    public virtual DbSet<TbCtiDespachoSetor> TbCtiDespachoSetors { get; set; }

    public virtual DbSet<TbCtiPergunta> TbCtiPerguntas { get; set; }

    public virtual DbSet<TbCtiQuestionario> TbCtiQuestionarios { get; set; }

    public virtual DbSet<TbCtiResposta> TbCtiRespostas { get; set; }

    public virtual DbSet<TbCtiSetore> TbCtiSetores { get; set; }

    public virtual DbSet<TbCtiSetoresServidore> TbCtiSetoresServidores { get; set; }

    public virtual DbSet<TbDspApropriacoesDespesaNaoEmpenhadum> TbDspApropriacoesDespesaNaoEmpenhada { get; set; }

    public virtual DbSet<TbDspAquisicaoBen> TbDspAquisicaoBens { get; set; }

    public virtual DbSet<TbDspAquisicaoBensEmpenho> TbDspAquisicaoBensEmpenhos { get; set; }

    public virtual DbSet<TbDspAquisicaoBensIten> TbDspAquisicaoBensItens { get; set; }

    public virtual DbSet<TbDspAquisicaoBensItensVinculo> TbDspAquisicaoBensItensVinculos { get; set; }

    public virtual DbSet<TbDspCodigosFiscaisOperacoesPrestaco> TbDspCodigosFiscaisOperacoesPrestacoes { get; set; }

    public virtual DbSet<TbDspCodigosPagamentoInss> TbDspCodigosPagamentoInsses { get; set; }

    public virtual DbSet<TbDspComponentesDespesa> TbDspComponentesDespesas { get; set; }

    public virtual DbSet<TbDspConsignaco> TbDspConsignacoes { get; set; }

    public virtual DbSet<TbDspConsignacoesIten> TbDspConsignacoesItens { get; set; }

    public virtual DbSet<TbDspConsignacoesOrdensPagamento> TbDspConsignacoesOrdensPagamentos { get; set; }

    public virtual DbSet<TbDspDespesaExtraOrcamentariaDevReceita> TbDspDespesaExtraOrcamentariaDevReceitas { get; set; }

    public virtual DbSet<TbDspDespesaExtraOrcamentarium> TbDspDespesaExtraOrcamentaria { get; set; }

    public virtual DbSet<TbDspDiaria> TbDspDiarias { get; set; }

    public virtual DbSet<TbDspDirfRtpa> TbDspDirfRtpas { get; set; }

    public virtual DbSet<TbDspDocumento> TbDspDocumentos { get; set; }

    public virtual DbSet<TbDspDocumentosFiscai> TbDspDocumentosFiscais { get; set; }

    public virtual DbSet<TbDspDocumentosFiscaisIten> TbDspDocumentosFiscaisItens { get; set; }

    public virtual DbSet<TbDspDocumentosTransaco> TbDspDocumentosTransacoes { get; set; }

    public virtual DbSet<TbDspEmpenho> TbDspEmpenhos { get; set; }

    public virtual DbSet<TbDspEmpenhoEmailEnviado> TbDspEmpenhoEmailEnviados { get; set; }

    public virtual DbSet<TbDspEmpenhosAssinaturaEletronica> TbDspEmpenhosAssinaturaEletronicas { get; set; }

    public virtual DbSet<TbDspEmpenhosCompoentesDespesa> TbDspEmpenhosCompoentesDespesas { get; set; }

    public virtual DbSet<TbDspEmpenhosIntervenco> TbDspEmpenhosIntervencoes { get; set; }

    public virtual DbSet<TbDspEmpenhosIten> TbDspEmpenhosItens { get; set; }

    public virtual DbSet<TbDspEstornoDetalheOrdemCredito> TbDspEstornoDetalheOrdemCreditos { get; set; }

    public virtual DbSet<TbDspEstornosDespesaExtraOrcamentarium> TbDspEstornosDespesaExtraOrcamentaria { get; set; }

    public virtual DbSet<TbDspEstornosEmpenho> TbDspEstornosEmpenhos { get; set; }

    public virtual DbSet<TbDspEstornosEmpenhoIten> TbDspEstornosEmpenhoItens { get; set; }

    public virtual DbSet<TbDspEstornosLiquidacao> TbDspEstornosLiquidacaos { get; set; }

    public virtual DbSet<TbDspEstornosPagamento> TbDspEstornosPagamentos { get; set; }

    public virtual DbSet<TbDspEstornosPagamentoDoctoNatureza> TbDspEstornosPagamentoDoctoNaturezas { get; set; }

    public virtual DbSet<TbDspEstornosPagamentoDocumento> TbDspEstornosPagamentoDocumentos { get; set; }

    public virtual DbSet<TbDspGp> TbDspGps { get; set; }

    public virtual DbSet<TbDspInscricaoRestosApagar> TbDspInscricaoRestosApagars { get; set; }

    public virtual DbSet<TbDspIten> TbDspItens { get; set; }

    public virtual DbSet<TbDspItensNaturezasDespesa> TbDspItensNaturezasDespesas { get; set; }

    public virtual DbSet<TbDspItensUnificacao> TbDspItensUnificacaos { get; set; }

    public virtual DbSet<TbDspLiquidacaoComunicacao> TbDspLiquidacaoComunicacaos { get; set; }

    public virtual DbSet<TbDspLiquidacaoConvenio> TbDspLiquidacaoConvenios { get; set; }

    public virtual DbSet<TbDspLiquidaco> TbDspLiquidacoes { get; set; }

    public virtual DbSet<TbDspLiquidacoesDoctosIntegrado> TbDspLiquidacoesDoctosIntegrados { get; set; }

    public virtual DbSet<TbDspLiquidacoesDoctosIten> TbDspLiquidacoesDoctosItens { get; set; }

    public virtual DbSet<TbDspLiquidacoesDocumento> TbDspLiquidacoesDocumentos { get; set; }

    public virtual DbSet<TbDspNumeracoesBaixasRap> TbDspNumeracoesBaixasRaps { get; set; }

    public virtual DbSet<TbDspOrdemCompra> TbDspOrdemCompras { get; set; }

    public virtual DbSet<TbDspOrdemComprasIten> TbDspOrdemComprasItens { get; set; }

    public virtual DbSet<TbDspOrdensPagamento> TbDspOrdensPagamentos { get; set; }

    public virtual DbSet<TbDspOrdensPagamentoDespesasExtra> TbDspOrdensPagamentoDespesasExtras { get; set; }

    public virtual DbSet<TbDspOrdensPagamentoDocumento> TbDspOrdensPagamentoDocumentos { get; set; }

    public virtual DbSet<TbDspPagamento> TbDspPagamentos { get; set; }

    public virtual DbSet<TbDspPagamentosAporte> TbDspPagamentosAportes { get; set; }

    public virtual DbSet<TbDspPagamentosAutorizacao> TbDspPagamentosAutorizacaos { get; set; }

    public virtual DbSet<TbDspPagamentosDespesaNaoEmpenhadum> TbDspPagamentosDespesaNaoEmpenhada { get; set; }

    public virtual DbSet<TbDspPagamentosDoctoNatureza> TbDspPagamentosDoctoNaturezas { get; set; }

    public virtual DbSet<TbDspPagamentosDocumento> TbDspPagamentosDocumentos { get; set; }

    public virtual DbSet<TbDspPrestacaoContasAdiantamento> TbDspPrestacaoContasAdiantamentos { get; set; }

    public virtual DbSet<TbDspRegDotacao> TbDspRegDotacaos { get; set; }

    public virtual DbSet<TbDspRegistrosNecLicitOrgaosIten> TbDspRegistrosNecLicitOrgaosItens { get; set; }

    public virtual DbSet<TbDspRegistrosNecLicitOrgaosItensAlteraco> TbDspRegistrosNecLicitOrgaosItensAlteracoes { get; set; }

    public virtual DbSet<TbDspRegistrosNecLicitacoesAnexo> TbDspRegistrosNecLicitacoesAnexos { get; set; }

    public virtual DbSet<TbDspRegistrosNecLicitacoesDotaco> TbDspRegistrosNecLicitacoesDotacoes { get; set; }

    public virtual DbSet<TbDspRegistrosNecLicitacoesIten> TbDspRegistrosNecLicitacoesItens { get; set; }

    public virtual DbSet<TbDspRegistrosNecLicitacoesOrgao> TbDspRegistrosNecLicitacoesOrgaos { get; set; }

    public virtual DbSet<TbDspRegistrosNecessidadeLicitaco> TbDspRegistrosNecessidadeLicitacoes { get; set; }

    public virtual DbSet<TbDspRetOcorrenciasGp> TbDspRetOcorrenciasGps { get; set; }

    public virtual DbSet<TbDspReversaoEstorno> TbDspReversaoEstornos { get; set; }

    public virtual DbSet<TbDspReversaoEstornosItem> TbDspReversaoEstornosItems { get; set; }

    public virtual DbSet<TbDspRm> TbDspRms { get; set; }

    public virtual DbSet<TbDspRmsIten> TbDspRmsItens { get; set; }

    public virtual DbSet<TbDspRmsMovimento> TbDspRmsMovimentos { get; set; }

    public virtual DbSet<TbDspSetoresCompra> TbDspSetoresCompras { get; set; }

    public virtual DbSet<TbDspSetoresCompraOrgaosUnidade> TbDspSetoresCompraOrgaosUnidades { get; set; }

    public virtual DbSet<TbDspSolicitacoesEmpenho> TbDspSolicitacoesEmpenhos { get; set; }

    public virtual DbSet<TbDspSolicitacoesEmpenhoCancelada> TbDspSolicitacoesEmpenhoCanceladas { get; set; }

    public virtual DbSet<TbDspSolicitacoesEmpenhoIten> TbDspSolicitacoesEmpenhoItens { get; set; }

    public virtual DbSet<TbDspSolicitacoesLiquidacao> TbDspSolicitacoesLiquidacaos { get; set; }

    public virtual DbSet<TbDspTiposConsignaco> TbDspTiposConsignacoes { get; set; }

    public virtual DbSet<TbDspTiposDocumentosFiscai> TbDspTiposDocumentosFiscais { get; set; }

    public virtual DbSet<TbDspTiposEstornoEmpenho> TbDspTiposEstornoEmpenhos { get; set; }

    public virtual DbSet<TbDspTiposObjetivoDiarium> TbDspTiposObjetivoDiaria { get; set; }

    public virtual DbSet<TbDspTiposSerieDocFiscal> TbDspTiposSerieDocFiscals { get; set; }

    public virtual DbSet<TbDspUnidadesMedidum> TbDspUnidadesMedida { get; set; }

    public virtual DbSet<TbFinArquivoDocFinanceiro> TbFinArquivoDocFinanceiros { get; set; }

    public virtual DbSet<TbFinArquivoRetorno> TbFinArquivoRetornos { get; set; }

    public virtual DbSet<TbFinArquivoRetornoDetalhe> TbFinArquivoRetornoDetalhes { get; set; }

    public virtual DbSet<TbFinAutorizacaoPagamento> TbFinAutorizacaoPagamentos { get; set; }

    public virtual DbSet<TbFinClassesOperacoesCredito> TbFinClassesOperacoesCreditos { get; set; }

    public virtual DbSet<TbFinCompensacaoDiarioTesourarium> TbFinCompensacaoDiarioTesouraria { get; set; }

    public virtual DbSet<TbFinConciliacoesBancaria> TbFinConciliacoesBancarias { get; set; }

    public virtual DbSet<TbFinConciliacoesBancariasObjeto> TbFinConciliacoesBancariasObjetos { get; set; }

    public virtual DbSet<TbFinContaContabilEstatal> TbFinContaContabilEstatals { get; set; }

    public virtual DbSet<TbFinContasContabei> TbFinContasContabeis { get; set; }

    public virtual DbSet<TbFinContasContabeisContasCorrente> TbFinContasContabeisContasCorrentes { get; set; }

    public virtual DbSet<TbFinContasContabeisCorrelacao> TbFinContasContabeisCorrelacaos { get; set; }

    public virtual DbSet<TbFinContasContabeisLancamento> TbFinContasContabeisLancamentos { get; set; }

    public virtual DbSet<TbFinContasContabeisLancamentosAnalisador> TbFinContasContabeisLancamentosAnalisadors { get; set; }

    public virtual DbSet<TbFinContasContabeisOrgaoUnidade> TbFinContasContabeisOrgaoUnidades { get; set; }

    public virtual DbSet<TbFinContasContabeisRepasse> TbFinContasContabeisRepasses { get; set; }

    public virtual DbSet<TbFinContrapartidasOpCredito> TbFinContrapartidasOpCreditos { get; set; }

    public virtual DbSet<TbFinCorrelacaoTipoMovimento> TbFinCorrelacaoTipoMovimentos { get; set; }

    public virtual DbSet<TbFinCronogramaDesembolso> TbFinCronogramaDesembolsos { get; set; }

    public virtual DbSet<TbFinDepositoJudicial> TbFinDepositoJudicials { get; set; }

    public virtual DbSet<TbFinDiarioTesourariaContaFonte> TbFinDiarioTesourariaContaFontes { get; set; }

    public virtual DbSet<TbFinDiarioTesourarium> TbFinDiarioTesouraria { get; set; }

    public virtual DbSet<TbFinDividaFundadaContasContabei> TbFinDividaFundadaContasContabeis { get; set; }

    public virtual DbSet<TbFinDividaFundadaMovimento> TbFinDividaFundadaMovimentos { get; set; }

    public virtual DbSet<TbFinDividaFundadum> TbFinDividaFundada { get; set; }

    public virtual DbSet<TbFinEstornoDetalheOrdemCredito> TbFinEstornoDetalheOrdemCreditos { get; set; }

    public virtual DbSet<TbFinEventosContaContabei> TbFinEventosContaContabeis { get; set; }

    public virtual DbSet<TbFinEventosContabei> TbFinEventosContabeis { get; set; }

    public virtual DbSet<TbFinExtratosBancario> TbFinExtratosBancarios { get; set; }

    public virtual DbSet<TbFinFluxosFinanDetalhe> TbFinFluxosFinanDetalhes { get; set; }

    public virtual DbSet<TbFinFluxosFinanceiro> TbFinFluxosFinanceiros { get; set; }

    public virtual DbSet<TbFinFontesMovimentacao> TbFinFontesMovimentacaos { get; set; }

    public virtual DbSet<TbFinFormasLancamento> TbFinFormasLancamentos { get; set; }

    public virtual DbSet<TbFinHistoricosPadrao> TbFinHistoricosPadraos { get; set; }

    public virtual DbSet<TbFinInterferenciaFinanceira> TbFinInterferenciaFinanceiras { get; set; }

    public virtual DbSet<TbFinLancamentosAbertura> TbFinLancamentosAberturas { get; set; }

    public virtual DbSet<TbFinLancamentosAberturaEncerramento> TbFinLancamentosAberturaEncerramentos { get; set; }

    public virtual DbSet<TbFinLancamentosContabeisFonte> TbFinLancamentosContabeisFontes { get; set; }

    public virtual DbSet<TbFinLancamentosEncerramento> TbFinLancamentosEncerramentos { get; set; }

    public virtual DbSet<TbFinLancamentosPartidaDobrada> TbFinLancamentosPartidaDobradas { get; set; }

    public virtual DbSet<TbFinLancamentosPermutaDividaFundadum> TbFinLancamentosPermutaDividaFundada { get; set; }

    public virtual DbSet<TbFinListaContaCorrenteOc> TbFinListaContaCorrenteOcs { get; set; }

    public virtual DbSet<TbFinNumeraRealizavelDeposito> TbFinNumeraRealizavelDepositos { get; set; }

    public virtual DbSet<TbFinNumeracoesBalancetesContabil> TbFinNumeracoesBalancetesContabils { get; set; }

    public virtual DbSet<TbFinOrdemCreditoMovimento> TbFinOrdemCreditoMovimentos { get; set; }

    public virtual DbSet<TbFinOrdensCredito> TbFinOrdensCreditos { get; set; }

    public virtual DbSet<TbFinOrdensCreditoNaoProcessada> TbFinOrdensCreditoNaoProcessadas { get; set; }

    public virtual DbSet<TbFinOrdensCreditosDetalhe> TbFinOrdensCreditosDetalhes { get; set; }

    public virtual DbSet<TbFinOrgaosConfiguracaoRepass> TbFinOrgaosConfiguracaoRepasses { get; set; }

    public virtual DbSet<TbFinPadraoContaCorrente> TbFinPadraoContaCorrentes { get; set; }

    public virtual DbSet<TbFinPadraoContaCorrenteContaContabil> TbFinPadraoContaCorrenteContaContabils { get; set; }

    public virtual DbSet<TbFinRealizavelLancamentoPessoa> TbFinRealizavelLancamentoPessoas { get; set; }

    public virtual DbSet<TbFinRegularizacaoDiarioTesourarium> TbFinRegularizacaoDiarioTesouraria { get; set; }

    public virtual DbSet<TbFinRemessaGp> TbFinRemessaGps { get; set; }

    public virtual DbSet<TbFinSaldoInicialContaDeposito> TbFinSaldoInicialContaDepositos { get; set; }

    public virtual DbSet<TbFinSaldoInicialPadraoContaCorrente> TbFinSaldoInicialPadraoContaCorrentes { get; set; }

    public virtual DbSet<TbFinSaldosMensaisContasContabei> TbFinSaldosMensaisContasContabeis { get; set; }

    public virtual DbSet<TbFinSaldosMensaisContasCorrente> TbFinSaldosMensaisContasCorrentes { get; set; }

    public virtual DbSet<TbFinTipoContaPassivoPermanente> TbFinTipoContaPassivoPermanentes { get; set; }

    public virtual DbSet<TbFinTipoContrapartidaOpCredito> TbFinTipoContrapartidaOpCreditos { get; set; }

    public virtual DbSet<TbFinTipoFinanceiroPatrimonial> TbFinTipoFinanceiroPatrimonials { get; set; }

    public virtual DbSet<TbFinTipoMovimentoContabil> TbFinTipoMovimentoContabils { get; set; }

    public virtual DbSet<TbFinTipoMovtoNumeraRealizavelDeposito> TbFinTipoMovtoNumeraRealizavelDepositos { get; set; }

    public virtual DbSet<TbFinTipoOperacaoProgramacaoFinanceira> TbFinTipoOperacaoProgramacaoFinanceiras { get; set; }

    public virtual DbSet<TbFinTipoPermutaStatusDividum> TbFinTipoPermutaStatusDivida { get; set; }

    public virtual DbSet<TbFinTipoVariacaoQualitativa> TbFinTipoVariacaoQualitativas { get; set; }

    public virtual DbSet<TbFinTiposConciliacao> TbFinTiposConciliacaos { get; set; }

    public virtual DbSet<TbFinTiposContasContabeisDividaFundadum> TbFinTiposContasContabeisDividaFundada { get; set; }

    public virtual DbSet<TbFinTiposDocumentoFinanceiro> TbFinTiposDocumentoFinanceiros { get; set; }

    public virtual DbSet<TbFinTiposOperacoesFinanceira> TbFinTiposOperacoesFinanceiras { get; set; }

    public virtual DbSet<TbFinTiposServico> TbFinTiposServicos { get; set; }

    public virtual DbSet<TbFpgGrupoPessoalNatureza> TbFpgGrupoPessoalNaturezas { get; set; }

    public virtual DbSet<TbFpgGruposPessoal> TbFpgGruposPessoals { get; set; }

    public virtual DbSet<TbFpgProvento> TbFpgProventos { get; set; }

    public virtual DbSet<TbFpgProventosDesconto> TbFpgProventosDescontos { get; set; }

    public virtual DbSet<TbGerAgencia> TbGerAgencias { get; set; }

    public virtual DbSet<TbGerAtributosDinamico> TbGerAtributosDinamicos { get; set; }

    public virtual DbSet<TbGerBairro> TbGerBairros { get; set; }

    public virtual DbSet<TbGerBanco> TbGerBancos { get; set; }

    public virtual DbSet<TbGerCargo> TbGerCargos { get; set; }

    public virtual DbSet<TbGerCargosOrdenadore> TbGerCargosOrdenadores { get; set; }

    public virtual DbSet<TbGerCargosServidore> TbGerCargosServidores { get; set; }

    public virtual DbSet<TbGerCategoriasPessoa> TbGerCategoriasPessoas { get; set; }

    public virtual DbSet<TbGerCidade> TbGerCidades { get; set; }

    public virtual DbSet<TbGerCidadesCdIbge> TbGerCidadesCdIbges { get; set; }

    public virtual DbSet<TbGerCondicoesPagamento> TbGerCondicoesPagamentos { get; set; }

    public virtual DbSet<TbGerConsorciosMunicipio> TbGerConsorciosMunicipios { get; set; }

    public virtual DbSet<TbGerContaCorrenteFonte> TbGerContaCorrenteFontes { get; set; }

    public virtual DbSet<TbGerContaCorrenteGp> TbGerContaCorrenteGps { get; set; }

    public virtual DbSet<TbGerContasCorrOrgaosUnidade> TbGerContasCorrOrgaosUnidades { get; set; }

    public virtual DbSet<TbGerContasCorrente> TbGerContasCorrentes { get; set; }

    public virtual DbSet<TbGerContasCorrenteBaixa> TbGerContasCorrenteBaixas { get; set; }

    public virtual DbSet<TbGerContasCorrenteTransfDiversa> TbGerContasCorrenteTransfDiversas { get; set; }

    public virtual DbSet<TbGerContasCorrentesResponsavei> TbGerContasCorrentesResponsaveis { get; set; }

    public virtual DbSet<TbGerContasCorrentesVinculo> TbGerContasCorrentesVinculos { get; set; }

    public virtual DbSet<TbGerEmpresasGovAnosContabil> TbGerEmpresasGovAnosContabils { get; set; }

    public virtual DbSet<TbGerEmpresasGoverno> TbGerEmpresasGovernos { get; set; }

    public virtual DbSet<TbGerEmpresasGovernosOrgaosUnidade> TbGerEmpresasGovernosOrgaosUnidades { get; set; }

    public virtual DbSet<TbGerEndereco> TbGerEnderecos { get; set; }

    public virtual DbSet<TbGerFormataCampo> TbGerFormataCampos { get; set; }

    public virtual DbSet<TbGerFormataControleLeiAto> TbGerFormataControleLeiAtos { get; set; }

    public virtual DbSet<TbGerFusaoCisaoExtincaoEmpresa> TbGerFusaoCisaoExtincaoEmpresas { get; set; }

    public virtual DbSet<TbGerLogradouro> TbGerLogradouros { get; set; }

    public virtual DbSet<TbGerOrgaoOficialPublicacao> TbGerOrgaoOficialPublicacaos { get; set; }

    public virtual DbSet<TbGerPaise> TbGerPaises { get; set; }

    public virtual DbSet<TbGerPessoa> TbGerPessoas { get; set; }

    public virtual DbSet<TbGerPessoasAlteraco> TbGerPessoasAlteracoes { get; set; }

    public virtual DbSet<TbGerPessoasAtributo> TbGerPessoasAtributos { get; set; }

    public virtual DbSet<TbGerPessoasCategoria> TbGerPessoasCategorias { get; set; }

    public virtual DbSet<TbGerPessoasEnviadasTce> TbGerPessoasEnviadasTces { get; set; }

    public virtual DbSet<TbGerPessoasResponsavel> TbGerPessoasResponsavels { get; set; }

    public virtual DbSet<TbGerPrazosEntrega> TbGerPrazosEntregas { get; set; }

    public virtual DbSet<TbGerServidore> TbGerServidores { get; set; }

    public virtual DbSet<TbGerServidoresContaContabil> TbGerServidoresContaContabils { get; set; }

    public virtual DbSet<TbGerTipoInvestimento> TbGerTipoInvestimentos { get; set; }

    public virtual DbSet<TbGerTiposAreaConsorcio> TbGerTiposAreaConsorcios { get; set; }

    public virtual DbSet<TbGerTiposBaixaResponsavel> TbGerTiposBaixaResponsavels { get; set; }

    public virtual DbSet<TbGerTiposCargoFuncao> TbGerTiposCargoFuncaos { get; set; }

    public virtual DbSet<TbGerTiposContaBancarium> TbGerTiposContaBancaria { get; set; }

    public virtual DbSet<TbGerTiposNaturezaJuridicaConsorcio> TbGerTiposNaturezaJuridicaConsorcios { get; set; }

    public virtual DbSet<TbGerTiposOrgaoOficial> TbGerTiposOrgaoOficials { get; set; }

    public virtual DbSet<TbGerTiposRegistroQuadroSocietarioEmpresa> TbGerTiposRegistroQuadroSocietarioEmpresas { get; set; }

    public virtual DbSet<TbIntIntegracaoTributario> TbIntIntegracaoTributarios { get; set; }

    public virtual DbSet<TbIntObjetosPatrimonio> TbIntObjetosPatrimonios { get; set; }

    public virtual DbSet<TbIntPatrimonioMovimentaco> TbIntPatrimonioMovimentacoes { get; set; }

    public virtual DbSet<TbIpmContribuico> TbIpmContribuicoes { get; set; }

    public virtual DbSet<TbIpmEventoRubrica> TbIpmEventoRubricas { get; set; }

    public virtual DbSet<TbIpmFinanceiroFolha> TbIpmFinanceiroFolhas { get; set; }

    public virtual DbSet<TbIpmGuiaRecolhimento> TbIpmGuiaRecolhimentos { get; set; }

    public virtual DbSet<TbIpmOrgaoFolha> TbIpmOrgaoFolhas { get; set; }

    public virtual DbSet<TbIpmPessoaFolha> TbIpmPessoaFolhas { get; set; }

    public virtual DbSet<TbIpmSeguradoFolha> TbIpmSeguradoFolhas { get; set; }

    public virtual DbSet<TbIpmTipoConsignacao> TbIpmTipoConsignacaos { get; set; }

    public virtual DbSet<TbIpmUnidadeFolha> TbIpmUnidadeFolhas { get; set; }

    public virtual DbSet<TbIpmUnidadeGiiG> TbIpmUnidadeGiiGs { get; set; }

    public virtual DbSet<TbLdoCompMetasAtuaisExercAnterior> TbLdoCompMetasAtuaisExercAnteriors { get; set; }

    public virtual DbSet<TbLdoCronogFinContingencium> TbLdoCronogFinContingencia { get; set; }

    public virtual DbSet<TbLdoCronogFinGrupoFonte> TbLdoCronogFinGrupoFontes { get; set; }

    public virtual DbSet<TbLdoDemCumpMetasExercAnterior> TbLdoDemCumpMetasExercAnteriors { get; set; }

    public virtual DbSet<TbLdoDemEvolucaoPatrimonioLiquido> TbLdoDemEvolucaoPatrimonioLiquidos { get; set; }

    public virtual DbSet<TbLdoDemEvolucaoReceitum> TbLdoDemEvolucaoReceita { get; set; }

    public virtual DbSet<TbLdoDemExpansaoDespContinuada> TbLdoDemExpansaoDespContinuadas { get; set; }

    public virtual DbSet<TbLdoDemMetasAnuai> TbLdoDemMetasAnuais { get; set; }

    public virtual DbSet<TbLdoDemOrigAplicRecAlienacaoBen> TbLdoDemOrigAplicRecAlienacaoBens { get; set; }

    public virtual DbSet<TbLdoDemRenunciaReceitum> TbLdoDemRenunciaReceita { get; set; }

    public virtual DbSet<TbLdoDemRiscosFiscai> TbLdoDemRiscosFiscais { get; set; }

    public virtual DbSet<TbLdoLimitesAnual> TbLdoLimitesAnuals { get; set; }

    public virtual DbSet<TbLdoMetasProgramasAcoesPpa> TbLdoMetasProgramasAcoesPpas { get; set; }

    public virtual DbSet<TbLdoModalidadeRenuncium> TbLdoModalidadeRenuncia { get; set; }

    public virtual DbSet<TbLdoProjAtuarialRpp> TbLdoProjAtuarialRpps { get; set; }

    public virtual DbSet<TbLdoProjetosAndamento> TbLdoProjetosAndamentos { get; set; }

    public virtual DbSet<TbLdoReceitasDespesasRpp> TbLdoReceitasDespesasRpps { get; set; }

    public virtual DbSet<TbLdoReceitasProjecao> TbLdoReceitasProjecaos { get; set; }

    public virtual DbSet<TbLdoTiposPassivosRisco> TbLdoTiposPassivosRiscos { get; set; }

    public virtual DbSet<TbLdoTiposRenuncium> TbLdoTiposRenuncia { get; set; }

    public virtual DbSet<TbLicAtosNomeacaoComissao> TbLicAtosNomeacaoComissaos { get; set; }

    public virtual DbSet<TbLicAtosNomeacaoComissaoPessoa> TbLicAtosNomeacaoComissaoPessoas { get; set; }

    public virtual DbSet<TbLicClassificacoesObjeto> TbLicClassificacoesObjetos { get; set; }

    public virtual DbSet<TbLicClausula> TbLicClausulas { get; set; }

    public virtual DbSet<TbLicComposicoesComissao> TbLicComposicoesComissaos { get; set; }

    public virtual DbSet<TbLicContratoOrgaoOficialPublicacao> TbLicContratoOrgaoOficialPublicacaos { get; set; }

    public virtual DbSet<TbLicCotacaoIten> TbLicCotacaoItens { get; set; }

    public virtual DbSet<TbLicCotacaoItensVencedorCancelado> TbLicCotacaoItensVencedorCancelados { get; set; }

    public virtual DbSet<TbLicCotacaoSimple> TbLicCotacaoSimples { get; set; }

    public virtual DbSet<TbLicCrcf> TbLicCrcfs { get; set; }

    public virtual DbSet<TbLicDoctosApresentado> TbLicDoctosApresentados { get; set; }

    public virtual DbSet<TbLicDoctosCrcf> TbLicDoctosCrcfs { get; set; }

    public virtual DbSet<TbLicDotaco> TbLicDotacoes { get; set; }

    public virtual DbSet<TbLicEspeciesBensServico> TbLicEspeciesBensServicos { get; set; }

    public virtual DbSet<TbLicFaseLance> TbLicFaseLances { get; set; }

    public virtual DbSet<TbLicItensOcorrencia> TbLicItensOcorrencias { get; set; }

    public virtual DbSet<TbLicLicitacaoTecnica> TbLicLicitacaoTecnicas { get; set; }

    public virtual DbSet<TbLicLicitaco> TbLicLicitacoes { get; set; }

    public virtual DbSet<TbLicLicitacoesAbertura> TbLicLicitacoesAberturas { get; set; }

    public virtual DbSet<TbLicLicitacoesAnexo> TbLicLicitacoesAnexos { get; set; }

    public virtual DbSet<TbLicLicitacoesDocumento> TbLicLicitacoesDocumentos { get; set; }

    public virtual DbSet<TbLicLicitacoesDocumentosSalvo> TbLicLicitacoesDocumentosSalvos { get; set; }

    public virtual DbSet<TbLicLicitacoesIten> TbLicLicitacoesItens { get; set; }

    public virtual DbSet<TbLicLicitacoesItensLote> TbLicLicitacoesItensLotes { get; set; }

    public virtual DbSet<TbLicLicitacoesRepublicaco> TbLicLicitacoesRepublicacoes { get; set; }

    public virtual DbSet<TbLicLicitacoesTce> TbLicLicitacoesTces { get; set; }

    public virtual DbSet<TbLicLicitacoesUsuario> TbLicLicitacoesUsuarios { get; set; }

    public virtual DbSet<TbLicLimite> TbLicLimites { get; set; }

    public virtual DbSet<TbLicLocai> TbLicLocais { get; set; }

    public virtual DbSet<TbLicModalidade> TbLicModalidades { get; set; }

    public virtual DbSet<TbLicModelosDocto> TbLicModelosDoctos { get; set; }

    public virtual DbSet<TbLicMovimentacoesParecer> TbLicMovimentacoesParecers { get; set; }

    public virtual DbSet<TbLicMovimentosSituaco> TbLicMovimentosSituacoes { get; set; }

    public virtual DbSet<TbLicMovimentosSituacoesImportaAm> TbLicMovimentosSituacoesImportaAms { get; set; }

    public virtual DbSet<TbLicNaturezasCargosServidore> TbLicNaturezasCargosServidores { get; set; }

    public virtual DbSet<TbLicNaturezasProcedimento> TbLicNaturezasProcedimentos { get; set; }

    public virtual DbSet<TbLicParecere> TbLicPareceres { get; set; }

    public virtual DbSet<TbLicPareceresAnexo> TbLicPareceresAnexos { get; set; }

    public virtual DbSet<TbLicParticipante> TbLicParticipantes { get; set; }

    public virtual DbSet<TbLicParticipanteTecnica> TbLicParticipanteTecnicas { get; set; }

    public virtual DbSet<TbLicParticipantesLotesCotacao> TbLicParticipantesLotesCotacaos { get; set; }

    public virtual DbSet<TbLicParticipantesSituacao> TbLicParticipantesSituacaos { get; set; }

    public virtual DbSet<TbLicPenalidade> TbLicPenalidades { get; set; }

    public virtual DbSet<TbLicPesquisaCotacaoIten> TbLicPesquisaCotacaoItens { get; set; }

    public virtual DbSet<TbLicPessoasInidonea> TbLicPessoasInidoneas { get; set; }

    public virtual DbSet<TbLicPessoasInidoneasMovimento> TbLicPessoasInidoneasMovimentos { get; set; }

    public virtual DbSet<TbLicProcessosAdministrativo> TbLicProcessosAdministrativos { get; set; }

    public virtual DbSet<TbLicPublicaco> TbLicPublicacoes { get; set; }

    public virtual DbSet<TbLicRecurso> TbLicRecursos { get; set; }

    public virtual DbSet<TbLicRegimesExecuco> TbLicRegimesExecucoes { get; set; }

    public virtual DbSet<TbLicSituaco> TbLicSituacoes { get; set; }

    public virtual DbSet<TbLicTecnica> TbLicTecnicas { get; set; }

    public virtual DbSet<TbLicTecnicaOpco> TbLicTecnicaOpcoes { get; set; }

    public virtual DbSet<TbLicTipoCrcf> TbLicTipoCrcfs { get; set; }

    public virtual DbSet<TbLicTiposAtribuicaoComisso> TbLicTiposAtribuicaoComissoes { get; set; }

    public virtual DbSet<TbLicTiposAvaliaco> TbLicTiposAvaliacoes { get; set; }

    public virtual DbSet<TbLicTiposCargoFuncao> TbLicTiposCargoFuncaos { get; set; }

    public virtual DbSet<TbLicTiposComissao> TbLicTiposComissaos { get; set; }

    public virtual DbSet<TbLicTiposCompra> TbLicTiposCompras { get; set; }

    public virtual DbSet<TbLicTiposDocumento> TbLicTiposDocumentos { get; set; }

    public virtual DbSet<TbLicTiposEntregasProduto> TbLicTiposEntregasProdutos { get; set; }

    public virtual DbSet<TbLicTiposSituacoesParticipante> TbLicTiposSituacoesParticipantes { get; set; }

    public virtual DbSet<TbLicVeiculosPublicaco> TbLicVeiculosPublicacoes { get; set; }

    public virtual DbSet<TbOrcAlteracoesDotacoesTransferencium> TbOrcAlteracoesDotacoesTransferencia { get; set; }

    public virtual DbSet<TbOrcAlteracoesOrcExterna> TbOrcAlteracoesOrcExternas { get; set; }

    public virtual DbSet<TbOrcAlteracoesOrcamentaria> TbOrcAlteracoesOrcamentarias { get; set; }

    public virtual DbSet<TbOrcArtigosCreditoAdicional> TbOrcArtigosCreditoAdicionals { get; set; }

    public virtual DbSet<TbOrcArtigosExclusaoCreditoAdicional> TbOrcArtigosExclusaoCreditoAdicionals { get; set; }

    public virtual DbSet<TbOrcAtosAlteraco> TbOrcAtosAlteracoes { get; set; }

    public virtual DbSet<TbOrcAtosAlteracoesErrata> TbOrcAtosAlteracoesErratas { get; set; }

    public virtual DbSet<TbOrcAtualizacoesMonetOrcamentoDotaco> TbOrcAtualizacoesMonetOrcamentoDotacoes { get; set; }

    public virtual DbSet<TbOrcAtualizacoesMonetOrcamentoReceita> TbOrcAtualizacoesMonetOrcamentoReceitas { get; set; }

    public virtual DbSet<TbOrcAtualizacoesMonetariaOrcamento> TbOrcAtualizacoesMonetariaOrcamentos { get; set; }

    public virtual DbSet<TbOrcAudienciaAnexo> TbOrcAudienciaAnexos { get; set; }

    public virtual DbSet<TbOrcAudienciaPublica> TbOrcAudienciaPublicas { get; set; }

    public virtual DbSet<TbOrcAutorizacaoCreditoAdicional> TbOrcAutorizacaoCreditoAdicionals { get; set; }

    public virtual DbSet<TbOrcConsolidacaoOrcamento> TbOrcConsolidacaoOrcamentos { get; set; }

    public virtual DbSet<TbOrcDescentralizacoesCredito> TbOrcDescentralizacoesCreditos { get; set; }

    public virtual DbSet<TbOrcDescentralizacoesCreditosDotaco> TbOrcDescentralizacoesCreditosDotacoes { get; set; }

    public virtual DbSet<TbOrcDotaco> TbOrcDotacoes { get; set; }

    public virtual DbSet<TbOrcDotacoesBloqueiosManual> TbOrcDotacoesBloqueiosManuals { get; set; }

    public virtual DbSet<TbOrcDotacoesMovimentacao> TbOrcDotacoesMovimentacaos { get; set; }

    public virtual DbSet<TbOrcDotacoesSubAcoesTarefa> TbOrcDotacoesSubAcoesTarefas { get; set; }

    public virtual DbSet<TbOrcEstornosDotaco> TbOrcEstornosDotacoes { get; set; }

    public virtual DbSet<TbOrcFonte> TbOrcFontes { get; set; }

    public virtual DbSet<TbOrcFunco> TbOrcFuncoes { get; set; }

    public virtual DbSet<TbOrcGruposQuota> TbOrcGruposQuotas { get; set; }

    public virtual DbSet<TbOrcGruposQuotasNatureza> TbOrcGruposQuotasNaturezas { get; set; }

    public virtual DbSet<TbOrcLeiCreditoAdicional> TbOrcLeiCreditoAdicionals { get; set; }

    public virtual DbSet<TbOrcLeisAlteracaoOrcamentarium> TbOrcLeisAlteracaoOrcamentaria { get; set; }

    public virtual DbSet<TbOrcLimitesCreditoAdicional> TbOrcLimitesCreditoAdicionals { get; set; }

    public virtual DbSet<TbOrcMetasArrecadacao> TbOrcMetasArrecadacaos { get; set; }

    public virtual DbSet<TbOrcNaturezasDespesa> TbOrcNaturezasDespesas { get; set; }

    public virtual DbSet<TbOrcOrgao> TbOrcOrgaos { get; set; }

    public virtual DbSet<TbOrcPercentualRptDemoRecDsp> TbOrcPercentualRptDemoRecDsps { get; set; }

    public virtual DbSet<TbOrcPrograma> TbOrcProgramas { get; set; }

    public virtual DbSet<TbOrcProgramasAco> TbOrcProgramasAcoes { get; set; }

    public virtual DbSet<TbOrcProgramasAcoesLoa> TbOrcProgramasAcoesLoas { get; set; }

    public virtual DbSet<TbOrcProgramasAcoesLoaSubAcoesTarefa> TbOrcProgramasAcoesLoaSubAcoesTarefas { get; set; }

    public virtual DbSet<TbOrcQuotasOrcamentaria> TbOrcQuotasOrcamentarias { get; set; }

    public virtual DbSet<TbOrcReceita> TbOrcReceitas { get; set; }

    public virtual DbSet<TbOrcReceitasEstornoOrcamento> TbOrcReceitasEstornoOrcamentos { get; set; }

    public virtual DbSet<TbOrcReceitasEstornoOrcamentoFonte> TbOrcReceitasEstornoOrcamentoFontes { get; set; }

    public virtual DbSet<TbOrcReceitasFonte> TbOrcReceitasFontes { get; set; }

    public virtual DbSet<TbOrcReceitasFontesDesmembra> TbOrcReceitasFontesDesmembras { get; set; }

    public virtual DbSet<TbOrcReceitasFontesOperacao> TbOrcReceitasFontesOperacaos { get; set; }

    public virtual DbSet<TbOrcReceitasOrcamentoAnual> TbOrcReceitasOrcamentoAnuals { get; set; }

    public virtual DbSet<TbOrcReceitasOrcamentoAnualFonte> TbOrcReceitasOrcamentoAnualFontes { get; set; }

    public virtual DbSet<TbOrcReceitasReestimada> TbOrcReceitasReestimadas { get; set; }

    public virtual DbSet<TbOrcReceitasReestimadasFonte> TbOrcReceitasReestimadasFontes { get; set; }

    public virtual DbSet<TbOrcSolicitacoesQuota> TbOrcSolicitacoesQuotas { get; set; }

    public virtual DbSet<TbOrcSolicitacoesSaldoDotacao> TbOrcSolicitacoesSaldoDotacaos { get; set; }

    public virtual DbSet<TbOrcSolicitacoesSuplementacao> TbOrcSolicitacoesSuplementacaos { get; set; }

    public virtual DbSet<TbOrcSolicitacoesSuplementacaoDotaco> TbOrcSolicitacoesSuplementacaoDotacoes { get; set; }

    public virtual DbSet<TbOrcSubAcaoDistrito> TbOrcSubAcaoDistritos { get; set; }

    public virtual DbSet<TbOrcSubAcoesMeta> TbOrcSubAcoesMetas { get; set; }

    public virtual DbSet<TbOrcSubAcoesTarefa> TbOrcSubAcoesTarefas { get; set; }

    public virtual DbSet<TbOrcSubFunco> TbOrcSubFuncoes { get; set; }

    public virtual DbSet<TbOrcTipoAtualizacaoOrcamentarium> TbOrcTipoAtualizacaoOrcamentaria { get; set; }

    public virtual DbSet<TbOrcTipoCreditoAdicional> TbOrcTipoCreditoAdicionals { get; set; }

    public virtual DbSet<TbOrcTipoCreditoAdicionalEscopo> TbOrcTipoCreditoAdicionalEscopos { get; set; }

    public virtual DbSet<TbOrcTipoCreditoInicial> TbOrcTipoCreditoInicials { get; set; }

    public virtual DbSet<TbOrcTiposAco> TbOrcTiposAcoes { get; set; }

    public virtual DbSet<TbOrcTiposAlteracaoOrcamentarium> TbOrcTiposAlteracaoOrcamentaria { get; set; }

    public virtual DbSet<TbOrcTiposAtoAlteracao> TbOrcTiposAtoAlteracaos { get; set; }

    public virtual DbSet<TbOrcTiposBasesCalculosCredito> TbOrcTiposBasesCalculosCreditos { get; set; }

    public virtual DbSet<TbOrcTiposCalculosCredito> TbOrcTiposCalculosCreditos { get; set; }

    public virtual DbSet<TbOrcTiposExclusaoCreditoAdicional> TbOrcTiposExclusaoCreditoAdicionals { get; set; }

    public virtual DbSet<TbOrcTiposOperacaoCreditoAdicional> TbOrcTiposOperacaoCreditoAdicionals { get; set; }

    public virtual DbSet<TbOrcTiposOperacoesLoa> TbOrcTiposOperacoesLoas { get; set; }

    public virtual DbSet<TbOrcTiposOperacoesReceitum> TbOrcTiposOperacoesReceita { get; set; }

    public virtual DbSet<TbOrcTiposRecurso> TbOrcTiposRecursos { get; set; }

    public virtual DbSet<TbOrcUnidade> TbOrcUnidades { get; set; }

    public virtual DbSet<TbOrcUsuariosOrgaosUnidade> TbOrcUsuariosOrgaosUnidades { get; set; }

    public virtual DbSet<TbParAssinaturasDocumento> TbParAssinaturasDocumentos { get; set; }

    public virtual DbSet<TbParCargosServidoresAssinatura> TbParCargosServidoresAssinaturas { get; set; }

    public virtual DbSet<TbParControlesImpressao> TbParControlesImpressaos { get; set; }

    public virtual DbSet<TbParIntegracaoParametro> TbParIntegracaoParametros { get; set; }

    public virtual DbSet<TbParIntegracoesContabei> TbParIntegracoesContabeis { get; set; }

    public virtual DbSet<TbParNumeracaoObjeto> TbParNumeracaoObjetos { get; set; }

    public virtual DbSet<TbParTiposIntegracao> TbParTiposIntegracaos { get; set; }

    public virtual DbSet<TbPcmAgentesPolitico> TbPcmAgentesPoliticos { get; set; }

    public virtual DbSet<TbPcmAtosAgentesPolitico> TbPcmAtosAgentesPoliticos { get; set; }

    public virtual DbSet<TbPcmHistoricoAtosAgentesPolitico> TbPcmHistoricoAtosAgentesPoliticos { get; set; }

    public virtual DbSet<TbPcmRemuneracaoAgentesPolitico> TbPcmRemuneracaoAgentesPoliticos { get; set; }

    public virtual DbSet<TbPcmValoresDevidosPrevidencium> TbPcmValoresDevidosPrevidencia { get; set; }

    public virtual DbSet<TbPcmValoresRecolhidosPrevidencium> TbPcmValoresRecolhidosPrevidencia { get; set; }

    public virtual DbSet<TbPlaAcao2012> TbPlaAcao2012s { get; set; }

    public virtual DbSet<TbPlaAco> TbPlaAcoes { get; set; }

    public virtual DbSet<TbPlaAcoesAvaliacoesAno> TbPlaAcoesAvaliacoesAnos { get; set; }

    public virtual DbSet<TbPlaAcoesCorrelacao> TbPlaAcoesCorrelacaos { get; set; }

    public virtual DbSet<TbPlaAcoesMeta> TbPlaAcoesMetas { get; set; }

    public virtual DbSet<TbPlaAcoesMetasMovimento> TbPlaAcoesMetasMovimentos { get; set; }

    public virtual DbSet<TbPlaAcoesMetasMovimentosFonte> TbPlaAcoesMetasMovimentosFontes { get; set; }

    public virtual DbSet<TbPlaAcoesMovimento> TbPlaAcoesMovimentos { get; set; }

    public virtual DbSet<TbPlaAcoesMovimentosBkp> TbPlaAcoesMovimentosBkps { get; set; }

    public virtual DbSet<TbPlaAcoesMovimentosCorrelaco> TbPlaAcoesMovimentosCorrelacoes { get; set; }

    public virtual DbSet<TbPlaAcoesPrograma> TbPlaAcoesProgramas { get; set; }

    public virtual DbSet<TbPlaAcoesSemCorrelacao> TbPlaAcoesSemCorrelacaos { get; set; }

    public virtual DbSet<TbPlaAreasProjecaoReceitum> TbPlaAreasProjecaoReceita { get; set; }

    public virtual DbSet<TbPlaConstrucaoProgramasObjetivo> TbPlaConstrucaoProgramasObjetivos { get; set; }

    public virtual DbSet<TbPlaCorrelacaoAcaoLoaLdo> TbPlaCorrelacaoAcaoLoaLdos { get; set; }

    public virtual DbSet<TbPlaEixo> TbPlaEixos { get; set; }

    public virtual DbSet<TbPlaEixosPrograma> TbPlaEixosProgramas { get; set; }

    public virtual DbSet<TbPlaEscopo> TbPlaEscopos { get; set; }

    public virtual DbSet<TbPlaIndicadore> TbPlaIndicadores { get; set; }

    public virtual DbSet<TbPlaIndicadoresAvaliacoesAno> TbPlaIndicadoresAvaliacoesAnos { get; set; }

    public virtual DbSet<TbPlaIndicadoresMovimento> TbPlaIndicadoresMovimentos { get; set; }

    public virtual DbSet<TbPlaIndicadoresObjetivoMilenioAvaliacao> TbPlaIndicadoresObjetivoMilenioAvaliacaos { get; set; }

    public virtual DbSet<TbPlaIndicadoresSimplificado> TbPlaIndicadoresSimplificados { get; set; }

    public virtual DbSet<TbPlaIniciativa> TbPlaIniciativas { get; set; }

    public virtual DbSet<TbPlaLocalizadore> TbPlaLocalizadores { get; set; }

    public virtual DbSet<TbPlaMacroObjetivo> TbPlaMacroObjetivos { get; set; }

    public virtual DbSet<TbPlaMedidaEsperadaIndicador> TbPlaMedidaEsperadaIndicadors { get; set; }

    public virtual DbSet<TbPlaNaturezasAcao> TbPlaNaturezasAcaos { get; set; }

    public virtual DbSet<TbPlaNaturezasIndicador> TbPlaNaturezasIndicadors { get; set; }

    public virtual DbSet<TbPlaObjetivo> TbPlaObjetivos { get; set; }

    public virtual DbSet<TbPlaObjetivosDesenvSustentavel> TbPlaObjetivosDesenvSustentavels { get; set; }

    public virtual DbSet<TbPlaObjetivosMeta> TbPlaObjetivosMetas { get; set; }

    public virtual DbSet<TbPlaObjetivosMetasLocalizadore> TbPlaObjetivosMetasLocalizadores { get; set; }

    public virtual DbSet<TbPlaObjetivosMilenio> TbPlaObjetivosMilenios { get; set; }

    public virtual DbSet<TbPlaObjetivosMilenioAvaliacao> TbPlaObjetivosMilenioAvaliacaos { get; set; }

    public virtual DbSet<TbPlaObjetivosMilenioMedidasEsperada> TbPlaObjetivosMilenioMedidasEsperadas { get; set; }

    public virtual DbSet<TbPlaObjetivosPrograma> TbPlaObjetivosProgramas { get; set; }

    public virtual DbSet<TbPlaProduto> TbPlaProdutos { get; set; }

    public virtual DbSet<TbPlaProdutosPadrao> TbPlaProdutosPadraos { get; set; }

    public virtual DbSet<TbPlaPrograma> TbPlaProgramas { get; set; }

    public virtual DbSet<TbPlaProgramaIndicador> TbPlaProgramaIndicadors { get; set; }

    public virtual DbSet<TbPlaProgramasMovimentaco> TbPlaProgramasMovimentacoes { get; set; }

    public virtual DbSet<TbPlaProgramasMovimento> TbPlaProgramasMovimentos { get; set; }

    public virtual DbSet<TbPlaProgramasObjetivo> TbPlaProgramasObjetivos { get; set; }

    public virtual DbSet<TbPlaProgramasObjetivosMeta> TbPlaProgramasObjetivosMetas { get; set; }

    public virtual DbSet<TbPlaProgramasPermissoesOrgao> TbPlaProgramasPermissoesOrgaos { get; set; }

    public virtual DbSet<TbPlaProgramasValore> TbPlaProgramasValores { get; set; }

    public virtual DbSet<TbPlaProjecoesReceita> TbPlaProjecoesReceitas { get; set; }

    public virtual DbSet<TbPlaProjecoesReceitasFonte> TbPlaProjecoesReceitasFontes { get; set; }

    public virtual DbSet<TbPlaProjetosAtividade> TbPlaProjetosAtividades { get; set; }

    public virtual DbSet<TbPlaProjetosAtividadesAco> TbPlaProjetosAtividadesAcoes { get; set; }

    public virtual DbSet<TbPlaPublicosAlvo> TbPlaPublicosAlvos { get; set; }

    public virtual DbSet<TbPlaRotinaIntegracao> TbPlaRotinaIntegracaos { get; set; }

    public virtual DbSet<TbPlaTiposAcao> TbPlaTiposAcaos { get; set; }

    public virtual DbSet<TbPlaTiposEscopo> TbPlaTiposEscopos { get; set; }

    public virtual DbSet<TbPlaTiposExecucaoAcao> TbPlaTiposExecucaoAcaos { get; set; }

    public virtual DbSet<TbPlaTiposIndicadore> TbPlaTiposIndicadores { get; set; }

    public virtual DbSet<TbPlaTiposMovimento> TbPlaTiposMovimentos { get; set; }

    public virtual DbSet<TbPlaTiposProjetoAtividade> TbPlaTiposProjetoAtividades { get; set; }

    public virtual DbSet<TbPlaTiposPublicoAlvo> TbPlaTiposPublicoAlvos { get; set; }

    public virtual DbSet<TbPlaUnidadesMedidasPadrao> TbPlaUnidadesMedidasPadraos { get; set; }

    public virtual DbSet<TbPlaUnidadesMedidum> TbPlaUnidadesMedida { get; set; }

    public virtual DbSet<TbPlaVerso> TbPlaVersoes { get; set; }

    public virtual DbSet<TbPpaFontesOrgao> TbPpaFontesOrgaos { get; set; }

    public virtual DbSet<TbPpaIndicadore> TbPpaIndicadores { get; set; }

    public virtual DbSet<TbPpaPrograma> TbPpaProgramas { get; set; }

    public virtual DbSet<TbPpaProgramasAco> TbPpaProgramasAcoes { get; set; }

    public virtual DbSet<TbPpaProgramasAcoesMeta> TbPpaProgramasAcoesMetas { get; set; }

    public virtual DbSet<TbPpaProgramasAcoesMetasFonte> TbPpaProgramasAcoesMetasFontes { get; set; }

    public virtual DbSet<TbPpaProgramasObjetivo> TbPpaProgramasObjetivos { get; set; }

    public virtual DbSet<TbPpaProgramasPermissoesOrgao> TbPpaProgramasPermissoesOrgaos { get; set; }

    public virtual DbSet<TbPpaProjecoesReceita> TbPpaProjecoesReceitas { get; set; }

    public virtual DbSet<TbPpaProjetosAtividade> TbPpaProjetosAtividades { get; set; }

    public virtual DbSet<TbPpaPublicosAlvo> TbPpaPublicosAlvos { get; set; }

    public virtual DbSet<TbPpaTiposIndicadore> TbPpaTiposIndicadores { get; set; }

    public virtual DbSet<TbPpaUnidadesMedidum> TbPpaUnidadesMedida { get; set; }

    public virtual DbSet<TbPpaVerso> TbPpaVersoes { get; set; }

    public virtual DbSet<TbRecDiarioArrecadacao> TbRecDiarioArrecadacaos { get; set; }

    public virtual DbSet<TbRecDiarioArrecadacaoEstorno> TbRecDiarioArrecadacaoEstornos { get; set; }

    public virtual DbSet<TbRecIndicesDeflatore> TbRecIndicesDeflatores { get; set; }

    public virtual DbSet<TbRecMovimentoReceita> TbRecMovimentoReceitas { get; set; }

    public virtual DbSet<TbRecMovimentoReceitasAporte> TbRecMovimentoReceitasAportes { get; set; }

    public virtual DbSet<TbRecMovimentoReceitasDetalhe> TbRecMovimentoReceitasDetalhes { get; set; }

    public virtual DbSet<TbRecMovimentoReceitasDetalheDesmembra> TbRecMovimentoReceitasDetalheDesmembras { get; set; }

    public virtual DbSet<TbRecMovimentoReceitasRepass> TbRecMovimentoReceitasRepasses { get; set; }

    public virtual DbSet<TbRecReceitasBaixaOrcamentarium> TbRecReceitasBaixaOrcamentaria { get; set; }

    public virtual DbSet<TbRecReceitasContaContabil> TbRecReceitasContaContabils { get; set; }

    public virtual DbSet<TbRecRegrasDiarioArrecadacao> TbRecRegrasDiarioArrecadacaos { get; set; }

    public virtual DbSet<TbRecRegrasDiarioArrecadacaoConta> TbRecRegrasDiarioArrecadacaoContas { get; set; }

    public virtual DbSet<TbRecRegrasDiarioArrecadacaoReceita> TbRecRegrasDiarioArrecadacaoReceitas { get; set; }

    public virtual DbSet<TbRelBalanco> TbRelBalancos { get; set; }

    public virtual DbSet<TbRelBalancosDetalhe> TbRelBalancosDetalhes { get; set; }

    public virtual DbSet<TbRelBalancosDetalhestemp> TbRelBalancosDetalhestemps { get; set; }

    public virtual DbSet<TbRelControlesSaldo> TbRelControlesSaldos { get; set; }

    public virtual DbSet<TbRelDetalhesIndex> TbRelDetalhesIndices { get; set; }

    public virtual DbSet<TbRelExecucaoRcl> TbRelExecucaoRcls { get; set; }

    public virtual DbSet<TbRelExecucoesRelatorio> TbRelExecucoesRelatorios { get; set; }

    public virtual DbSet<TbRelExecutaRelatorio> TbRelExecutaRelatorios { get; set; }

    public virtual DbSet<TbRelExecutaRelatoriosLrf> TbRelExecutaRelatoriosLrves { get; set; }

    public virtual DbSet<TbRelOrgaosUnidadesSessao> TbRelOrgaosUnidadesSessaos { get; set; }

    public virtual DbSet<TbRelParametrizaco> TbRelParametrizacoes { get; set; }

    public virtual DbSet<TbRelParametrizacoesDetalhe> TbRelParametrizacoesDetalhes { get; set; }

    public virtual DbSet<TbRelParametrizacoesDetalhesFormula> TbRelParametrizacoesDetalhesFormulas { get; set; }

    public virtual DbSet<TbRelParametrizacoesExecuco> TbRelParametrizacoesExecucoes { get; set; }

    public virtual DbSet<TbRelParametrizacoesGrupo> TbRelParametrizacoesGrupos { get; set; }

    public virtual DbSet<TbRelQuery> TbRelQueries { get; set; }

    public virtual DbSet<TbRelSaldosMensaisContasContabei> TbRelSaldosMensaisContasContabeis { get; set; }

    public virtual DbSet<TbRelSaldosMensaisNatDespesa> TbRelSaldosMensaisNatDespesas { get; set; }

    public virtual DbSet<TbRelSaldosMensaisRap> TbRelSaldosMensaisRaps { get; set; }

    public virtual DbSet<TbRelSaldosMensaisReceita> TbRelSaldosMensaisReceitas { get; set; }

    public virtual DbSet<TbSbsAditivo> TbSbsAditivos { get; set; }

    public virtual DbSet<TbSbsBensAdquirido> TbSbsBensAdquiridos { get; set; }

    public virtual DbSet<TbSbsCategoriasDespesa> TbSbsCategoriasDespesas { get; set; }

    public virtual DbSet<TbSbsComplementosSit> TbSbsComplementosSits { get; set; }

    public virtual DbSet<TbSbsCronogramaDesembolso> TbSbsCronogramaDesembolsos { get; set; }

    public virtual DbSet<TbSbsCronogramaDesembolsoAditivo> TbSbsCronogramaDesembolsoAditivos { get; set; }

    public virtual DbSet<TbSbsDevolucaoSaldo> TbSbsDevolucaoSaldos { get; set; }

    public virtual DbSet<TbSbsEtapa> TbSbsEtapas { get; set; }

    public virtual DbSet<TbSbsInterveniente> TbSbsIntervenientes { get; set; }

    public virtual DbSet<TbSbsLegislacaoEspecificaConcedente> TbSbsLegislacaoEspecificaConcedentes { get; set; }

    public virtual DbSet<TbSbsMembrosUgttomador> TbSbsMembrosUgttomadors { get; set; }

    public virtual DbSet<TbSbsOutrasReceita> TbSbsOutrasReceitas { get; set; }

    public virtual DbSet<TbSbsPlanoAplicacoesAditivo> TbSbsPlanoAplicacoesAditivos { get; set; }

    public virtual DbSet<TbSbsPlanoTrabalho> TbSbsPlanoTrabalhos { get; set; }

    public virtual DbSet<TbSbsPrestacaoConta> TbSbsPrestacaoContas { get; set; }

    public virtual DbSet<TbSbsPrevisaoOrcamentarium> TbSbsPrevisaoOrcamentaria { get; set; }

    public virtual DbSet<TbSbsProjeto> TbSbsProjetos { get; set; }

    public virtual DbSet<TbSbsRendimento> TbSbsRendimentos { get; set; }

    public virtual DbSet<TbSbsSubvencaoSocial> TbSbsSubvencaoSocials { get; set; }

    public virtual DbSet<TbSbsSubvencaoSocialAnexosOldMigrado> TbSbsSubvencaoSocialAnexosOldMigrados { get; set; }

    public virtual DbSet<TbSbsSubvencaoSocialCompl> TbSbsSubvencaoSocialCompls { get; set; }

    public virtual DbSet<TbSbsSubvencaoSocialEmpenho> TbSbsSubvencaoSocialEmpenhos { get; set; }

    public virtual DbSet<TbSbsSubvencaoSocialPrestacao> TbSbsSubvencaoSocialPrestacaos { get; set; }

    public virtual DbSet<TbSbsSubvencaoSocialUsuario> TbSbsSubvencaoSocialUsuarios { get; set; }

    public virtual DbSet<TbSbsTipoBeneficiario> TbSbsTipoBeneficiarios { get; set; }

    public virtual DbSet<TbSbsTipoDespesa> TbSbsTipoDespesas { get; set; }

    public virtual DbSet<TbSbsTipoEntidade> TbSbsTipoEntidades { get; set; }

    public virtual DbSet<TbSbsTipoExecuco> TbSbsTipoExecucoes { get; set; }

    public virtual DbSet<TbSbsTipoObjeto> TbSbsTipoObjetos { get; set; }

    public virtual DbSet<TbSisQueriesParam> TbSisQueriesParams { get; set; }

    public virtual DbSet<TbSisQuery> TbSisQueries { get; set; }

    public virtual DbSet<TbSisTexto> TbSisTextos { get; set; }

    public virtual DbSet<TbStnCorrelacaoFonte> TbStnCorrelacaoFontes { get; set; }

    public virtual DbSet<TbStnCorrelacaoNaturezasDespesa> TbStnCorrelacaoNaturezasDespesas { get; set; }

    public virtual DbSet<TbStnFontePadrao> TbStnFontePadraos { get; set; }

    public virtual DbSet<TbStnGrupoFontePadrao> TbStnGrupoFontePadraos { get; set; }

    public virtual DbSet<TbStnMarcador> TbStnMarcadors { get; set; }

    public virtual DbSet<TbStnMatrizContabilImportaco> TbStnMatrizContabilImportacoes { get; set; }

    public virtual DbSet<TbStnMatrizContabilLancamento> TbStnMatrizContabilLancamentos { get; set; }

    public virtual DbSet<TbStnPlanoConta> TbStnPlanoContas { get; set; }

    public virtual DbSet<TbStnPlanoPadraoFonte> TbStnPlanoPadraoFontes { get; set; }

    public virtual DbSet<TbSycSincronismo> TbSycSincronismos { get; set; }

    public virtual DbSet<TbSysFilasContabei> TbSysFilasContabeis { get; set; }

    public virtual DbSet<TbSysIntegracaoSat> TbSysIntegracaoSats { get; set; }

    public virtual DbSet<TbSysNumeraObjetoTce> TbSysNumeraObjetoTces { get; set; }

    public virtual DbSet<TbSysObjetosContabei> TbSysObjetosContabeis { get; set; }

    public virtual DbSet<TbTcmMatrizSaldosContasContabei> TbTcmMatrizSaldosContasContabeis { get; set; }

    public virtual DbSet<TbTcmPainelConferenciaDespesa> TbTcmPainelConferenciaDespesas { get; set; }

    public virtual DbSet<TbTempContasContabeisEstatai> TbTempContasContabeisEstatais { get; set; }

    public virtual DbSet<TbTempDirf> TbTempDirves { get; set; }

    public virtual DbSet<TbTempHodometroHorimetro> TbTempHodometroHorimetros { get; set; }

    public virtual DbSet<TbTempLicitacaoTce> TbTempLicitacaoTces { get; set; }

    public virtual DbSet<TbTmpDeParaReceita> TbTmpDeParaReceitas { get; set; }

    public virtual DbSet<TbTmpDeParaReceitasOperacao> TbTmpDeParaReceitasOperacaos { get; set; }

    public virtual DbSet<TbTmpDespesaEmpenhadum> TbTmpDespesaEmpenhada { get; set; }

    public virtual DbSet<TbTmpPlanoRealizado> TbTmpPlanoRealizados { get; set; }

    public virtual DbSet<TbTrbCancelamentosTributo> TbTrbCancelamentosTributos { get; set; }

    public virtual DbSet<TbTrbEditaisContribMelhorium> TbTrbEditaisContribMelhoria { get; set; }

    public virtual DbSet<TbTrbRolDivida> TbTrbRolDividas { get; set; }

    public virtual DbSet<TbWflAnexo> TbWflAnexos { get; set; }

    public virtual DbSet<TbWflDespachosFluxo> TbWflDespachosFluxos { get; set; }

    public virtual DbSet<TbWflDespachosPadrao> TbWflDespachosPadraos { get; set; }

    public virtual DbSet<TbWflFluxosTramitacao> TbWflFluxosTramitacaos { get; set; }

    public virtual DbSet<TbWflRecebimento> TbWflRecebimentos { get; set; }

    public virtual DbSet<TbWflRemessa> TbWflRemessas { get; set; }

    public virtual DbSet<TbWflRmsRessalva> TbWflRmsRessalvas { get; set; }

    public virtual DbSet<TbWflTiposFluxo> TbWflTiposFluxos { get; set; }

    public virtual DbSet<TbWflTiposProcesso> TbWflTiposProcessos { get; set; }

    public virtual DbSet<TbaaaCcalterada> TbaaaCcalteradas { get; set; }

    public virtual DbSet<TbaaaCcexcluida> TbaaaCcexcluidas { get; set; }

    public virtual DbSet<TbaaaCcincluida> TbaaaCcincluidas { get; set; }

    public virtual DbSet<TbaaaCctoda> TbaaaCctodas { get; set; }

    public virtual DbSet<TbaaaDespesa> TbaaaDespesas { get; set; }

    public virtual DbSet<TbdspliquidacoesdoctosintegradosBck> TbdspliquidacoesdoctosintegradosBcks { get; set; }

    public virtual DbSet<TbsbsSaldoBancario> TbsbsSaldoBancarios { get; set; }

    public virtual DbSet<Tbsimamestornodividaativa> Tbsimamestornodividaativas { get; set; }

    public virtual DbSet<Tbsimarrecadacaocredito> Tbsimarrecadacaocreditos { get; set; }

    public virtual DbSet<TbsimarrecadacaocreditoAux> TbsimarrecadacaocreditoAuxes { get; set; }

    public virtual DbSet<Tbsimatualizacaocredito> Tbsimatualizacaocreditos { get; set; }

    public virtual DbSet<TbsimatualizacaocreditoAux> TbsimatualizacaocreditoAuxes { get; set; }

    public virtual DbSet<Tbsimatualizacaodividaativa> Tbsimatualizacaodividaativas { get; set; }

    public virtual DbSet<TbsimatualizacaodividaativaAux> TbsimatualizacaodividaativaAuxes { get; set; }

    public virtual DbSet<Tbsimdeducaodividaativa> Tbsimdeducaodividaativas { get; set; }

    public virtual DbSet<TbsimdeducaodividaativaAux> TbsimdeducaodividaativaAuxes { get; set; }

    public virtual DbSet<Tbsimdeducaolancamentocredito> Tbsimdeducaolancamentocreditos { get; set; }

    public virtual DbSet<TbsimdeducaolancamentocreditoAux> TbsimdeducaolancamentocreditoAuxes { get; set; }

    public virtual DbSet<Tbsimestornoarrecadacaocredito> Tbsimestornoarrecadacaocreditos { get; set; }

    public virtual DbSet<TbsimestornoarrecadacaocreditoAux> TbsimestornoarrecadacaocreditoAuxes { get; set; }

    public virtual DbSet<Tbsimestornolancamentocredito> Tbsimestornolancamentocreditos { get; set; }

    public virtual DbSet<TbsimestornolancamentocreditoAux> TbsimestornolancamentocreditoAuxes { get; set; }

    public virtual DbSet<Tbsiminscricaodividaativa> Tbsiminscricaodividaativas { get; set; }

    public virtual DbSet<TbsiminscricaodividaativaDivida> TbsiminscricaodividaativaDividas { get; set; }

    public virtual DbSet<Tbsimlancamentocredito> Tbsimlancamentocreditos { get; set; }

    public virtual DbSet<TbsimlancamentocreditoDivida> TbsimlancamentocreditoDividas { get; set; }

    public virtual DbSet<TbtempBkp2022> TbtempBkp2022s { get; set; }

    public virtual DbSet<Tbtempconsigna2022> Tbtempconsigna2022s { get; set; }

    public virtual DbSet<TbtrbroldividasIptu2012Old> TbtrbroldividasIptu2012Olds { get; set; }

    public virtual DbSet<TempTbCapConvAuxPrograma> TempTbCapConvAuxProgramas { get; set; }

    public virtual DbSet<TempTbCapRecurso> TempTbCapRecursos { get; set; }

    public virtual DbSet<TempTbCntAtosContratuai> TempTbCntAtosContratuais { get; set; }

    public virtual DbSet<TempTbCntAtosContratuaisItensLicitacao> TempTbCntAtosContratuaisItensLicitacaos { get; set; }

    public virtual DbSet<TempTbCntContrato> TempTbCntContratos { get; set; }

    public virtual DbSet<TempTbCntContratosCmfi> TempTbCntContratosCmfis { get; set; }

    public virtual DbSet<TempTbCntContratosItensLicitacao> TempTbCntContratosItensLicitacaos { get; set; }

    public virtual DbSet<TempTbCntContratosParte> TempTbCntContratosPartes { get; set; }

    public virtual DbSet<TempTbCntNumeroAtosContratuai> TempTbCntNumeroAtosContratuais { get; set; }

    public virtual DbSet<TempTbFinCompensacaoDiarioTesouraria20032013> TempTbFinCompensacaoDiarioTesouraria20032013s { get; set; }

    public virtual DbSet<TempTbFinConciliacoesBancarias20032013> TempTbFinConciliacoesBancarias20032013s { get; set; }

    public virtual DbSet<TempTbFinDividaFundadaMovimento> TempTbFinDividaFundadaMovimentos { get; set; }

    public virtual DbSet<TempTbFinLancamentosPartidaDobrada> TempTbFinLancamentosPartidaDobradas { get; set; }

    public virtual DbSet<TempTbGerPessoa> TempTbGerPessoas { get; set; }

    public virtual DbSet<TempTbLicCotacaoIten> TempTbLicCotacaoItens { get; set; }

    public virtual DbSet<TempTbLicLicitacoesIten> TempTbLicLicitacoesItens { get; set; }

    public virtual DbSet<TempTbLicLicitacoesItensLote> TempTbLicLicitacoesItensLotes { get; set; }

    public virtual DbSet<TempTbLicMovimentosSituaco> TempTbLicMovimentosSituacoes { get; set; }

    public virtual DbSet<TempTbLicParticipante> TempTbLicParticipantes { get; set; }

    public virtual DbSet<TempTbOrcProgramasAcoes2014> TempTbOrcProgramasAcoes2014s { get; set; }

    public virtual DbSet<TempTbOrcProgramasAcoesGeral> TempTbOrcProgramasAcoesGerals { get; set; }

    public virtual DbSet<TempTbOrcReceitasOrcamentoAnual> TempTbOrcReceitasOrcamentoAnuals { get; set; }

    public virtual DbSet<TempTbPlaAcoesMovimento> TempTbPlaAcoesMovimentos { get; set; }

    public virtual DbSet<TempTbPlaAcoesMovimentosPm> TempTbPlaAcoesMovimentosPms { get; set; }

    public virtual DbSet<TempTbPlaAcoesPm> TempTbPlaAcoesPms { get; set; }

    public virtual DbSet<TempTbPlaProjecoesReceita> TempTbPlaProjecoesReceitas { get; set; }

    public virtual DbSet<TempTbPlaProjetosAtividade> TempTbPlaProjetosAtividades { get; set; }

    public virtual DbSet<TempTbPlaProjetosAtividadesAco> TempTbPlaProjetosAtividadesAcoes { get; set; }

    public virtual DbSet<TmpDobrado> TmpDobrados { get; set; }

    public virtual DbSet<TmpDobradosFora> TmpDobradosForas { get; set; }

    public virtual DbSet<TmpDocumentosSemFila> TmpDocumentosSemFilas { get; set; }

    public virtual DbSet<TmpDspLiquidacoesDoctosItensCmfi> TmpDspLiquidacoesDoctosItensCmfis { get; set; }

    public virtual DbSet<TmpJob> TmpJobs { get; set; }

    public virtual DbSet<TmpLiquidaco> TmpLiquidacoes { get; set; }

    public virtual DbSet<TmpRap> TmpRaps { get; set; }

    public virtual DbSet<TmpRap1> TmpRaps1 { get; set; }

    public virtual DbSet<TmpSaldosRap2012Am> TmpSaldosRap2012Ams { get; set; }

    public virtual DbSet<TmpSaldosRap2012giig> TmpSaldosRap2012giigs { get; set; }

    public virtual DbSet<TmpTbOrcProgramasAcoesLoa2014> TmpTbOrcProgramasAcoesLoa2014s { get; set; }

    public virtual DbSet<TmpdocCombustivel> TmpdocCombustivels { get; set; }

    public virtual DbSet<TmpdspLiquidacoesDocumentosCmfi> TmpdspLiquidacoesDocumentosCmfis { get; set; }

    public virtual DbSet<Tmpextrasremovido> Tmpextrasremovidos { get; set; }

    public virtual DbSet<Tmpgambi> Tmpgambis { get; set; }

    public virtual DbSet<Tmpidsverificar> Tmpidsverificars { get; set; }

    public virtual DbSet<TmpliquidaCmfi> TmpliquidaCmfis { get; set; }

    public virtual DbSet<TmpliquidacaoCmfi> TmpliquidacaoCmfis { get; set; }

    public virtual DbSet<TmpliquidacoesCmfi> TmpliquidacoesCmfis { get; set; }

    public virtual DbSet<Tmpnota> Tmpnotas { get; set; }

    public virtual DbSet<Tmpsaldo> Tmpsaldos { get; set; }

    public virtual DbSet<TmptbDspConsignacoesCmfi> TmptbDspConsignacoesCmfis { get; set; }

    public virtual DbSet<TmptbDspDespesaExtraOrcamentariaCmfi> TmptbDspDespesaExtraOrcamentariaCmfis { get; set; }

    public virtual DbSet<TmptbDspPagamentosCmfi> TmptbDspPagamentosCmfis { get; set; }

    public virtual DbSet<TmptbFinContasContabei> TmptbFinContasContabeis { get; set; }

    public virtual DbSet<TmptbOrcFonte> TmptbOrcFontes { get; set; }

    public virtual DbSet<TmptbOrcNaturezasDespesa> TmptbOrcNaturezasDespesas { get; set; }

    public virtual DbSet<TmptbOrcReceita> TmptbOrcReceitas { get; set; }

    public virtual DbSet<TmptbdspempenhositensCmfi> TmptbdspempenhositensCmfis { get; set; }

    public virtual DbSet<Tmptipoconsignacao> Tmptipoconsignacaos { get; set; }

    public virtual DbSet<VwAditivo> VwAditivos { get; set; }

    public virtual DbSet<VwContasCredore> VwContasCredores { get; set; }

    public virtual DbSet<VwContrato> VwContratos { get; set; }

    public virtual DbSet<VwCotacaoItensVencedore> VwCotacaoItensVencedores { get; set; }

    public virtual DbSet<VwDimReceitaContabil2ano> VwDimReceitaContabil2anos { get; set; }

    public virtual DbSet<VwFatoContabil2ano> VwFatoContabil2anos { get; set; }

    public virtual DbSet<VwLicitacaoIten> VwLicitacaoItens { get; set; }

    public virtual DbSet<VwLicitacoesHomologada> VwLicitacoesHomologadas { get; set; }

    public virtual DbSet<VwLicitacoesSitePmfi> VwLicitacoesSitePmfis { get; set; }

    public virtual DbSet<VwPessoa> VwPessoas { get; set; }

    public virtual DbSet<VwProventosEmpenhosPagamento> VwProventosEmpenhosPagamentos { get; set; }

    public virtual DbSet<VwRelSaldosArrecadacaoReceitaFonte> VwRelSaldosArrecadacaoReceitaFontes { get; set; }

    public virtual DbSet<VwRelSaldosAtosAlteracaoSuperavit> VwRelSaldosAtosAlteracaoSuperavits { get; set; }

    public virtual DbSet<VwRelSaldosContaContabilFonte> VwRelSaldosContaContabilFontes { get; set; }

    public virtual DbSet<VwRelSaldosContaContabilFonteDisponivelFinanceiro> VwRelSaldosContaContabilFonteDisponivelFinanceiros { get; set; }

    public virtual DbSet<VwRelSaldosOperacoesCredito> VwRelSaldosOperacoesCreditos { get; set; }

    public virtual DbSet<VwRelSaldosReceitasFonte> VwRelSaldosReceitasFontes { get; set; }

    public virtual DbSet<VwRelSaldosReceitasIrpfdeduco> VwRelSaldosReceitasIrpfdeducoes { get; set; }

    public virtual DbSet<VwSaldosMensaisContasContabeisTipoSuperavit> VwSaldosMensaisContasContabeisTipoSuperavits { get; set; }

    public virtual DbSet<XTbArrecadacao> XTbArrecadacaos { get; set; }

    public virtual DbSet<XTbReceitasExcluidas2019> XTbReceitasExcluidas2019s { get; set; }

    public virtual DbSet<XTbReceitasIncluidas2019> XTbReceitasIncluidas2019s { get; set; }

    public virtual DbSet<XTbTmpDeParaReceita> XTbTmpDeParaReceitas { get; set; }

    public virtual DbSet<XtbSaldoExercicioAnteriorRealizavel> XtbSaldoExercicioAnteriorRealizavels { get; set; }

    public virtual DbSet<XtbTempMovimentoDiarioContaBancarium> XtbTempMovimentoDiarioContaBancaria { get; set; }

    public virtual DbSet<XxxTempTbPpaProgramasAco> XxxTempTbPpaProgramasAcoes { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=172.27.1.94;Initial Catalog=GIIGContabilDB;Integrated Security=False;Encrypt=False;TrustServerCertificate=False;User ID=gilberto.gc;Password=Couto2408@@");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("Latin1_General_CI_AS");

        modelBuilder.Entity<AmHodometro>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("amHodometro");

            entity.Property(e => e.Campo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("campo");
            entity.Property(e => e.Cdbem)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdbem");
            entity.Property(e => e.Dsnota)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsnota");
            entity.Property(e => e.Idpessoa).HasColumnName("idpessoa");
            entity.Property(e => e.Idtipo).HasColumnName("idtipo");
            entity.Property(e => e.Mes).HasColumnName("mes");
            entity.Property(e => e.NrMedicaoDeclarada)
                .HasColumnType("money")
                .HasColumnName("nrMedicaoDeclarada");
            entity.Property(e => e.NrMedicaoFinal)
                .HasColumnType("money")
                .HasColumnName("nrMedicaoFinal");
            entity.Property(e => e.NrMedicaoInicial)
                .HasColumnType("money")
                .HasColumnName("nrMedicaoInicial");
            entity.Property(e => e.Nrano).HasColumnName("nrano");
            entity.Property(e => e.Nrsequencia)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("nrsequencia");
        });

        modelBuilder.Entity<AmmConvenioAuxilio2003>(entity =>
        {
            entity.HasKey(e => new { e.IdPessoa, e.CdConvenioAuxilio }).HasName("PK__ammConvenioAuxil__3528CC84");

            entity.ToTable("ammConvenioAuxilio2003");

            entity.Property(e => e.IdPessoa)
                .HasColumnType("numeric(7, 0)")
                .HasColumnName("idPessoa");
            entity.Property(e => e.CdConvenioAuxilio).HasColumnName("cdConvenioAuxilio");
            entity.Property(e => e.CdAgencia)
                .HasMaxLength(7)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdAgencia");
            entity.Property(e => e.CdBanco)
                .HasColumnType("numeric(3, 0)")
                .HasColumnName("cdBanco");
            entity.Property(e => e.CdConta)
                .HasMaxLength(14)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdConta");
            entity.Property(e => e.DsObjetoConvenio)
                .HasColumnType("text")
                .HasColumnName("dsObjetoConvenio");
            entity.Property(e => e.DsUnidadeMedida)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("dsUnidadeMedida");
            entity.Property(e => e.DtCancelamento)
                .HasColumnType("smalldatetime")
                .HasColumnName("dtCancelamento");
            entity.Property(e => e.DtCelebracao)
                .HasColumnType("smalldatetime")
                .HasColumnName("dtCelebracao");
            entity.Property(e => e.DtInicioVigencia)
                .HasColumnType("smalldatetime")
                .HasColumnName("dtInicioVigencia");
            entity.Property(e => e.DtPrazoVigencia)
                .HasColumnType("smalldatetime")
                .HasColumnName("dtPrazoVigencia");
            entity.Property(e => e.DtPublicacaoDoe)
                .HasColumnType("smalldatetime")
                .HasColumnName("dtPublicacaoDOE");
            entity.Property(e => e.IdRepassador)
                .HasColumnType("numeric(7, 0)")
                .HasColumnName("idRepassador");
            entity.Property(e => e.NmOrgaoRepassador)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("nmOrgaoRepassador");
            entity.Property(e => e.NrAnoDoe)
                .HasColumnType("numeric(4, 0)")
                .HasColumnName("nrAnoDOE");
            entity.Property(e => e.NrAnoInclusao)
                .HasColumnType("numeric(4, 0)")
                .HasColumnName("nrAnoInclusao");
            entity.Property(e => e.NrBimRecadastramento)
                .HasColumnType("numeric(1, 0)")
                .HasColumnName("nrBimRecadastramento");
            entity.Property(e => e.NrBimestreInclusao)
                .HasColumnType("numeric(1, 0)")
                .HasColumnName("nrBimestreInclusao");
            entity.Property(e => e.NrDoe).HasColumnName("nrDOE");
            entity.Property(e => e.NrMetaPrevista)
                .HasColumnType("numeric(16, 2)")
                .HasColumnName("nrMetaPrevista");
            entity.Property(e => e.NrTermo)
                .HasColumnType("numeric(10, 0)")
                .HasColumnName("nrTermo");
            entity.Property(e => e.NrTransferencia)
                .HasColumnType("numeric(15, 0)")
                .HasColumnName("nrTransferencia");
            entity.Property(e => e.StConvenio)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("stConvenio");
            entity.Property(e => e.TpConvenioAuxilio)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpConvenioAuxilio");
            entity.Property(e => e.TpEsfera)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpEsfera");
            entity.Property(e => e.TpRecurso)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpRecurso");
            entity.Property(e => e.TpRecursoRepassador)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpRecursoRepassador");
            entity.Property(e => e.VlPrevisto)
                .HasColumnType("numeric(16, 2)")
                .HasColumnName("vlPrevisto");
            entity.Property(e => e.VlRecursoProprio)
                .HasColumnType("numeric(16, 2)")
                .HasColumnName("vlRecursoProprio");
        });

        modelBuilder.Entity<AmmLicitacao>(entity =>
        {
            entity.HasKey(e => new { e.IdPessoa, e.NrLicitacao, e.CdModalidadeLicitacao, e.NrAnoLicitacao }).HasName("PK__ammLicitacao__7AC720C5");

            entity.ToTable("ammLicitacao");

            entity.Property(e => e.IdPessoa)
                .HasColumnType("numeric(7, 0)")
                .HasColumnName("idPessoa");
            entity.Property(e => e.NrLicitacao)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nrLicitacao");
            entity.Property(e => e.CdModalidadeLicitacao)
                .HasColumnType("numeric(2, 0)")
                .HasColumnName("cdModalidadeLicitacao");
            entity.Property(e => e.NrAnoLicitacao)
                .HasColumnType("numeric(4, 0)")
                .HasColumnName("nrAnoLicitacao");
            entity.Property(e => e.CdAgencia)
                .HasMaxLength(7)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdAgencia");
            entity.Property(e => e.CdBanco)
                .HasColumnType("numeric(3, 0)")
                .HasColumnName("cdBanco");
            entity.Property(e => e.CdClassificacaoObjeto)
                .HasColumnType("numeric(2, 0)")
                .HasColumnName("cdClassificacaoObjeto");
            entity.Property(e => e.CdConta)
                .HasMaxLength(14)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdConta");
            entity.Property(e => e.CdEspecie)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdEspecie");
            entity.Property(e => e.CdNaturezaProcedimento).HasColumnName("cdNaturezaProcedimento");
            entity.Property(e => e.CdRegimeExecucao)
                .HasColumnType("numeric(2, 0)")
                .HasColumnName("cdRegimeExecucao");
            entity.Property(e => e.CdTipoAvaliacao)
                .HasColumnType("numeric(2, 0)")
                .HasColumnName("cdTipoAvaliacao");
            entity.Property(e => e.DsClausulaPror)
                .HasColumnType("text")
                .HasColumnName("dsClausulaPror");
            entity.Property(e => e.DsMotivoCancela)
                .HasColumnType("text")
                .HasColumnName("dsMotivoCancela");
            entity.Property(e => e.DsObjeto)
                .HasColumnType("text")
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DsUnidadeMedida)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsUnidadeMedida");
            entity.Property(e => e.DsVeiculoPublicacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsVeiculoPublicacao");
            entity.Property(e => e.DsVeiculoPublicacao2)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsVeiculoPublicacao2");
            entity.Property(e => e.DtAbertura)
                .HasColumnType("smalldatetime")
                .HasColumnName("dtAbertura");
            entity.Property(e => e.DtCancelamento)
                .HasColumnType("smalldatetime")
                .HasColumnName("dtCancelamento");
            entity.Property(e => e.DtConvite)
                .HasColumnType("smalldatetime")
                .HasColumnName("dtConvite");
            entity.Property(e => e.DtJulgamento)
                .HasColumnType("smalldatetime")
                .HasColumnName("dtJulgamento");
            entity.Property(e => e.DtPublicacaoEdital)
                .HasColumnType("smalldatetime")
                .HasColumnName("dtPublicacaoEdital");
            entity.Property(e => e.DtPublicacaoEdital2)
                .HasColumnType("smalldatetime")
                .HasColumnName("dtPublicacaoEdital2");
            entity.Property(e => e.DtPublicacaoEditalDoe)
                .HasColumnType("smalldatetime")
                .HasColumnName("dtPublicacaoEdital_DOE");
            entity.Property(e => e.FlRecursoVinculado)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flRecursoVinculado");
            entity.Property(e => e.IdOrigem)
                .HasColumnType("numeric(7, 0)")
                .HasColumnName("idOrigem");
            entity.Property(e => e.NrAnoInclusao)
                .HasColumnType("numeric(4, 0)")
                .HasColumnName("nrAnoInclusao");
            entity.Property(e => e.NrBimestreInclusao)
                .HasColumnType("numeric(1, 0)")
                .HasColumnName("nrBimestreInclusao");
            entity.Property(e => e.NrConvidados)
                .HasColumnType("numeric(3, 0)")
                .HasColumnName("nrConvidados");
            entity.Property(e => e.NrLoteItem)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nrLoteItem");
            entity.Property(e => e.NrParticipantes)
                .HasColumnType("numeric(3, 0)")
                .HasColumnName("nrParticipantes");
            entity.Property(e => e.NrParticipantesHabilitados)
                .HasColumnType("numeric(3, 0)")
                .HasColumnName("nrParticipantesHabilitados");
            entity.Property(e => e.NrPrazoExecucao)
                .HasColumnType("numeric(4, 0)")
                .HasColumnName("nrPrazoExecucao");
            entity.Property(e => e.NrRegUltimaAlteracao).HasColumnName("nrRegUltimaAlteracao");
            entity.Property(e => e.StLicitacao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("stLicitacao");
            entity.Property(e => e.VlMaximo)
                .HasColumnType("numeric(16, 2)")
                .HasColumnName("vlMaximo");
            entity.Property(e => e.VlMinimo)
                .HasColumnType("numeric(16, 2)")
                .HasColumnName("vlMinimo");
        });

        modelBuilder.Entity<AmmLiquidacao>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ammLiquidacao");

            entity.Property(e => e.DtLiquidacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dtLiquidacao");
            entity.Property(e => e.IdPessoa).HasColumnType("numeric(18, 0)");
            entity.Property(e => e.NrAno)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("nrAno");
            entity.Property(e => e.NrEmpenho)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("nrEmpenho");
            entity.Property(e => e.NrLiquidacao)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("nrLiquidacao");
            entity.Property(e => e.VlLiquidacao)
                .HasColumnType("decimal(28, 2)")
                .HasColumnName("vlLiquidacao");
            entity.Property(e => e.VlTotalEstorno)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("vlTotalEstorno");
            entity.Property(e => e.VlTotalPagamentoLiq)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("vlTotalPagamentoLiq");
        });

        modelBuilder.Entity<Contas2013>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Contas2013");

            entity.Property(e => e.CdClasse)
                .HasMaxLength(250)
                .HasColumnName("cdClasse");
            entity.Property(e => e.CdGrupo)
                .HasMaxLength(250)
                .HasColumnName("cdGrupo");
            entity.Property(e => e.CdItem)
                .HasMaxLength(250)
                .HasColumnName("cdItem");
            entity.Property(e => e.CdNivel10)
                .HasMaxLength(250)
                .HasColumnName("cdNivel10");
            entity.Property(e => e.CdNivel11)
                .HasMaxLength(250)
                .HasColumnName("cdNivel11");
            entity.Property(e => e.CdNivel12)
                .HasMaxLength(250)
                .HasColumnName("cdNivel12");
            entity.Property(e => e.CdNivel8)
                .HasMaxLength(250)
                .HasColumnName("cdNivel8");
            entity.Property(e => e.CdNivel9)
                .HasMaxLength(250)
                .HasColumnName("cdNivel9");
            entity.Property(e => e.CdSubGrupo)
                .HasMaxLength(250)
                .HasColumnName("cdSubGrupo");
            entity.Property(e => e.CdSubItem)
                .HasMaxLength(250)
                .HasColumnName("cdSubItem");
            entity.Property(e => e.CdSubTitulo)
                .HasMaxLength(250)
                .HasColumnName("cdSubTitulo");
            entity.Property(e => e.CdTitulo)
                .HasMaxLength(250)
                .HasColumnName("cdTitulo");
            entity.Property(e => e.DsTitulo)
                .HasMaxLength(250)
                .HasColumnName("dsTitulo");
            entity.Property(e => e.FlEscrituracao)
                .HasMaxLength(250)
                .HasColumnName("flEscrituracao");
            entity.Property(e => e.Funcao).HasColumnName("funcao");
            entity.Property(e => e.TpControle)
                .HasMaxLength(250)
                .HasColumnName("tpControle");
            entity.Property(e => e.TpIndicSupFinanc)
                .HasMaxLength(250)
                .HasColumnName("tpIndicSupFinanc");
            entity.Property(e => e.TpNaturezaInformacao)
                .HasMaxLength(250)
                .HasColumnName("tpNaturezaInformacao");
            entity.Property(e => e.TpNaturezaSaldo)
                .HasMaxLength(250)
                .HasColumnName("tpNaturezaSaldo");
        });

        modelBuilder.Entity<Contas2022>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Contas2022");

            entity.Property(e => e.CdClasse)
                .HasMaxLength(250)
                .HasColumnName("cdClasse");
            entity.Property(e => e.CdGrupo)
                .HasMaxLength(250)
                .HasColumnName("cdGrupo");
            entity.Property(e => e.CdItem)
                .HasMaxLength(250)
                .HasColumnName("cdItem");
            entity.Property(e => e.CdNivel10)
                .HasMaxLength(250)
                .HasColumnName("cdNivel10");
            entity.Property(e => e.CdNivel11)
                .HasMaxLength(250)
                .HasColumnName("cdNivel11");
            entity.Property(e => e.CdNivel12)
                .HasMaxLength(250)
                .HasColumnName("cdNivel12");
            entity.Property(e => e.CdNivel8)
                .HasMaxLength(250)
                .HasColumnName("cdNivel8");
            entity.Property(e => e.CdNivel9)
                .HasMaxLength(250)
                .HasColumnName("cdNivel9");
            entity.Property(e => e.CdSubGrupo)
                .HasMaxLength(250)
                .HasColumnName("cdSubGrupo");
            entity.Property(e => e.CdSubItem)
                .HasMaxLength(250)
                .HasColumnName("cdSubItem");
            entity.Property(e => e.CdSubTitulo)
                .HasMaxLength(250)
                .HasColumnName("cdSubTitulo");
            entity.Property(e => e.CdTitulo)
                .HasMaxLength(250)
                .HasColumnName("cdTitulo");
            entity.Property(e => e.Codigo).HasMaxLength(250);
            entity.Property(e => e.DsTitulo)
                .HasMaxLength(250)
                .HasColumnName("dsTitulo");
            entity.Property(e => e.FlEscrituracao)
                .HasMaxLength(250)
                .HasColumnName("flEscrituracao");
            entity.Property(e => e.Funcao).HasColumnName("funcao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.TpControle)
                .HasMaxLength(250)
                .HasColumnName("tpControle");
            entity.Property(e => e.TpIndicSupFinanc)
                .HasMaxLength(250)
                .HasColumnName("tpIndicSupFinanc");
            entity.Property(e => e.TpNaturezaInformacao)
                .HasMaxLength(250)
                .HasColumnName("tpNaturezaInformacao");
            entity.Property(e => e.TpNaturezaSaldo)
                .HasMaxLength(250)
                .HasColumnName("tpNaturezaSaldo");
        });

        modelBuilder.Entity<ContasAlteradas2013>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ContasAlteradas2013");

            entity.Property(e => e.CdClasse)
                .HasMaxLength(250)
                .HasColumnName("cdClasse");
            entity.Property(e => e.CdGrupo)
                .HasMaxLength(250)
                .HasColumnName("cdGrupo");
            entity.Property(e => e.CdItem)
                .HasMaxLength(250)
                .HasColumnName("cdItem");
            entity.Property(e => e.CdNivel10)
                .HasMaxLength(250)
                .HasColumnName("cdNivel10");
            entity.Property(e => e.CdNivel11)
                .HasMaxLength(250)
                .HasColumnName("cdNivel11");
            entity.Property(e => e.CdNivel12)
                .HasMaxLength(250)
                .HasColumnName("cdNivel12");
            entity.Property(e => e.CdNivel8)
                .HasMaxLength(250)
                .HasColumnName("cdNivel8");
            entity.Property(e => e.CdNivel9)
                .HasMaxLength(250)
                .HasColumnName("cdNivel9");
            entity.Property(e => e.CdSubGrupo)
                .HasMaxLength(250)
                .HasColumnName("cdSubGrupo");
            entity.Property(e => e.CdSubItem)
                .HasMaxLength(250)
                .HasColumnName("cdSubItem");
            entity.Property(e => e.CdSubTitulo)
                .HasMaxLength(250)
                .HasColumnName("cdSubTitulo");
            entity.Property(e => e.CdTitulo)
                .HasMaxLength(250)
                .HasColumnName("cdTitulo");
            entity.Property(e => e.DsTitulo)
                .HasMaxLength(250)
                .HasColumnName("dsTitulo");
            entity.Property(e => e.FlEscrituracao)
                .HasMaxLength(250)
                .HasColumnName("flEscrituracao");
            entity.Property(e => e.Função).HasColumnName("FUNÇÃO");
            entity.Property(e => e.TpControle)
                .HasMaxLength(250)
                .HasColumnName("tpControle");
            entity.Property(e => e.TpIndicSupFinanc)
                .HasMaxLength(250)
                .HasColumnName("tpIndicSupFinanc");
            entity.Property(e => e.TpNaturezaInformacao)
                .HasMaxLength(250)
                .HasColumnName("tpNaturezaInformacao");
            entity.Property(e => e.TpNaturezaSaldo)
                .HasMaxLength(250)
                .HasColumnName("tpNaturezaSaldo");
        });

        modelBuilder.Entity<ContasExcluidas2013>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ContasExcluidas2013");

            entity.Property(e => e.CdClasse)
                .HasMaxLength(250)
                .HasColumnName("cdClasse");
            entity.Property(e => e.CdGrupo)
                .HasMaxLength(250)
                .HasColumnName("cdGrupo");
            entity.Property(e => e.CdItem)
                .HasMaxLength(250)
                .HasColumnName("cdItem");
            entity.Property(e => e.CdNivel10)
                .HasMaxLength(250)
                .HasColumnName("cdNivel10");
            entity.Property(e => e.CdNivel11)
                .HasMaxLength(250)
                .HasColumnName("cdNivel11");
            entity.Property(e => e.CdNivel12)
                .HasMaxLength(250)
                .HasColumnName("cdNivel12");
            entity.Property(e => e.CdNivel8)
                .HasMaxLength(250)
                .HasColumnName("cdNivel8");
            entity.Property(e => e.CdNivel9)
                .HasMaxLength(250)
                .HasColumnName("cdNivel9");
            entity.Property(e => e.CdSubGrupo)
                .HasMaxLength(250)
                .HasColumnName("cdSubGrupo");
            entity.Property(e => e.CdSubItem)
                .HasMaxLength(250)
                .HasColumnName("cdSubItem");
            entity.Property(e => e.CdSubTitulo)
                .HasMaxLength(250)
                .HasColumnName("cdSubTitulo");
            entity.Property(e => e.CdTitulo)
                .HasMaxLength(250)
                .HasColumnName("cdTitulo");
            entity.Property(e => e.DsTitulo)
                .HasMaxLength(250)
                .HasColumnName("dsTitulo");
            entity.Property(e => e.FlEscrituracao)
                .HasMaxLength(250)
                .HasColumnName("flEscrituracao");
            entity.Property(e => e.Função).HasColumnName("FUNÇÃO");
            entity.Property(e => e.TpControle)
                .HasMaxLength(250)
                .HasColumnName("tpControle");
            entity.Property(e => e.TpIndicSupFinanc)
                .HasMaxLength(250)
                .HasColumnName("tpIndicSupFinanc");
            entity.Property(e => e.TpNaturezaInformacao)
                .HasMaxLength(250)
                .HasColumnName("tpNaturezaInformacao");
            entity.Property(e => e.TpNaturezaSaldo)
                .HasMaxLength(250)
                .HasColumnName("tpNaturezaSaldo");
        });

        modelBuilder.Entity<ContasIncluidas2013>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ContasIncluidas2013");

            entity.Property(e => e.CdClasse)
                .HasMaxLength(250)
                .HasColumnName("cdClasse");
            entity.Property(e => e.CdGrupo)
                .HasMaxLength(250)
                .HasColumnName("cdGrupo");
            entity.Property(e => e.CdItem)
                .HasMaxLength(250)
                .HasColumnName("cdItem");
            entity.Property(e => e.CdNivel10)
                .HasMaxLength(250)
                .HasColumnName("cdNivel10");
            entity.Property(e => e.CdNivel11)
                .HasMaxLength(250)
                .HasColumnName("cdNivel11");
            entity.Property(e => e.CdNivel12)
                .HasMaxLength(250)
                .HasColumnName("cdNivel12");
            entity.Property(e => e.CdNivel8)
                .HasMaxLength(250)
                .HasColumnName("cdNivel8");
            entity.Property(e => e.CdNivel9)
                .HasMaxLength(250)
                .HasColumnName("cdNivel9");
            entity.Property(e => e.CdSubGrupo)
                .HasMaxLength(250)
                .HasColumnName("cdSubGrupo");
            entity.Property(e => e.CdSubItem)
                .HasMaxLength(250)
                .HasColumnName("cdSubItem");
            entity.Property(e => e.CdSubTitulo)
                .HasMaxLength(250)
                .HasColumnName("cdSubTitulo");
            entity.Property(e => e.CdTitulo)
                .HasMaxLength(250)
                .HasColumnName("cdTitulo");
            entity.Property(e => e.DsTitulo)
                .HasMaxLength(250)
                .HasColumnName("dsTitulo");
            entity.Property(e => e.FlEscrituracao)
                .HasMaxLength(250)
                .HasColumnName("flEscrituracao");
            entity.Property(e => e.Função).HasColumnName("FUNÇÃO");
            entity.Property(e => e.TpControle)
                .HasMaxLength(250)
                .HasColumnName("tpControle");
            entity.Property(e => e.TpIndicSupFinanc)
                .HasMaxLength(250)
                .HasColumnName("tpIndicSupFinanc");
            entity.Property(e => e.TpNaturezaInformacao)
                .HasMaxLength(250)
                .HasColumnName("tpNaturezaInformacao");
            entity.Property(e => e.TpNaturezaSaldo)
                .HasMaxLength(250)
                .HasColumnName("tpNaturezaSaldo");
        });

        modelBuilder.Entity<Despesas2011Excluida>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Código)
                .HasMaxLength(255)
                .HasColumnName("CÓDIGO");
            entity.Property(e => e.Especificação).HasColumnName("ESPECIFICAÇÃO");
            entity.Property(e => e.F11).HasMaxLength(255);
            entity.Property(e => e.F2).HasMaxLength(255);
            entity.Property(e => e.F3).HasMaxLength(255);
            entity.Property(e => e.F4).HasMaxLength(255);
            entity.Property(e => e.F5).HasMaxLength(255);
            entity.Property(e => e.F6).HasMaxLength(255);
            entity.Property(e => e.NívelSA)
                .HasMaxLength(255)
                .HasColumnName("Nível S/A");
            entity.Property(e => e.Rpps)
                .HasMaxLength(255)
                .HasColumnName("RPPS");
            entity.Property(e => e.Título)
                .HasMaxLength(255)
                .HasColumnName("TÍTULO");
        });

        modelBuilder.Entity<Despesas2011Incluida>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Código)
                .HasMaxLength(255)
                .HasColumnName("CÓDIGO");
            entity.Property(e => e.Especificação).HasColumnName("ESPECIFICAÇÃO");
            entity.Property(e => e.F2).HasMaxLength(255);
            entity.Property(e => e.F3).HasMaxLength(255);
            entity.Property(e => e.F4).HasMaxLength(255);
            entity.Property(e => e.F5).HasMaxLength(255);
            entity.Property(e => e.F6).HasMaxLength(255);
            entity.Property(e => e.NívelSA)
                .HasMaxLength(255)
                .HasColumnName("Nível S/A");
            entity.Property(e => e.Rpps)
                .HasMaxLength(255)
                .HasColumnName("RPPS");
            entity.Property(e => e.Título)
                .HasMaxLength(255)
                .HasColumnName("TÍTULO");
            entity.Property(e => e.VersãoPlano).HasColumnName("Versão Plano");
        });

        modelBuilder.Entity<Despesas2013Alterada>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Código)
                .HasMaxLength(255)
                .HasColumnName("CÓDIGO");
            entity.Property(e => e.F2).HasMaxLength(255);
            entity.Property(e => e.F3).HasMaxLength(255);
            entity.Property(e => e.F4).HasMaxLength(255);
            entity.Property(e => e.F5).HasMaxLength(255);
            entity.Property(e => e.F6).HasMaxLength(255);
            entity.Property(e => e.NívelSA)
                .HasMaxLength(255)
                .HasColumnName("Nível S/A");
            entity.Property(e => e.Rpps)
                .HasMaxLength(255)
                .HasColumnName("RPPS");
            entity.Property(e => e.TipoAlteracao)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Título)
                .HasMaxLength(255)
                .HasColumnName("TÍTULO");
        });

        modelBuilder.Entity<Despesas2014>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Despesas2014");

            entity.Property(e => e.Código)
                .HasMaxLength(255)
                .HasColumnName("CÓDIGO");
            entity.Property(e => e.Especificacao).IsUnicode(false);
            entity.Property(e => e.F2).HasMaxLength(255);
            entity.Property(e => e.F3).HasMaxLength(255);
            entity.Property(e => e.F4).HasMaxLength(255);
            entity.Property(e => e.F5).HasMaxLength(255);
            entity.Property(e => e.F6).HasMaxLength(255);
            entity.Property(e => e.NívelSA)
                .HasMaxLength(255)
                .HasColumnName("Nível S/A");
            entity.Property(e => e.Título)
                .HasMaxLength(255)
                .HasColumnName("TÍTULO");
            entity.Property(e => e.Versao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("versao");
        });

        modelBuilder.Entity<Despesas2015>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Despesas2015");

            entity.Property(e => e.Código)
                .HasMaxLength(255)
                .HasColumnName("CÓDIGO");
            entity.Property(e => e.Especificacao).IsUnicode(false);
            entity.Property(e => e.F2).HasMaxLength(255);
            entity.Property(e => e.F3).HasMaxLength(255);
            entity.Property(e => e.F4).HasMaxLength(255);
            entity.Property(e => e.F5).HasMaxLength(255);
            entity.Property(e => e.F6).HasMaxLength(255);
            entity.Property(e => e.NívelSA)
                .HasMaxLength(255)
                .HasColumnName("Nível S/A");
            entity.Property(e => e.Título)
                .HasMaxLength(255)
                .HasColumnName("TÍTULO");
            entity.Property(e => e.Versao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("versao");
        });

        modelBuilder.Entity<Despesas2015Excluida>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Código)
                .HasMaxLength(255)
                .HasColumnName("CÓDIGO");
            entity.Property(e => e.F2).HasMaxLength(255);
            entity.Property(e => e.F3).HasMaxLength(255);
            entity.Property(e => e.F4).HasMaxLength(255);
            entity.Property(e => e.F5).HasMaxLength(255);
            entity.Property(e => e.F6).HasMaxLength(255);
            entity.Property(e => e.NívelSA)
                .HasMaxLength(255)
                .HasColumnName("Nível S/A");
            entity.Property(e => e.Título)
                .HasMaxLength(255)
                .HasColumnName("TÍTULO");
            entity.Property(e => e.Versao)
                .HasMaxLength(255)
                .HasColumnName("versao");
        });

        modelBuilder.Entity<Despesas2015Incluida>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Código)
                .HasMaxLength(255)
                .HasColumnName("CÓDIGO");
            entity.Property(e => e.F2).HasMaxLength(255);
            entity.Property(e => e.F3).HasMaxLength(255);
            entity.Property(e => e.F4).HasMaxLength(255);
            entity.Property(e => e.F5).HasMaxLength(255);
            entity.Property(e => e.F6).HasMaxLength(255);
            entity.Property(e => e.NívelSA)
                .HasMaxLength(255)
                .HasColumnName("Nível S/A");
            entity.Property(e => e.Título)
                .HasMaxLength(255)
                .HasColumnName("TÍTULO");
            entity.Property(e => e.Versao).HasColumnName("versao");
        });

        modelBuilder.Entity<Despesas2021>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Despesas2021");

            entity.Property(e => e.Código)
                .HasMaxLength(255)
                .HasColumnName("CÓDIGO");
            entity.Property(e => e.Especificacao).IsUnicode(false);
            entity.Property(e => e.F2).HasMaxLength(255);
            entity.Property(e => e.F3).HasMaxLength(255);
            entity.Property(e => e.F4).HasMaxLength(255);
            entity.Property(e => e.F5).HasMaxLength(255);
            entity.Property(e => e.F6).HasMaxLength(255);
            entity.Property(e => e.NrAnoAplicacao).HasColumnName("nrAnoAplicacao");
            entity.Property(e => e.NívelSA)
                .HasMaxLength(255)
                .HasColumnName("Nível S/A");
            entity.Property(e => e.Título)
                .HasMaxLength(255)
                .HasColumnName("TÍTULO");
            entity.Property(e => e.Versao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("versao");
        });

        modelBuilder.Entity<DespesasExcluidas2013>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DespesasExcluidas2013");

            entity.Property(e => e.CdNatDespesa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdNatDespesa");
        });

        modelBuilder.Entity<Fontes2013>(entity =>
        {
            entity.HasKey(e => e.IdFonte).HasName("PK_BKPtbOrcFontes2013");

            entity.ToTable("Fontes2013");

            entity.Property(e => e.IdFonte).ValueGeneratedNever();
            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.DsFonte)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsFonte");
            entity.Property(e => e.DsFonteRecurso)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsFonteRecurso");
            entity.Property(e => e.DsTipoFonte)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("dsTipoFonte");
            entity.Property(e => e.FlPadraoTce)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPadraoTCE");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlSaldoInicial)
                .HasColumnType("money")
                .HasColumnName("vlSaldoInicial");
        });

        modelBuilder.Entity<Licita2>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("licita2");

            entity.Property(e => e.Ano)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ano");
            entity.Property(e => e.Classificacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("classificacao");
            entity.Property(e => e.Column40)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 40");
            entity.Property(e => e.CondiçãoDePgto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Condição de Pgto");
            entity.Property(e => e.Convidado)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Cpf)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CPF");
            entity.Property(e => e.Cpfcnpj)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CPFCNPJ");
            entity.Property(e => e.DataAbertura)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DataDaCotação)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Data da Cotação");
            entity.Property(e => e.DataDoConvite)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Data do Convite");
            entity.Property(e => e.DataDoCredenciamento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Data do Credenciamento");
            entity.Property(e => e.DataDoParecer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Data do Parecer");
            entity.Property(e => e.DataEdital)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DataJulgamento)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DataPublicação)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Data Publicação");
            entity.Property(e => e.Descricao)
                .HasMaxLength(5000)
                .IsUnicode(false);
            entity.Property(e => e.Empresa)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.FormaPagamento)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.HoraAbertura)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.HoraJulgamento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("HoraJUlgamento");
            entity.Property(e => e.Idpessoacontratada).HasColumnName("idpessoacontratada");
            entity.Property(e => e.InformaçõesAdicionais)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Informações Adicionais");
            entity.Property(e => e.Item)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Justificativa)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LocalLicitacao)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Modalidade)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.NomeDaPessoa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Nome da Pessoa");
            entity.Property(e => e.NomeRazaoSocial)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Numero)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("numero");
            entity.Property(e => e.Parecer)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrazoDeExecução)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Prazo de Execução");
            entity.Property(e => e.PrazoEntrega)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProjAtiv)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Quantidade)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RegimeExecucao)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TipoEntrega)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Tipoavaliacao)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ValorMaximo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ValorUnitMaximo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.VeiculoPub)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.VencimentoProposta)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.VlrUnit)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<LrfInscricaoSaldoDividaAtiva>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("lrfInscricaoSaldoDividaAtiva");

            entity.Property(e => e.CdDivida)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdDivida");
            entity.Property(e => e.CdTributo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdTributo");
            entity.Property(e => e.IdPessoa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("idPessoa");
            entity.Property(e => e.NmContribuinte)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmContribuinte");
            entity.Property(e => e.NrAnoDivida)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrAnoDivida");
            entity.Property(e => e.NrAnoDividaAtiva)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrAnoDividaAtiva");
            entity.Property(e => e.NrAnoInclusao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrAnoInclusao");
            entity.Property(e => e.NrBimestreInclusao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrBimestreInclusao");
            entity.Property(e => e.NrDocumentoContratado)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrDocumentoContratado");
            entity.Property(e => e.TpDocumento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("tpDocumento");
            entity.Property(e => e.VlLancado)
                .HasColumnType("money")
                .HasColumnName("vlLancado");
        });

        modelBuilder.Entity<Rapam>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RAPAm");

            entity.Property(e => e.CdAgencia)
                .HasMaxLength(255)
                .HasColumnName("cdAgencia");
            entity.Property(e => e.CdAreaAtuacao)
                .HasMaxLength(255)
                .HasColumnName("cdAreaAtuacao");
            entity.Property(e => e.CdBanco)
                .HasMaxLength(255)
                .HasColumnName("cdBanco");
            entity.Property(e => e.CdBemObrigacao)
                .HasMaxLength(255)
                .HasColumnName("cdBemObrigacao");
            entity.Property(e => e.CdConta)
                .HasMaxLength(255)
                .HasColumnName("cdConta");
            entity.Property(e => e.CdContabilCredor)
                .HasMaxLength(255)
                .HasColumnName("cdContabilCredor");
            entity.Property(e => e.CdControle)
                .HasMaxLength(255)
                .HasColumnName("cdControle");
            entity.Property(e => e.CdConvenioAuxilio)
                .HasMaxLength(255)
                .HasColumnName("cdConvenioAuxilio");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(255)
                .HasColumnName("cdFonte");
            entity.Property(e => e.CdFuncionalProgramatica)
                .HasMaxLength(255)
                .HasColumnName("cdFuncionalProgramatica");
            entity.Property(e => e.CdModalidadeLicitacao)
                .HasMaxLength(255)
                .HasColumnName("cdModalidadeLicitacao");
            entity.Property(e => e.CdNaturezaDespesa)
                .HasMaxLength(255)
                .HasColumnName("cdNaturezaDespesa");
            entity.Property(e => e.CdProjetoAtividade)
                .HasMaxLength(255)
                .HasColumnName("cdProjetoAtividade");
            entity.Property(e => e.DsHistorico).HasColumnName("dsHistorico");
            entity.Property(e => e.DtEmpenho)
                .HasColumnType("datetime")
                .HasColumnName("dtEmpenho");
            entity.Property(e => e.FlIndContrapartida)
                .HasMaxLength(255)
                .HasColumnName("flIndContrapartida");
            entity.Property(e => e.FlProcessado)
                .HasMaxLength(255)
                .HasColumnName("flProcessado");
            entity.Property(e => e.FlRecursoVinculado)
                .HasMaxLength(255)
                .HasColumnName("flRecursoVinculado");
            entity.Property(e => e.FlServicoDivida)
                .HasMaxLength(255)
                .HasColumnName("flServicoDivida");
            entity.Property(e => e.IdContrato)
                .HasMaxLength(255)
                .HasColumnName("idContrato");
            entity.Property(e => e.IdEmpresa).HasColumnName("idEmpresa");
            entity.Property(e => e.IdPessoa).HasColumnName("idPessoa");
            entity.Property(e => e.NmCredor)
                .HasMaxLength(255)
                .HasColumnName("nmCredor");
            entity.Property(e => e.NrAnoEmpenho).HasColumnName("nrAnoEmpenho");
            entity.Property(e => e.NrAnoInclusao).HasColumnName("nrAnoInclusao");
            entity.Property(e => e.NrAnoLicitacao)
                .HasMaxLength(255)
                .HasColumnName("nrAnoLicitacao");
            entity.Property(e => e.NrBimestreInclusao).HasColumnName("nrBimestreInclusao");
            entity.Property(e => e.NrDocCredor)
                .HasMaxLength(255)
                .HasColumnName("nrDocCredor");
            entity.Property(e => e.NrEmpenho).HasColumnName("nrEmpenho");
            entity.Property(e => e.NrLicitacao)
                .HasMaxLength(255)
                .HasColumnName("nrLicitacao");
            entity.Property(e => e.TpDocCredor)
                .HasMaxLength(255)
                .HasColumnName("tpDocCredor");
            entity.Property(e => e.VlCanceladoLiquido)
                .HasMaxLength(255)
                .HasColumnName("vlCanceladoLiquido");
            entity.Property(e => e.VlNaoProcessado)
                .HasColumnType("money")
                .HasColumnName("vlNaoProcessado");
            entity.Property(e => e.VlPagoLiquido)
                .HasMaxLength(255)
                .HasColumnName("vlPagoLiquido");
            entity.Property(e => e.VlProcessado)
                .HasColumnType("money")
                .HasColumnName("vlProcessado");
            entity.Property(e => e.VlRestosApagar)
                .HasColumnType("money")
                .HasColumnName("vlRestosAPagar");
        });

        modelBuilder.Entity<Receitas2013Alterada>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Ap)
                .HasMaxLength(255)
                .HasColumnName("AP");
            entity.Property(e => e.F1).HasMaxLength(255);
            entity.Property(e => e.F2).HasMaxLength(255);
            entity.Property(e => e.F3).HasMaxLength(255);
            entity.Property(e => e.F4).HasMaxLength(255);
            entity.Property(e => e.F5).HasMaxLength(255);
            entity.Property(e => e.F6).HasMaxLength(255);
            entity.Property(e => e.F7).HasMaxLength(255);
            entity.Property(e => e.NívelSA)
                .HasMaxLength(255)
                .HasColumnName("Nível S/A");
            entity.Property(e => e.TipoAlteracao)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Título)
                .HasMaxLength(255)
                .HasColumnName("TÍTULO");
        });

        modelBuilder.Entity<Receitas2014>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Receitas2014");

            entity.Property(e => e.CdAlinea)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdAlinea");
            entity.Property(e => e.CdCategoriaEconomica)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdCategoriaEconomica");
            entity.Property(e => e.CdDesdobramento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdDesdobramento");
            entity.Property(e => e.CdDetalhamento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdDetalhamento");
            entity.Property(e => e.CdEspecie)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdEspecie");
            entity.Property(e => e.CdOrigem)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdOrigem");
            entity.Property(e => e.CdRubrica)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdRubrica");
            entity.Property(e => e.CdSubAlinea)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdSubAlinea");
            entity.Property(e => e.DsDesdobramento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsDesdobramento");
            entity.Property(e => e.Especificacao)
                .IsUnicode(false)
                .HasColumnName("ESPECIFICACAO");
            entity.Property(e => e.IdTipoNivelConta)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("idTipoNivelConta");
            entity.Property(e => e.NrAnoAplicacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nrAnoAplicacao");
            entity.Property(e => e.Versao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("versao");
        });

        modelBuilder.Entity<Receitas2016>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Receitas2016");

            entity.Property(e => e.CdAlinea)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdAlinea");
            entity.Property(e => e.CdCategoriaEconomica)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdCategoriaEconomica");
            entity.Property(e => e.CdDesdobramento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdDesdobramento");
            entity.Property(e => e.CdDetalhamento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdDetalhamento");
            entity.Property(e => e.CdEspecie)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdEspecie");
            entity.Property(e => e.CdOrigem)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdOrigem");
            entity.Property(e => e.CdRubrica)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdRubrica");
            entity.Property(e => e.CdSubAlinea)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdSubAlinea");
            entity.Property(e => e.DsDesdobramento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsDesdobramento");
            entity.Property(e => e.Especificacao)
                .IsUnicode(false)
                .HasColumnName("ESPECIFICACAO");
            entity.Property(e => e.IdTipoNivelConta)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("idTipoNivelConta");
            entity.Property(e => e.NrAnoAplicacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nrAnoAplicacao");
            entity.Property(e => e.Versao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("versao");
        });

        modelBuilder.Entity<Receitas2021>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Receitas2021");

            entity.Property(e => e.CdAlinea)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdAlinea");
            entity.Property(e => e.CdCategoriaEconomica)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdCategoriaEconomica");
            entity.Property(e => e.CdDesdobramento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdDesdobramento");
            entity.Property(e => e.CdEspecie)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdEspecie");
            entity.Property(e => e.CdNivel10)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdNivel10");
            entity.Property(e => e.CdNivel11)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdNivel11");
            entity.Property(e => e.CdNivel12)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdNivel12");
            entity.Property(e => e.CdNivel8)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdNivel8");
            entity.Property(e => e.CdNivel9)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdNivel9");
            entity.Property(e => e.CdOrigem)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdOrigem");
            entity.Property(e => e.CdRubrica)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdRubrica");
            entity.Property(e => e.CdSubAlinea)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("cdSubAlinea");
            entity.Property(e => e.DsDesdobramento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsDesdobramento");
            entity.Property(e => e.Especificacao)
                .IsUnicode(false)
                .HasColumnName("ESPECIFICACAO");
            entity.Property(e => e.FlReceitaIntraOrcamentaria)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("flReceitaIntraOrcamentaria");
            entity.Property(e => e.IdTipoEsferaGoverno)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("idTipoEsferaGoverno");
            entity.Property(e => e.IdTipoNivelConta)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("idTipoNivelConta");
            entity.Property(e => e.IdTipoNivelContaNumerico)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("idTipoNivelConta_numerico");
            entity.Property(e => e.IdTipoPermissaoDeducao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("idTipoPermissaoDeducao");
            entity.Property(e => e.NrAnoAplicacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nrAnoAplicacao");
            entity.Property(e => e.Observacao)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Versao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("versao");
        });

        modelBuilder.Entity<TbAmmCancelamentoDividaFlutuante>(entity =>
        {
            entity.HasKey(e => e.IdCancelamento);

            entity.ToTable("tbAmmCancelamentoDividaFlutuante");

            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.CdTipoPassivo).HasColumnName("cdTipoPassivo");
            entity.Property(e => e.DsCancelamento)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsCancelamento");
            entity.Property(e => e.VlCancelado)
                .HasColumnType("money")
                .HasColumnName("vlCancelado");
        });

        modelBuilder.Entity<TbAmmComponentesComissao>(entity =>
        {
            entity.HasKey(e => e.IdComponente);

            entity.ToTable("tbAmmComponentesComissao");

            entity.Property(e => e.CdAtribuicao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdAtribuicao");
            entity.Property(e => e.DtPubAtoDesligamento)
                .HasColumnType("datetime")
                .HasColumnName("dtPubAtoDesligamento");
            entity.Property(e => e.DtPubAtoNomeacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPubAtoNomeacao");
            entity.Property(e => e.NmCredor)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("nmCredor");
            entity.Property(e => e.NrAnoAtoDesligamento).HasColumnName("nrAnoAtoDesligamento");
            entity.Property(e => e.NrAnoAtoNomeacao).HasColumnName("nrAnoAtoNomeacao");
            entity.Property(e => e.NrAtoDesligamento).HasColumnName("nrAtoDesligamento");
            entity.Property(e => e.NrAtoNomeacao).HasColumnName("nrAtoNomeacao");
            entity.Property(e => e.NrDocumentoMembro)
                .HasMaxLength(11)
                .IsUnicode(false)
                .HasColumnName("nrDocumentoMembro");
        });

        modelBuilder.Entity<TbAmmDevolucoesEmpenhoSubvencaoSocial>(entity =>
        {
            entity.HasKey(e => e.IdDevolucaoEmpenho).HasName("PK_tbAmmDevolucaoEmpenhoSubvencaoSocial");

            entity.ToTable("tbAmmDevolucoesEmpenhoSubvencaoSocial");

            entity.Property(e => e.IdDevolucaoEmpenho).ValueGeneratedNever();
            entity.Property(e => e.CdPrestacao)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("cdPrestacao");
            entity.Property(e => e.CdSubvencaoSocial).HasColumnName("cdSubvencaoSocial");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrAnoEmpenho).HasColumnName("nrAnoEmpenho");
            entity.Property(e => e.NrEmpenho).HasColumnName("nrEmpenho");
        });

        modelBuilder.Entity<TbAmmDotacaoEstadualAditivosConvenio>(entity =>
        {
            entity.HasKey(e => e.IdAditivo);

            entity.ToTable("tbAmmDotacaoEstadualAditivosConvenio");

            entity.Property(e => e.CdConvenioAuxilio)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdConvenioAuxilio");
            entity.Property(e => e.CdDotacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdDotacao");
            entity.Property(e => e.DtAditivo)
                .HasColumnType("datetime")
                .HasColumnName("dtAditivo");
        });

        modelBuilder.Entity<TbAmmDotacoesEstaduaisConvenio>(entity =>
        {
            entity.HasKey(e => e.IdDotacaoEstadual);

            entity.ToTable("tbAmmDotacoesEstaduaisConvenio");

            entity.Property(e => e.CdConvenioAuxilio)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdConvenioAuxilio");
            entity.Property(e => e.CdDotacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdDotacao");
        });

        modelBuilder.Entity<TbAmmEstornosRepasseConvenio>(entity =>
        {
            entity.HasKey(e => e.IdEstorno).HasName("PK_tbAmmEstornoRepasseConvenio");

            entity.ToTable("tbAmmEstornosRepasseConvenio");

            entity.Property(e => e.IdEstorno).ValueGeneratedNever();
            entity.Property(e => e.CdConvenioAuxilio).HasColumnName("cdConvenioAuxilio");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.CdReceita)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.DsMotivoEstorno)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMotivoEstorno");
            entity.Property(e => e.DtEstorno)
                .HasColumnType("datetime")
                .HasColumnName("dtEstorno");
            entity.Property(e => e.FlIndContrapartida)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flIndContrapartida");
            entity.Property(e => e.FlIndInterferencia)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flIndInterferencia");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlEstorno)
                .HasColumnType("money")
                .HasColumnName("vlEstorno");
        });

        modelBuilder.Entity<TbAmmExecAntOperCredito>(entity =>
        {
            entity.HasKey(e => e.IdExecAntecipada);

            entity.ToTable("tbAmmExecAntOperCredito");

            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.FlOperacao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flOperacao");
            entity.Property(e => e.NrAnoEmpenho).HasColumnName("nrAnoEmpenho");
            entity.Property(e => e.NrAnoLiquidacao).HasColumnName("nrAnoLiquidacao");
            entity.Property(e => e.NrAnoPagamento).HasColumnName("nrAnoPagamento");
            entity.Property(e => e.NrEmpenho).HasColumnName("nrEmpenho");
            entity.Property(e => e.NrLiquidacao).HasColumnName("nrLiquidacao");
            entity.Property(e => e.NrPagamentoBaixa).HasColumnName("nrPagamentoBaixa");
            entity.Property(e => e.VlAntecipado)
                .HasColumnType("money")
                .HasColumnName("vlAntecipado");
        });

        modelBuilder.Entity<TbAmmExecucoesRecursosProprio>(entity =>
        {
            entity.HasKey(e => e.IdExecucao);

            entity.ToTable("tbAmmExecucoesRecursosProprios");

            entity.Property(e => e.CdConvenioAuxilio).HasColumnName("cdConvenioAuxilio");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.DtPagamento)
                .HasColumnType("datetime")
                .HasColumnName("dtPagamento");
            entity.Property(e => e.FlOperacao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flOperacao");
            entity.Property(e => e.NrAnoEmpenho).HasColumnName("nrAnoEmpenho");
            entity.Property(e => e.NrAnoPagamento).HasColumnName("nrAnoPagamento");
            entity.Property(e => e.NrEmpenho).HasColumnName("nrEmpenho");
            entity.Property(e => e.NrPagamento).HasColumnName("nrPagamento");
            entity.Property(e => e.VlExecucao)
                .HasColumnType("money")
                .HasColumnName("vlExecucao");
        });

        modelBuilder.Entity<TbAmmFontesXconveniosAuxilio>(entity =>
        {
            entity.HasKey(e => e.IdFonteConvenio);

            entity.ToTable("tbAmmFontesXConveniosAuxilios");

            entity.Property(e => e.CdContabilDivFlutuante)
                .HasMaxLength(13)
                .IsUnicode(false)
                .HasColumnName("cdContabilDivFlutuante");
            entity.Property(e => e.CdConvenioAuxilio)
                .HasMaxLength(9)
                .IsUnicode(false)
                .HasColumnName("cdConvenioAuxilio");
            entity.Property(e => e.CdReceitaCapital)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("cdReceitaCapital");
            entity.Property(e => e.CdReceitaCorrente)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("cdReceitaCorrente");
        });

        modelBuilder.Entity<TbAmmGeracaoArquivo>(entity =>
        {
            entity.HasKey(e => e.IdGeracao);

            entity.ToTable("tbAmmGeracaoArquivos");

            entity.HasIndex(e => new { e.NmArquivo, e.DsPeriodo, e.IdEmpresa, e.DtInicial, e.DtFinal }, "IX_tbAmmGeracaoArquivos_nmArquivo_dsPeriodo_idEmpresa_dtInicial_dtFinal");

            entity.Property(e => e.IdGeracao).HasColumnName("idGeracao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsPeriodo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsPeriodo");
            entity.Property(e => e.DtFinal)
                .HasColumnType("datetime")
                .HasColumnName("dtFinal");
            entity.Property(e => e.DtGeracao)
                .HasColumnType("datetime")
                .HasColumnName("dtGeracao");
            entity.Property(e => e.DtInicial)
                .HasColumnType("datetime")
                .HasColumnName("dtInicial");
            entity.Property(e => e.IdEmpresa).HasColumnName("idEmpresa");
            entity.Property(e => e.NmArquivo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmArquivo");
            entity.Property(e => e.NrEnderecoIp)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrEnderecoIP");
        });

        modelBuilder.Entity<TbAmmGeracaoArquivosEmpenho>(entity =>
        {
            entity.HasKey(e => new { e.IdGeracao, e.IdEmpenho });

            entity.ToTable("tbAmmGeracaoArquivosEmpenhos");

            entity.Property(e => e.IdGeracao).HasColumnName("idGeracao");
        });

        modelBuilder.Entity<TbAmmGeracaoArquivosMovimento>(entity =>
        {
            entity.HasKey(e => new { e.IdGeracao, e.IdObjeto });

            entity.ToTable("tbAmmGeracaoArquivosMovimentos");

            entity.Property(e => e.IdGeracao).HasColumnName("idGeracao");
            entity.Property(e => e.NmObjeto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmObjeto");
        });

        modelBuilder.Entity<TbAmmGeracaoArquivosPessoa>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbAmmGeracaoArquivosPessoas");
        });

        modelBuilder.Entity<TbAmmIntervenientesConvenio>(entity =>
        {
            entity.HasKey(e => e.IdInterveniente);

            entity.ToTable("tbAmmIntervenientesConvenio");

            entity.Property(e => e.CdConvenioAuxilio)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdConvenioAuxilio");
            entity.Property(e => e.CdResponsabilidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdResponsabilidade");
            entity.Property(e => e.NmInterveniente)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmInterveniente");
            entity.Property(e => e.NrCnpj)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrCNPJ");
        });

        modelBuilder.Entity<TbAmmLeisOrcamentariasIndireta>(entity =>
        {
            entity.HasKey(e => e.IdAto);

            entity.ToTable("tbAmmLeisOrcamentariasIndiretas");

            entity.Property(e => e.IdAto).ValueGeneratedNever();
            entity.Property(e => e.DtAto)
                .HasColumnType("datetime")
                .HasColumnName("dtAto");
            entity.Property(e => e.DtLei)
                .HasColumnType("datetime")
                .HasColumnName("dtLei");
            entity.Property(e => e.DtPublicacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacao");
            entity.Property(e => e.NrAnoAto).HasColumnName("nrAnoAto");
            entity.Property(e => e.NrAnoLei).HasColumnName("nrAnoLei");
            entity.Property(e => e.NrAto).HasColumnName("nrAto");
            entity.Property(e => e.NrLei).HasColumnName("nrLei");
            entity.Property(e => e.TpAto)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpAto");
            entity.Property(e => e.VlDespesas)
                .HasColumnType("money")
                .HasColumnName("vlDespesas");
            entity.Property(e => e.VlEgressosInterf)
                .HasColumnType("money")
                .HasColumnName("vlEgressosInterf");
            entity.Property(e => e.VlIngressosInterf)
                .HasColumnType("money")
                .HasColumnName("vlIngressosInterf");
            entity.Property(e => e.VlLimiteCreditoAdicional)
                .HasColumnType("money")
                .HasColumnName("vlLimiteCreditoAdicional");
            entity.Property(e => e.VlReceitas)
                .HasColumnType("money")
                .HasColumnName("vlReceitas");
        });

        modelBuilder.Entity<TbAmmPgmtosExtraOrcamConvenio>(entity =>
        {
            entity.HasKey(e => e.IdPagamentoExtraCap);

            entity.ToTable("tbAmmPgmtosExtraOrcamConvenio");

            entity.Property(e => e.IdPagamentoExtraCap).ValueGeneratedNever();
            entity.Property(e => e.CdConvenioAuxilio).HasColumnName("cdConvenioAuxilio");
            entity.Property(e => e.CdDocFiscal).HasColumnName("cdDocFiscal");
            entity.Property(e => e.CdModalidadeLicitacao).HasColumnName("cdModalidadeLicitacao");
            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DtDocFiscal)
                .HasColumnType("datetime")
                .HasColumnName("dtDocFiscal");
            entity.Property(e => e.DtPagamento)
                .HasColumnType("datetime")
                .HasColumnName("dtPagamento");
            entity.Property(e => e.NmCredor)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("nmCredor");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrAnoLicitacao).HasColumnName("nrAnoLicitacao");
            entity.Property(e => e.NrComprovante)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("nrComprovante");
            entity.Property(e => e.NrDocPagamento)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrDocPagamento");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.NrInscricaoEstadual)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrInscricaoEstadual");
            entity.Property(e => e.NrInscricaoMunicipal)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrInscricaoMunicipal");
            entity.Property(e => e.NrLicitacao).HasColumnName("nrLicitacao");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.TpDocPagamento).HasColumnName("tpDocPagamento");
            entity.Property(e => e.TpDocumento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpDocumento");
            entity.Property(e => e.TpEspecie).HasColumnName("tpEspecie");
            entity.Property(e => e.VlPago)
                .HasColumnType("money")
                .HasColumnName("vlPago");
        });

        modelBuilder.Entity<TbAmmRessarcimentosDevolucoesSaldoConvenio>(entity =>
        {
            entity.HasKey(e => e.IdRessarcimento);

            entity.ToTable("tbAmmRessarcimentosDevolucoesSaldoConvenio");

            entity.Property(e => e.IdRessarcimento).ValueGeneratedNever();
            entity.Property(e => e.CdConvenioAuxilio)
                .HasMaxLength(9)
                .IsUnicode(false)
                .HasColumnName("cdConvenioAuxilio");
            entity.Property(e => e.CdReceita)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.VlEstornoRessarcimento)
                .HasColumnType("money")
                .HasColumnName("vlEstornoRessarcimento");
            entity.Property(e => e.VlRessarcimento)
                .HasColumnType("money")
                .HasColumnName("vlRessarcimento");
        });

        modelBuilder.Entity<TbAmmTermosAditivoConvenio>(entity =>
        {
            entity.HasKey(e => e.IdTermo);

            entity.ToTable("tbAmmTermosAditivoConvenio");

            entity.Property(e => e.IdTermo).ValueGeneratedNever();
            entity.Property(e => e.CdConvenioAuxilio)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdConvenioAuxilio");
            entity.Property(e => e.DsAditivo)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsAditivo");
            entity.Property(e => e.DsOutrasClausulas)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsOutrasClausulas");
            entity.Property(e => e.DtAditivo)
                .HasColumnType("datetime")
                .HasColumnName("dtAditivo");
            entity.Property(e => e.DtPrazoVigencia)
                .HasColumnType("datetime")
                .HasColumnName("dtPrazoVigencia");
            entity.Property(e => e.DtPublicacaoDoe)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoDOE");
            entity.Property(e => e.NrAnoDoe).HasColumnName("nrAnoDOE");
            entity.Property(e => e.NrDoe)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("nrDOE");
            entity.Property(e => e.VlAditivo)
                .HasColumnType("money")
                .HasColumnName("vlAditivo");
            entity.Property(e => e.VlContrapartida)
                .HasColumnType("money")
                .HasColumnName("vlContrapartida");
        });

        modelBuilder.Entity<TbAmmTipoEspecy>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbAmmTipoEspecies");

            entity.Property(e => e.NmEspecie)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmEspecie");
        });

        modelBuilder.Entity<TbBackUpCapRecursosContasCorrente>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbBackUpCapRecursosContasCorrentes");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.FlDesdobraReceita)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flDesdobraReceita");
            entity.Property(e => e.FlPadraoPagamento)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPadraoPagamento");
            entity.Property(e => e.IdCc).HasColumnName("IdCC");
        });

        modelBuilder.Entity<TbCapAditivosConvenio>(entity =>
        {
            entity.HasKey(e => e.IdAditivo);

            entity.ToTable("tbCapAditivosConvenios");

            entity.Property(e => e.IdAditivo).HasColumnName("idAditivo");
            entity.Property(e => e.DsAditivo)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsAditivo");
            entity.Property(e => e.DtBaseTce)
                .HasColumnType("datetime")
                .HasColumnName("dtBaseTCE");
            entity.Property(e => e.DtFimVigencia)
                .HasColumnType("datetime")
                .HasColumnName("dtFimVigencia");
            entity.Property(e => e.DtPublicacaoDiario)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoDiario");
            entity.Property(e => e.DtTermoAditivo)
                .HasColumnType("datetime")
                .HasColumnName("dtTermoAditivo");
            entity.Property(e => e.IdTipoAditivo).HasColumnName("idTipoAditivo");
            entity.Property(e => e.NrAditivo).HasColumnName("nrAditivo");
            entity.Property(e => e.NrAnoAditivo).HasColumnName("nrAnoAditivo");
            entity.Property(e => e.NrAnoDiarioOficial).HasColumnName("nrAnoDiarioOficial");
            entity.Property(e => e.NrDiarioOficial).HasColumnName("nrDiarioOficial");
            entity.Property(e => e.NrTermoAditivo).HasColumnName("nrTermoAditivo");
            entity.Property(e => e.VlAditivo)
                .HasColumnType("money")
                .HasColumnName("vlAditivo");
            entity.Property(e => e.VlConcedente)
                .HasColumnType("money")
                .HasColumnName("vlConcedente");
            entity.Property(e => e.VlContraPartidaAditivo)
                .HasColumnType("money")
                .HasColumnName("vlContraPartidaAditivo");
            entity.Property(e => e.VlContrapartida)
                .HasColumnType("money")
                .HasColumnName("vlContrapartida");

            entity.HasOne(d => d.IdRecursoNavigation).WithMany(p => p.TbCapAditivosConvenios)
                .HasForeignKey(d => d.IdRecurso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCapAditivosConvenios_tbCapConvAuxProgramas");

            entity.HasOne(d => d.IdTipoAditivoNavigation).WithMany(p => p.TbCapAditivosConvenios)
                .HasForeignKey(d => d.IdTipoAditivo)
                .HasConstraintName("FK_tbCapAditivosConvenios_tbCapTiposAditivos");
        });

        modelBuilder.Entity<TbCapCancelamentosAditivosConvenio>(entity =>
        {
            entity.HasKey(e => e.IdCancelamento);

            entity.ToTable("tbCapCancelamentosAditivosConvenios");

            entity.Property(e => e.DsMotivo)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DtCancelamento)
                .HasColumnType("datetime")
                .HasColumnName("dtCancelamento");
            entity.Property(e => e.IdAditivo).HasColumnName("idAditivo");

            entity.HasOne(d => d.IdAditivoNavigation).WithMany(p => p.TbCapCancelamentosAditivosConvenios)
                .HasForeignKey(d => d.IdAditivo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCapCancelamentosAditivosConvenios_tbCapAditivosConvenios");
        });

        modelBuilder.Entity<TbCapConvAuxPrograma>(entity =>
        {
            entity.HasKey(e => e.IdRecurso);

            entity.ToTable("tbCapConvAuxProgramas");

            entity.Property(e => e.IdRecurso).ValueGeneratedNever();
            entity.Property(e => e.CdCap).HasColumnName("cdCap");
            entity.Property(e => e.DsObjeto)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DsTipoRecurso)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipoRecurso");
            entity.Property(e => e.DsTipoRecursoRepassador)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipoRecursoRepassador");
            entity.Property(e => e.DtBaseTce)
                .HasColumnType("datetime")
                .HasColumnName("dtBaseTCE");
            entity.Property(e => e.DtCelebracaoTermo)
                .HasColumnType("datetime")
                .HasColumnName("dtCelebracaoTermo");
            entity.Property(e => e.DtEvento)
                .HasColumnType("datetime")
                .HasColumnName("dtEvento");
            entity.Property(e => e.DtInicioVigencia)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioVigencia");
            entity.Property(e => e.DtPublicacaoDoe)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoDoe");
            entity.Property(e => e.DtTerminoVigencia)
                .HasColumnType("datetime")
                .HasColumnName("dtTerminoVigencia");
            entity.Property(e => e.FlPublicacaoDiario)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPublicacaoDiario");
            entity.Property(e => e.NrAnoConvenio).HasColumnName("nrAnoConvenio");
            entity.Property(e => e.NrAnoPublicacaoDoe).HasColumnName("nrAnoPublicacaoDoe");
            entity.Property(e => e.NrConvenio).HasColumnName("nrConvenio");
            entity.Property(e => e.NrDoe).HasColumnName("nrDoe");
            entity.Property(e => e.NrTermo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrTermo");
            entity.Property(e => e.NrTransferencia).HasColumnName("nrTransferencia");
            entity.Property(e => e.VlContraPartida)
                .HasColumnType("money")
                .HasColumnName("vlContraPartida");
            entity.Property(e => e.VlMetaPrevista)
                .HasColumnType("money")
                .HasColumnName("vlMetaPrevista");
            entity.Property(e => e.VlPrevisto)
                .HasColumnType("money")
                .HasColumnName("vlPrevisto");

            entity.HasOne(d => d.IdOrgaoOficialNavigation).WithMany(p => p.TbCapConvAuxProgramas)
                .HasForeignKey(d => d.IdOrgaoOficial)
                .HasConstraintName("FK_tbCapConvAuxProgramas_tbGerOrgaoOficialPublicacao");

            entity.HasOne(d => d.IdRecursoNavigation).WithOne(p => p.TbCapConvAuxPrograma)
                .HasForeignKey<TbCapConvAuxPrograma>(d => d.IdRecurso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCapConvAuxProgramas_tbCapRecursos");

            entity.HasOne(d => d.IdUnidadeMedidaNavigation).WithMany(p => p.TbCapConvAuxProgramas)
                .HasForeignKey(d => d.IdUnidadeMedida)
                .HasConstraintName("FK_tbCapConvAuxProgramas_tbPlaUnidadesMedida");
        });

        modelBuilder.Entity<TbCapConvAuxProgramasConta>(entity =>
        {
            entity.HasKey(e => e.IdCapContas);

            entity.ToTable("tbCapConvAuxProgramasContas");

            entity.Property(e => e.CdContabilDivFlutuante)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContabilDivFlutuante");
            entity.Property(e => e.CdReceitaCapital)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceitaCapital");
            entity.Property(e => e.CdReceitaCorrente)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceitaCorrente");
            entity.Property(e => e.DtPeriodoFim)
                .HasColumnType("datetime")
                .HasColumnName("dtPeriodoFim");
            entity.Property(e => e.DtPeriodoIni)
                .HasColumnType("datetime")
                .HasColumnName("dtPeriodoIni");

            entity.HasOne(d => d.IdRecursoNavigation).WithMany(p => p.TbCapConvAuxProgramasConta)
                .HasForeignKey(d => d.IdRecurso)
                .HasConstraintName("FK_tbCapConvAuxProgramasContas_tbCapConvAuxProgramas");
        });

        modelBuilder.Entity<TbCapConvAuxProgramasRepass>(entity =>
        {
            entity.HasKey(e => e.IdRepasse).HasName("PK_tbCapConvAuxProgramasRepasses_1");

            entity.ToTable("tbCapConvAuxProgramasRepasses");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.CpfCnpjEntidade).HasMaxLength(14);
            entity.Property(e => e.CpfResponsavel).HasMaxLength(11);
            entity.Property(e => e.DtProcesso)
                .HasColumnType("date")
                .HasColumnName("dtProcesso");
            entity.Property(e => e.NmEntidade)
                .HasMaxLength(100)
                .HasColumnName("nmEntidade");
            entity.Property(e => e.NmResponsavel)
                .HasMaxLength(100)
                .HasColumnName("nmResponsavel");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.NrProcesso).HasColumnName("nrProcesso");
            entity.Property(e => e.VlRepassado)
                .HasColumnType("decimal(18, 4)")
                .HasColumnName("vlRepassado");

            entity.HasOne(d => d.IdRecursoNavigation).WithMany(p => p.TbCapConvAuxProgramasRepasses)
                .HasForeignKey(d => d.IdRecurso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCapConvAuxProgramasRepasses_tbCapConvAuxProgramas");
        });

        modelBuilder.Entity<TbCapConvAuxProgramasSituaco>(entity =>
        {
            entity.HasKey(e => e.IdCapSit);

            entity.ToTable("tbCapConvAuxProgramasSituacoes");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObs)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsObs");
            entity.Property(e => e.DtSituacao)
                .HasColumnType("datetime")
                .HasColumnName("dtSituacao");
            entity.Property(e => e.NrSequencial).HasColumnName("nrSequencial");

            entity.HasOne(d => d.IdRecursoNavigation).WithMany(p => p.TbCapConvAuxProgramasSituacos)
                .HasForeignKey(d => d.IdRecurso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCapConvAuxProgramasSituacoes_tbCapConvAuxProgramas");

            entity.HasOne(d => d.IdSituacaoNavigation).WithMany(p => p.TbCapConvAuxProgramasSituacos)
                .HasForeignKey(d => d.IdSituacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCapConvAuxProgramasSituacoes_tbCapTiposSituacao");
        });

        modelBuilder.Entity<TbCapConvAuxProgramasTemp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbCapConvAuxProgramas_temp");

            entity.Property(e => e.CdCap).HasColumnName("cdCap");
            entity.Property(e => e.DsObjeto)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DsTipoRecurso)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipoRecurso");
            entity.Property(e => e.DsTipoRecursoRepassador)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipoRecursoRepassador");
            entity.Property(e => e.DtCelebracaoTermo)
                .HasColumnType("datetime")
                .HasColumnName("dtCelebracaoTermo");
            entity.Property(e => e.DtEvento)
                .HasColumnType("datetime")
                .HasColumnName("dtEvento");
            entity.Property(e => e.DtInicioVigencia)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioVigencia");
            entity.Property(e => e.DtPublicacaoDoe)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoDoe");
            entity.Property(e => e.DtTerminoVigencia)
                .HasColumnType("datetime")
                .HasColumnName("dtTerminoVigencia");
            entity.Property(e => e.FlPublicacaoDiario)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPublicacaoDiario");
            entity.Property(e => e.NrAnoConvenio).HasColumnName("nrAnoConvenio");
            entity.Property(e => e.NrAnoPublicacaoDoe).HasColumnName("nrAnoPublicacaoDoe");
            entity.Property(e => e.NrConvenio).HasColumnName("nrConvenio");
            entity.Property(e => e.NrDoe).HasColumnName("nrDoe");
            entity.Property(e => e.NrTermo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrTermo");
            entity.Property(e => e.NrTransferencia).HasColumnName("nrTransferencia");
            entity.Property(e => e.VlContraPartida)
                .HasColumnType("money")
                .HasColumnName("vlContraPartida");
            entity.Property(e => e.VlMetaPrevista)
                .HasColumnType("money")
                .HasColumnName("vlMetaPrevista");
            entity.Property(e => e.VlPrevisto)
                .HasColumnType("money")
                .HasColumnName("vlPrevisto");
        });

        modelBuilder.Entity<TbCapEstornosExecucaoAntecipadum>(entity =>
        {
            entity.HasKey(e => e.IdEstorno);

            entity.ToTable("tbCapEstornosExecucaoAntecipada");

            entity.Property(e => e.DsMotivo)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DtEstorno)
                .HasColumnType("datetime")
                .HasColumnName("dtEstorno");
            entity.Property(e => e.IdLancamentoEstorno)
                .HasComment("Id do Lançamento contabil estornado")
                .HasColumnName("idLancamentoEstorno");
            entity.Property(e => e.NrAnoEstorno).HasColumnName("nrAnoEstorno");
            entity.Property(e => e.NrEstorno).HasColumnName("nrEstorno");
            entity.Property(e => e.VlEstorno)
                .HasColumnType("money")
                .HasColumnName("vlEstorno");

            entity.HasOne(d => d.IdExecucaoNavigation).WithMany(p => p.TbCapEstornosExecucaoAntecipada)
                .HasForeignKey(d => d.IdExecucao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCapEstornosExecucaoAntecipada_tbCapExecucaoAntecipada");
        });

        modelBuilder.Entity<TbCapExecucaoAntecipadum>(entity =>
        {
            entity.HasKey(e => e.IdExecucao);

            entity.ToTable("tbCapExecucaoAntecipada");

            entity.Property(e => e.DtExecucao)
                .HasColumnType("datetime")
                .HasColumnName("dtExecucao");
            entity.Property(e => e.IdEmpenho).HasColumnName("idEmpenho");
            entity.Property(e => e.IdLancamentoBanco)
                .HasComment("Identificador do lançamento contábil da transferencia, entre contas, ou de deposito ou ressarcimento")
                .HasColumnName("idLancamentoBanco");
            entity.Property(e => e.IdTipoExecucaoAntecipada).HasColumnName("idTipoExecucaoAntecipada");
            entity.Property(e => e.IdTransferencia)
                .HasComment("Identificador da transferencia no SIT para convenios do SIT")
                .HasColumnName("idTransferencia");
            entity.Property(e => e.NrAnoExecucao).HasColumnName("nrAnoExecucao");
            entity.Property(e => e.NrExecucao).HasColumnName("nrExecucao");
            entity.Property(e => e.NrSequenciaAno).HasColumnName("nrSequenciaAno");
            entity.Property(e => e.TpRecurso)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("O-Operação de Credito, C-Convenios, S-SIT")
                .HasColumnName("tpRecurso");
            entity.Property(e => e.VlExecucao)
                .HasColumnType("money")
                .HasColumnName("vlExecucao");

            entity.HasOne(d => d.IdRecursoNavigation).WithMany(p => p.TbCapExecucaoAntecipada)
                .HasForeignKey(d => d.IdRecurso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCapExecucaoAntecipada_tbCapConvAuxProgramas");

            entity.HasOne(d => d.IdTipoExecucaoAntecipadaNavigation).WithMany(p => p.TbCapExecucaoAntecipada)
                .HasForeignKey(d => d.IdTipoExecucaoAntecipada)
                .HasConstraintName("FK_tbCapExecucaoAntecipada_tbCapTiposExecucaoAntecipada");
        });

        modelBuilder.Entity<TbCapOrgaosRepassador>(entity =>
        {
            entity.HasKey(e => e.IdOrgaoRepassador);

            entity.ToTable("tbCapOrgaosRepassador");

            entity.Property(e => e.DsOrgaoRepassador)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsOrgaoRepassador");
            entity.Property(e => e.DsOrigem)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("dsOrigem");
            entity.Property(e => e.IdTcerepassador).HasColumnName("IdTCERepassador");
        });

        modelBuilder.Entity<TbCapRecurso>(entity =>
        {
            entity.HasKey(e => e.IdRecurso);

            entity.ToTable("tbCapRecursos");

            entity.HasIndex(e => e.IdRecurso, "IX_tbCapRecursos_IdRecurso");

            entity.HasIndex(e => new { e.IdRecurso, e.IdOrgaoRepassador }, "IX_tbCapRecursos_IdRecurso_IdOrgaoRepassador").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdRecurso, e.CdContaContabilConsignar }, "IX_tbCapRecursos_IdRecurso_cdContaContabilConsignar");

            entity.Property(e => e.CdContaContabilConsignar)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilConsignar");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.DsOrgaoCedente)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsOrgaoCedente");
            entity.Property(e => e.DsRecurso)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsRecurso");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
            entity.Property(e => e.DsTipoRecurso)
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasColumnName("dsTipoRecurso");
            entity.Property(e => e.DtBaseTce)
                .HasColumnType("datetime")
                .HasColumnName("dtBaseTCE");
            entity.Property(e => e.FlInativo).HasColumnName("flInativo");
            entity.Property(e => e.FlUsaObn)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flUsaOBN");

            entity.HasOne(d => d.IdOrgaoRepassadorNavigation).WithMany(p => p.TbCapRecursos)
                .HasForeignKey(d => d.IdOrgaoRepassador)
                .HasConstraintName("FK_tbCapRecursos_tbCapOrgaosRepassador");
        });

        modelBuilder.Entity<TbCapRecursosContaContabil>(entity =>
        {
            entity.HasKey(e => e.IdRecursoContaContabil);

            entity.ToTable("tbCapRecursosContaContabil");

            entity.Property(e => e.CdContaContabilConsignar)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilConsignar");
            entity.Property(e => e.DtBaseTce)
                .HasColumnType("datetime")
                .HasColumnName("dtBaseTCE");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<TbCapRecursosContasCorrente>(entity =>
        {
            entity.HasKey(e => new { e.IdRecurso, e.IdCc }).HasName("PK_tbCapRecursosContasCorrentes_1");

            entity.ToTable("tbCapRecursosContasCorrentes");

            entity.Property(e => e.IdCc).HasColumnName("IdCC");
            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.FlDesdobraReceita)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flDesdobraReceita");
            entity.Property(e => e.FlPadraoPagamento)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPadraoPagamento");

            entity.HasOne(d => d.IdCcNavigation).WithMany(p => p.TbCapRecursosContasCorrentes)
                .HasForeignKey(d => d.IdCc)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCapRecursosContasCorrentes_tbGerContasCorrente");

            entity.HasOne(d => d.IdRecursoNavigation).WithMany(p => p.TbCapRecursosContasCorrentes)
                .HasForeignKey(d => d.IdRecurso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCapRecursosContasCorrentes_tbCapRecursos");

            entity.HasOne(d => d.IdTipoInvestimentoNavigation).WithMany(p => p.TbCapRecursosContasCorrentes)
                .HasForeignKey(d => d.IdTipoInvestimento)
                .HasConstraintName("FK_tbCapRecursosContasCorrentes_tbGerTipoInvestimentos");
        });

        modelBuilder.Entity<TbCapRecursosFonte>(entity =>
        {
            entity.HasKey(e => new { e.IdRecurso, e.IdFonte });

            entity.ToTable("tbCapRecursosFontes");
        });

        modelBuilder.Entity<TbCapRecursosOrgaoUnidade>(entity =>
        {
            entity.HasKey(e => e.IdRecursoOrgao);

            entity.ToTable("tbCapRecursosOrgaoUnidade");

            entity.Property(e => e.IdRecursoOrgao).HasColumnName("idRecursoOrgao");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("cdUnidade");
            entity.Property(e => e.IdRecurso).HasColumnName("idRecurso");
            entity.Property(e => e.NmOrgao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmOrgao");
            entity.Property(e => e.NmUnidade)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmUnidade");

            entity.HasOne(d => d.IdRecursoNavigation).WithMany(p => p.TbCapRecursosOrgaoUnidades)
                .HasForeignKey(d => d.IdRecurso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCapRecursosOrgaoUnidade_tbCapRecursos");
        });

        modelBuilder.Entity<TbCapRecursosSaldosAnteriore>(entity =>
        {
            entity.HasKey(e => new { e.IdRecurso, e.NrAno }).HasName("PK_tbCapSldAnteriores");

            entity.ToTable("tbCapRecursosSaldosAnteriores");

            entity.Property(e => e.IdRecurso).HasColumnName("idRecurso");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlSaldoAnterior)
                .HasColumnType("money")
                .HasColumnName("vlSaldoAnterior");

            entity.HasOne(d => d.IdRecursoNavigation).WithMany(p => p.TbCapRecursosSaldosAnteriores)
                .HasForeignKey(d => d.IdRecurso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCapRecursosSaldosAnteriores_tbCapRecursos");
        });

        modelBuilder.Entity<TbCapSaldoContrapartidaExecAntecipadum>(entity =>
        {
            entity.HasKey(e => e.IdSaldo);

            entity.ToTable("tbCapSaldoContrapartidaExecAntecipada");

            entity.Property(e => e.IdSaldo).HasColumnName("idSaldo");
            entity.Property(e => e.CdFonteDestino)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonteDestino");
            entity.Property(e => e.CdFonteOrigem)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonteOrigem");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdEmpresa).HasColumnName("idEmpresa");
            entity.Property(e => e.IdTipoContrapartida).HasColumnName("idTipoContrapartida");
            entity.Property(e => e.IdTipoExecucaoAntecipada).HasColumnName("idTipoExecucaoAntecipada");
            entity.Property(e => e.NrAnoAplicacao).HasColumnName("nrAnoAplicacao");
            entity.Property(e => e.NrAnoDocumento).HasColumnName("nrAnoDocumento");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.VlSaldo)
                .HasColumnType("money")
                .HasColumnName("vlSaldo");
        });

        modelBuilder.Entity<TbCapSituaco>(entity =>
        {
            entity.HasKey(e => e.IdSituacao);

            entity.ToTable("tbCapSituacoes");

            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSigla");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
        });

        modelBuilder.Entity<TbCapTipoContrapartidaExecucacaoAntecipadum>(entity =>
        {
            entity.HasKey(e => e.IdTipoContrapartida);

            entity.ToTable("tbCapTipoContrapartidaExecucacaoAntecipada");

            entity.Property(e => e.IdTipoContrapartida)
                .ValueGeneratedNever()
                .HasColumnName("idTipoContrapartida");
            entity.Property(e => e.DsTipoContrapartida)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoContrapartida");
        });

        modelBuilder.Entity<TbCapTiposAditivo>(entity =>
        {
            entity.HasKey(e => e.IdTipoAditivo);

            entity.ToTable("tbCapTiposAditivos");

            entity.Property(e => e.IdTipoAditivo)
                .ValueGeneratedNever()
                .HasColumnName("idTipoAditivo");
            entity.Property(e => e.DsTipoAditivo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoAditivo");
        });

        modelBuilder.Entity<TbCapTiposExecucaoAntecipadum>(entity =>
        {
            entity.HasKey(e => e.IdTipoExecucaoAntecipada);

            entity.ToTable("tbCapTiposExecucaoAntecipada");

            entity.Property(e => e.IdTipoExecucaoAntecipada)
                .ValueGeneratedNever()
                .HasColumnName("idTipoExecucaoAntecipada");
            entity.Property(e => e.DsTipoExecucaoAntecipada)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoExecucaoAntecipada");
        });

        modelBuilder.Entity<TbCntApostilamentoDotaco>(entity =>
        {
            entity.HasKey(e => new { e.IdAtoContratual, e.IdDotacao });

            entity.ToTable("tbCntApostilamentoDotacoes");

            entity.Property(e => e.DtVinculacao)
                .HasColumnType("datetime")
                .HasColumnName("dtVinculacao");
            entity.Property(e => e.FlBloqueiaSaldo).HasColumnName("flBloqueiaSaldo");
            entity.Property(e => e.VlPrevisto)
                .HasColumnType("money")
                .HasColumnName("vlPrevisto");

            entity.HasOne(d => d.IdAtoContratualNavigation).WithMany(p => p.TbCntApostilamentoDotacos)
                .HasForeignKey(d => d.IdAtoContratual)
                .HasConstraintName("FK_tbCntApostilamentoDotacoes_tbCntAtosContratuais");

            entity.HasOne(d => d.IdDotacaoNavigation).WithMany(p => p.TbCntApostilamentoDotacos)
                .HasForeignKey(d => d.IdDotacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntApostilamentoDotacoes_tbOrcDotacoes");
        });

        modelBuilder.Entity<TbCntApostilamentoRecurso>(entity =>
        {
            entity.HasKey(e => new { e.IdAtoContratual, e.IdRecurso });

            entity.ToTable("tbCntApostilamentoRecursos");

            entity.Property(e => e.VlRecurso)
                .HasColumnType("money")
                .HasColumnName("vlRecurso");

            entity.HasOne(d => d.IdAtoContratualNavigation).WithMany(p => p.TbCntApostilamentoRecursos)
                .HasForeignKey(d => d.IdAtoContratual)
                .HasConstraintName("FK_tbCntApostilamentoRecursos_tbCntAtosContratuais");

            entity.HasOne(d => d.IdRecursoNavigation).WithMany(p => p.TbCntApostilamentoRecursos)
                .HasForeignKey(d => d.IdRecurso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntApostilamentoRecursos_tbCapRecursos");
        });

        modelBuilder.Entity<TbCntAtosContratuai>(entity =>
        {
            entity.HasKey(e => e.IdAtoContratual);

            entity.ToTable("tbCntAtosContratuais");

            entity.HasIndex(e => new { e.IdContrato, e.NrAditivo, e.DtTermo, e.IdAtoContratual }, "IX_IdContrato_nrAditivo").HasFillFactor(90);

            entity.HasIndex(e => e.IdTipoAtoContratual, "IX_IdTipoAtoContratual").HasFillFactor(90);

            entity.HasIndex(e => e.IdNumeroAto, "IX_tbCntAtosContratuais_idNumeroAto");

            entity.Property(e => e.CdTcm)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdTCM");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivo)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DsTipoAditivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("dsTipoAditivo");
            entity.Property(e => e.DtEscrituracao)
                .HasColumnType("datetime")
                .HasColumnName("dtEscrituracao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtNovaTermino)
                .HasColumnType("datetime")
                .HasColumnName("dtNovaTermino");
            entity.Property(e => e.DtPublicacaoTermo)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoTermo");
            entity.Property(e => e.DtTermo)
                .HasColumnType("datetime")
                .HasColumnName("dtTermo");
            entity.Property(e => e.FlPrevisaoContratual)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPrevisaoContratual");
            entity.Property(e => e.IdNumeroAto).HasColumnName("idNumeroAto");
            entity.Property(e => e.IdTipoMotivoRescisao).HasColumnName("idTipoMotivoRescisao");
            entity.Property(e => e.IdTipoOperacaoAto).HasColumnName("idTipoOperacaoAto");
            entity.Property(e => e.NrAditivo).HasColumnName("nrAditivo");
            entity.Property(e => e.VlAditivo)
                .HasColumnType("money")
                .HasColumnName("vlAditivo");
            entity.Property(e => e.VlAtualizadoContrato)
                .HasColumnType("money")
                .HasColumnName("vlAtualizadoContrato");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.TbCntAtosContratuais)
                .HasForeignKey(d => d.IdContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntAtosContratuais_tbCntContratos");

            entity.HasOne(d => d.IdNumeroAtoNavigation).WithMany(p => p.TbCntAtosContratuais)
                .HasForeignKey(d => d.IdNumeroAto)
                .HasConstraintName("FK_tbCntAtosContratuais_tbCntNumeroAtosContratuais");

            entity.HasOne(d => d.IdTipoAtoContratualNavigation).WithMany(p => p.TbCntAtosContratuais)
                .HasForeignKey(d => d.IdTipoAtoContratual)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntAtosContratuais_tbCntTiposAtosContratuais");

            entity.HasOne(d => d.IdTipoMotivoRescisaoNavigation).WithMany(p => p.TbCntAtosContratuais)
                .HasForeignKey(d => d.IdTipoMotivoRescisao)
                .HasConstraintName("FK_tbCntAtosContratuais_tbCntTiposMotivoRescisaoContrato");

            entity.HasOne(d => d.IdTipoOperacaoAtoNavigation).WithMany(p => p.TbCntAtosContratuais)
                .HasForeignKey(d => d.IdTipoOperacaoAto)
                .HasConstraintName("FK_tbCntAtosContratuais_tbCntTiposOperacaoAtosContratuais");
        });

        modelBuilder.Entity<TbCntAtosContratuaisItensLicitacao>(entity =>
        {
            entity.HasKey(e => e.IdAtoContratoItem);

            entity.ToTable("tbCntAtosContratuaisItensLicitacao");

            entity.HasIndex(e => e.IdAtoContratual, "IX_tbCntAtosContratuaisItensLicitacao_IdAtoContratual");

            entity.HasIndex(e => new { e.IdItem, e.NrLote, e.DsTipoOperacao }, "IX_tbCntAtosContratuaisItensLicitacao_IdItem_nrLote_dsTipoOperacao");

            entity.Property(e => e.DsTipoOperacao)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoOperacao");
            entity.Property(e => e.IdTipoRedimensionamento).HasColumnName("idTipoRedimensionamento");
            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.NrQtdAditivada)
                .HasColumnType("money")
                .HasColumnName("nrQtdAditivada");
            entity.Property(e => e.VlTotalAditivado)
                .HasColumnType("money")
                .HasColumnName("vlTotalAditivado");
            entity.Property(e => e.VlUnitAditivado)
                .HasColumnType("money")
                .HasColumnName("vlUnitAditivado");

            entity.HasOne(d => d.IdAtoContratualNavigation).WithMany(p => p.TbCntAtosContratuaisItensLicitacaos)
                .HasForeignKey(d => d.IdAtoContratual)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntAtosContratuaisItensLicitacao_tbCntAtosContratuais");

            entity.HasOne(d => d.IdItemNavigation).WithMany(p => p.TbCntAtosContratuaisItensLicitacaos)
                .HasForeignKey(d => d.IdItem)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntAtosContratuaisItensLicitacao_tbDspItens");

            entity.HasOne(d => d.IdTipoRedimensionamentoNavigation).WithMany(p => p.TbCntAtosContratuaisItensLicitacaos)
                .HasForeignKey(d => d.IdTipoRedimensionamento)
                .HasConstraintName("FK_tbCntAtosContratuaisItensLicitacao_tbCntTiposRedimensionamentos");
        });

        modelBuilder.Entity<TbCntAtosContratuaisPublicaco>(entity =>
        {
            entity.HasKey(e => new { e.IdNumeroAto, e.IdOrgaoOficial });

            entity.ToTable("tbCntAtosContratuaisPublicacoes");

            entity.Property(e => e.IdNumeroAto).HasColumnName("idNumeroAto");
            entity.Property(e => e.DtPublicacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacao");

            entity.HasOne(d => d.IdNumeroAtoNavigation).WithMany(p => p.TbCntAtosContratuaisPublicacos)
                .HasForeignKey(d => d.IdNumeroAto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntAtosContratuaisPublicacoes_tbCntNumeroAtosContratuais");

            entity.HasOne(d => d.IdOrgaoOficialNavigation).WithMany(p => p.TbCntAtosContratuaisPublicacos)
                .HasForeignKey(d => d.IdOrgaoOficial)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntAtosContratuaisPublicacoes_tbGerOrgaoOficialPublicacao");
        });

        modelBuilder.Entity<TbCntContrato>(entity =>
        {
            entity.HasKey(e => e.IdContrato);

            entity.ToTable("tbCntContratos");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.NrContrato, e.CdTipoAtoContratual, e.IdContrato }, "IX_IdEmpresa_nrAno_nrContrato")
                .IsDescending(false, true, false, false, false)
                .HasFillFactor(90);

            entity.HasIndex(e => new { e.IdLicitacao, e.IdContrato, e.IdPessoa }, "IX_IdLicitacao_IdContrato_IdPessoa").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.IdPessoa, e.DtContrato }, "IX_tbCntContratos_IdEmpresa_IdPessoa_dtContrato");

            entity.HasIndex(e => e.IdEmpresa, "IX_tbCntContratos_IdEmpresa_inc_IdContrato_nrAno_cdTipoAtoContratual_nrContr_dtInicioPrazo_dtTerminoPrazo_vlContr");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrContrato }, "IX_tbCntContratos_IdEmpresa_nrContrato");

            entity.HasIndex(e => new { e.IdLicitacao, e.IdContrato }, "IX_tbCntContratos_IdLicitacao_IdContrato");

            entity.HasIndex(e => new { e.IdLicitacao, e.IdContrato, e.DtTerminoPrazo }, "IX_tbCntContratos_IdLicitacao_IdContrato_dtTerminoPrazo");

            entity.HasIndex(e => new { e.IdEmpresa, e.IdContrato, e.IdTipoContrato, e.NrContrato }, "IX_tbCntContratos_K2_K1_K4_K6_3_5_14_15_16");

            entity.HasIndex(e => e.NrAno, "IX_tbCntContratos_nrAno_inc_IdContr_IdEmp_IdTipoContr_cdTipoAtoContr_nrContr");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdTcm)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdTCM");
            entity.Property(e => e.CdTipoAtoContratual).HasColumnName("cdTipoAtoContratual");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsContratoGerado)
                .IsUnicode(false)
                .HasColumnName("dsContratoGerado");
            entity.Property(e => e.DsFormaPagamento)
                .IsUnicode(false)
                .HasColumnName("dsFormaPagamento");
            entity.Property(e => e.DsGarantiaContrato)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsGarantiaContrato");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginAlteracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginAlteracao");
            entity.Property(e => e.DsMultaInadimplemento)
                .IsUnicode(false)
                .HasColumnName("dsMultaInadimplemento");
            entity.Property(e => e.DsMultaRescisoria)
                .IsUnicode(false)
                .HasColumnName("dsMultaRescisoria");
            entity.Property(e => e.DsObjeto)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DtAlteracao)
                .HasColumnType("datetime")
                .HasColumnName("dtAlteracao");
            entity.Property(e => e.DtAssinatura)
                .HasColumnType("datetime")
                .HasColumnName("dtAssinatura");
            entity.Property(e => e.DtContrato)
                .HasColumnType("datetime")
                .HasColumnName("dtContrato");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtInicioPrazo)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioPrazo");
            entity.Property(e => e.DtPublicacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacao");
            entity.Property(e => e.DtTerminoPrazo)
                .HasColumnType("datetime")
                .HasColumnName("dtTerminoPrazo");
            entity.Property(e => e.FlCessaoContratual)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flCessaoContratual");
            entity.Property(e => e.FlFornecimentoImediato)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flFornecimentoImediato");
            entity.Property(e => e.FlPrevisaoSubContratacao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPrevisaoSubContratacao");
            entity.Property(e => e.IdContratoOrigem).HasColumnName("idContratoOrigem");
            entity.Property(e => e.IdTcecontrato).HasColumnName("IdTCEContrato");
            entity.Property(e => e.IdTipoMultaContrato).HasColumnName("idTipoMultaContrato");
            entity.Property(e => e.IdTipoOrigemContrato).HasColumnName("idTipoOrigemContrato");
            entity.Property(e => e.NmOrgao)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("nmOrgao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrContrato).HasColumnName("nrContrato");
            entity.Property(e => e.NrProtocolo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrProtocolo");
            entity.Property(e => e.TpClassificacaoContabil)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpClassificacaoContabil");
            entity.Property(e => e.VlContrato)
                .HasColumnType("money")
                .HasColumnName("vlContrato");
            entity.Property(e => e.VlRecursoOperCredito)
                .HasColumnType("money")
                .HasColumnName("vlRecursoOperCredito");

            entity.HasOne(d => d.IdCondicaoPgtoNavigation).WithMany(p => p.TbCntContratos)
                .HasForeignKey(d => d.IdCondicaoPgto)
                .HasConstraintName("FK_tbCntContratos_tbGerCondicoesPagamento");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbCntContratos)
                .HasForeignKey(d => d.IdLicitacao)
                .HasConstraintName("FK_tbCntContratos_tbLicLicitacoes");

            entity.HasOne(d => d.IdRegimeExecucaoNavigation).WithMany(p => p.TbCntContratos)
                .HasForeignKey(d => d.IdRegimeExecucao)
                .HasConstraintName("FK_tbCntContratos_tbLicRegimesExecucoes");

            entity.HasOne(d => d.IdTipoContratoNavigation).WithMany(p => p.TbCntContratos)
                .HasForeignKey(d => d.IdTipoContrato)
                .HasConstraintName("FK_tbCntContratos_tbCntTiposContratos");

            entity.HasOne(d => d.IdTipoGarantiaNavigation).WithMany(p => p.TbCntContratos)
                .HasForeignKey(d => d.IdTipoGarantia)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntContratos_tbCntTiposGarantiaContratual");

            entity.HasOne(d => d.IdTipoMultaContratoNavigation).WithMany(p => p.TbCntContratos)
                .HasForeignKey(d => d.IdTipoMultaContrato)
                .HasConstraintName("FK_tbCntContratos_tbCntTiposMultasContrato");

            entity.HasOne(d => d.IdTipoOrigemContratoNavigation).WithMany(p => p.TbCntContratos)
                .HasForeignKey(d => d.IdTipoOrigemContrato)
                .HasConstraintName("FK_tbCntContratos_tbCntTiposOrigemContrato");
        });

        modelBuilder.Entity<TbCntContratosAbertura>(entity =>
        {
            entity.HasKey(e => e.IdContratoAbertura);

            entity.ToTable("tbCntContratosAbertura");

            entity.Property(e => e.NrExercicio).HasColumnName("nrExercicio");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
        });

        modelBuilder.Entity<TbCntContratosAssinatura>(entity =>
        {
            entity.HasKey(e => new { e.IdContrato, e.IdPessoa });

            entity.ToTable("tbCntContratosAssinatura");

            entity.Property(e => e.DtRegistro)
                .HasColumnType("datetime")
                .HasColumnName("dtRegistro");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.TbCntContratosAssinaturas)
                .HasForeignKey(d => d.IdContrato)
                .HasConstraintName("FK_tbCntContratosAssinatura_tbCntContratos");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbCntContratosAssinaturas)
                .HasForeignKey(d => d.IdPessoa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntContratosAssinatura_tbGerPessoas");
        });

        modelBuilder.Entity<TbCntContratosContasContabil>(entity =>
        {
            entity.HasKey(e => new { e.IdContrato, e.IdContaContabil });

            entity.ToTable("tbCntContratosContasContabil");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.TbCntContratosContasContabils)
                .HasForeignKey(d => d.IdContrato)
                .HasConstraintName("FK_tbCntContratosContasContabil_tbCntContratos");
        });

        modelBuilder.Entity<TbCntContratosDotaco>(entity =>
        {
            entity.HasKey(e => new { e.IdContrato, e.IdDotacao }).HasName("PK_tbCntContratosDotacoes_1");

            entity.ToTable("tbCntContratosDotacoes");

            entity.Property(e => e.DtVinculacao)
                .HasColumnType("datetime")
                .HasColumnName("dtVinculacao");
            entity.Property(e => e.FlBloqueiaSaldo).HasColumnName("flBloqueiaSaldo");
            entity.Property(e => e.VlPrevisto)
                .HasColumnType("money")
                .HasColumnName("vlPrevisto");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.TbCntContratosDotacos)
                .HasForeignKey(d => d.IdContrato)
                .HasConstraintName("FK_tbCntContratosDotacoes_tbCntContratos1");

            entity.HasOne(d => d.IdDotacaoNavigation).WithMany(p => p.TbCntContratosDotacos)
                .HasForeignKey(d => d.IdDotacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntContratosDotacoes_tbOrcDotacoes");
        });

        modelBuilder.Entity<TbCntContratosItensLicitacao>(entity =>
        {
            entity.HasKey(e => e.IdContratoItemLicitacao);

            entity.ToTable("tbCntContratosItensLicitacao");

            entity.HasIndex(e => new { e.IdContrato, e.IdContratoItemLicitacao, e.IdItem, e.NrLote, e.VlUnitAtualizado, e.VlTotalAditivado }, "IX_IdContrato_IdContratoItemLicitacao_IdItem_nrLote_vlUnitAtualizado_vlTotalAditivado").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdContrato, e.IdItem, e.NrLote, e.IdContratoItemLicitacao }, "IX_IdContrato_IdItem_nrLote").HasFillFactor(90);

            entity.HasIndex(e => e.IdItem, "IX_IdItem").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdContrato, e.IdContratoItemLicitacao, e.IdItem, e.FlStatus }, "IX_tbCntContratosItensLicitacao_IdContrato_IdContratoItemLicitacao_IdItem_flStatus");

            entity.Property(e => e.DsMarca)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsMarca");
            entity.Property(e => e.FlStatus)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flStatus");
            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.NrQtde)
                .HasColumnType("money")
                .HasColumnName("nrQtde");
            entity.Property(e => e.NrQtdeAditivada)
                .HasColumnType("money")
                .HasColumnName("nrQtdeAditivada");
            entity.Property(e => e.VlTotal)
                .HasColumnType("money")
                .HasColumnName("vlTotal");
            entity.Property(e => e.VlTotalAditivado)
                .HasColumnType("money")
                .HasColumnName("vlTotalAditivado");
            entity.Property(e => e.VlUnitAtualizado)
                .HasColumnType("money")
                .HasColumnName("vlUnitAtualizado");
            entity.Property(e => e.VlUnitario)
                .HasColumnType("money")
                .HasColumnName("vlUnitario");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.TbCntContratosItensLicitacaos)
                .HasForeignKey(d => d.IdContrato)
                .HasConstraintName("FK_tbCntContratosItensLicitacao_tbCntContratos");

            entity.HasOne(d => d.IdItemNavigation).WithMany(p => p.TbCntContratosItensLicitacaos)
                .HasForeignKey(d => d.IdItem)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntContratosItensLicitacao_tbDspItens");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbCntContratosItensLicitacaos)
                .HasForeignKey(d => d.IdPessoa)
                .HasConstraintName("FK_tbCntContratosItensLicitacao_tbGerPessoas");
        });

        modelBuilder.Entity<TbCntContratosParte>(entity =>
        {
            entity.HasKey(e => e.IdParteContrato).HasName("PK_tbCntContratosPartes_1");

            entity.ToTable("tbCntContratosPartes");

            entity.HasIndex(e => new { e.IdContrato, e.IdTipoParteContrato }, "IX_tbCntContratosPartes_IdContrato_idTipoParteContrato_inc_IdPessoa");

            entity.HasIndex(e => new { e.IdPessoa, e.IdTipoParteContrato, e.IdContrato }, "IX_tbCntContratosPartes_IdPessoa_idTipoParteContrato_idContrato");

            entity.HasIndex(e => new { e.IdTipoParteContrato, e.DtFim }, "IX_tbCntContratosPartes_idTipoParteContrato_dtFim_inc_IdContrato_IdPessoa");

            entity.HasIndex(e => e.IdTipoParteContrato, "IX_tbCntContratosPartes_idTipoParteContrato_inc_IdContrato_IdPessoa");

            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.IdTipoParteContrato).HasColumnName("idTipoParteContrato");
            entity.Property(e => e.VlContrato)
                .HasColumnType("money")
                .HasColumnName("vlContrato");
        });

        modelBuilder.Entity<TbCntContratosPublicacao>(entity =>
        {
            entity.HasKey(e => new { e.IdContrato, e.IdOrgaoOficial });

            entity.ToTable("tbCntContratosPublicacao");

            entity.Property(e => e.DtPublicacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacao");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.TbCntContratosPublicacaos)
                .HasForeignKey(d => d.IdContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntContratosPublicacao_tbCntContratos");

            entity.HasOne(d => d.IdOrgaoOficialNavigation).WithMany(p => p.TbCntContratosPublicacaos)
                .HasForeignKey(d => d.IdOrgaoOficial)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntContratosPublicacao_tbGerOrgaoOficialPublicacao");
        });

        modelBuilder.Entity<TbCntContratosRecurso>(entity =>
        {
            entity.HasKey(e => new { e.IdContrato, e.IdRecurso });

            entity.ToTable("tbCntContratosRecursos");

            entity.Property(e => e.VlRecurso)
                .HasColumnType("money")
                .HasColumnName("vlRecurso");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.TbCntContratosRecursos)
                .HasForeignKey(d => d.IdContrato)
                .HasConstraintName("FK_tbCntContratosRecursos_tbCntContratos");

            entity.HasOne(d => d.IdRecursoNavigation).WithMany(p => p.TbCntContratosRecursos)
                .HasForeignKey(d => d.IdRecurso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntContratosRecursos_tbCapRecursos");
        });

        modelBuilder.Entity<TbCntEfeitosInexecucao>(entity =>
        {
            entity.HasKey(e => e.IdEfeitoInexecucao);

            entity.ToTable("tbCntEfeitosInexecucao");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivo)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DsTipoEfeito)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoEfeito");
            entity.Property(e => e.DsTipoPenalidade)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoPenalidade");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtPublicacaoTermo)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoTermo");
            entity.Property(e => e.DtTermo)
                .HasColumnType("datetime")
                .HasColumnName("dtTermo");
            entity.Property(e => e.FlInexecContratante)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flInexecContratante");
            entity.Property(e => e.VlEfeito)
                .HasColumnType("money")
                .HasColumnName("vlEfeito");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.TbCntEfeitosInexecucaos)
                .HasForeignKey(d => d.IdContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntEfeitosInexecucao_tbCntContratos");
        });

        modelBuilder.Entity<TbCntNumeroAtosContratuai>(entity =>
        {
            entity.HasKey(e => e.IdNumeroAto);

            entity.ToTable("tbCntNumeroAtosContratuais");

            entity.HasIndex(e => e.IdContrato, "IX_tbCntNumeroAtosContratuais_IdContrato");

            entity.Property(e => e.IdNumeroAto).HasColumnName("idNumeroAto");
            entity.Property(e => e.CdTcm)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdTCM");
            entity.Property(e => e.CdTipoNumero)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdTipoNumero");
            entity.Property(e => e.DsAditivo)
                .IsUnicode(false)
                .HasColumnName("dsAditivo");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginAlteracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginAlteracao");
            entity.Property(e => e.DsTipoLateral)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoLateral");
            entity.Property(e => e.DtAlteracao)
                .HasColumnType("datetime")
                .HasColumnName("dtAlteracao");
            entity.Property(e => e.DtEscrituracao)
                .HasColumnType("datetime")
                .HasColumnName("dtEscrituracao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtTermo)
                .HasColumnType("datetime")
                .HasColumnName("dtTermo");
            entity.Property(e => e.FlTipoLateral).HasColumnName("flTipoLateral");
            entity.Property(e => e.IdNumeroAtoOrigem).HasColumnName("idNumeroAtoOrigem");
            entity.Property(e => e.NrAditivo).HasColumnName("nrAditivo");
            entity.Property(e => e.NrAnoAditivo).HasColumnName("nrAnoAditivo");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.TbCntNumeroAtosContratuais)
                .HasForeignKey(d => d.IdContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntNumeroAtosContratuais_tbCntContratos");
        });

        modelBuilder.Entity<TbCntOrgaosUnidadesVinculada>(entity =>
        {
            entity.HasKey(e => new { e.IdContrato, e.Idempresa, e.NrAno, e.CdOrgao, e.CdUnidade, e.DsTipoVinculo });

            entity.ToTable("tbCntOrgaosUnidadesVinculadas");

            entity.Property(e => e.Idempresa).HasColumnName("IDEmpresa");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsTipoVinculo)
                .HasMaxLength(10)
                .HasColumnName("dsTipoVinculo");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.TbCntOrgaosUnidadesVinculada)
                .HasForeignKey(d => d.IdContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntOrgaosUnidadesVinculadas_tbCntContratos");

            entity.HasOne(d => d.TbOrcUnidade).WithMany(p => p.TbCntOrgaosUnidadesVinculada)
                .HasForeignKey(d => new { d.Idempresa, d.NrAno, d.CdOrgao, d.CdUnidade })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntOrgaosUnidadesVinculadas_tbOrcUnidades");
        });

        modelBuilder.Entity<TbCntResponsabilidadesAdministrativa>(entity =>
        {
            entity.HasKey(e => e.IdRespAdmin);

            entity.ToTable("tbCntResponsabilidadesAdministrativa");

            entity.Property(e => e.DsAtoDesignacao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsAtoDesignacao");
            entity.Property(e => e.DsCargo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsCargo");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtPeriodoFim)
                .HasColumnType("datetime")
                .HasColumnName("dtPeriodoFim");
            entity.Property(e => e.DtPeriodoIni)
                .HasColumnType("datetime")
                .HasColumnName("dtPeriodoIni");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.TbCntResponsabilidadesAdministrativas)
                .HasForeignKey(d => d.IdContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntResponsabilidadesAdministrativa_tbCntContratos");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbCntResponsabilidadesAdministrativas)
                .HasForeignKey(d => d.IdPessoa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntResponsabilidadesAdministrativa_tbGerPessoas");

            entity.HasOne(d => d.IdTipoRespAdmNavigation).WithMany(p => p.TbCntResponsabilidadesAdministrativas)
                .HasForeignKey(d => d.IdTipoRespAdm)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCntResponsabilidadesAdministrativa_tbCntTipoResponsabilidadeAdm");
        });

        modelBuilder.Entity<TbCntTiposAtosContratuai>(entity =>
        {
            entity.HasKey(e => e.IdTipoAtoContratual);

            entity.ToTable("tbCntTiposAtosContratuais");

            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSigla");
            entity.Property(e => e.FlAtivo).HasColumnName("flAtivo");
            entity.Property(e => e.FlAtivoApostilamento).HasColumnName("flAtivoApostilamento");
            entity.Property(e => e.NmTipoAtoContratual)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmTipoAtoContratual");

            entity.HasMany(d => d.IdTipoOperacaoAtos).WithMany(p => p.IdTipoAtoContratuals)
                .UsingEntity<Dictionary<string, object>>(
                    "TbCntTiposAtosContratuaisTiposOperaco",
                    r => r.HasOne<TbCntTiposOperacaoAtosContratuai>().WithMany()
                        .HasForeignKey("IdTipoOperacaoAto")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbCntTiposAtosContratuaisTiposOperacoes_tbCntTiposOperacaoAtosContratuais"),
                    l => l.HasOne<TbCntTiposAtosContratuai>().WithMany()
                        .HasForeignKey("IdTipoAtoContratual")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbCntTiposAtosContratuaisTiposOperacoes_tbCntTiposAtosContratuais"),
                    j =>
                    {
                        j.HasKey("IdTipoAtoContratual", "IdTipoOperacaoAto");
                        j.ToTable("tbCntTiposAtosContratuaisTiposOperacoes");
                        j.IndexerProperty<short>("IdTipoOperacaoAto").HasColumnName("idTipoOperacaoAto");
                    });
        });

        modelBuilder.Entity<TbCntTiposContrato>(entity =>
        {
            entity.HasKey(e => e.IdTipoContrato);

            entity.ToTable("tbCntTiposContratos");

            entity.Property(e => e.IdTipoContrato).ValueGeneratedNever();
            entity.Property(e => e.DsTipoContrato)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoContrato");
            entity.Property(e => e.FlUsaAta).HasColumnName("flUsaAta");

            entity.HasOne(d => d.IdModeloNavigation).WithMany(p => p.TbCntTiposContratos)
                .HasForeignKey(d => d.IdModelo)
                .HasConstraintName("FK_tbCntTiposContratos_tbLicModelosDoctos");
        });

        modelBuilder.Entity<TbCntTiposGarantiaContratual>(entity =>
        {
            entity.HasKey(e => e.IdTipoGarantia);

            entity.ToTable("tbCntTiposGarantiaContratual");

            entity.Property(e => e.IdTipoGarantia).ValueGeneratedNever();
            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSigla");
            entity.Property(e => e.FlAtivo).HasColumnName("flAtivo");
            entity.Property(e => e.FlUsaDetalhes).HasColumnName("flUsaDetalhes");
            entity.Property(e => e.NmTipoGarantia)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmTipoGarantia");
        });

        modelBuilder.Entity<TbCntTiposMotivoRescisaoContrato>(entity =>
        {
            entity.HasKey(e => e.IdTipoMotivoRescisao);

            entity.ToTable("tbCntTiposMotivoRescisaoContrato");

            entity.Property(e => e.IdTipoMotivoRescisao)
                .ValueGeneratedNever()
                .HasColumnName("idTipoMotivoRescisao");
            entity.Property(e => e.DsTipoMotivoRescisao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsTipoMotivoRescisao");
        });

        modelBuilder.Entity<TbCntTiposMultasContrato>(entity =>
        {
            entity.HasKey(e => e.IdTipoMultaContrato);

            entity.ToTable("tbCntTiposMultasContrato");

            entity.Property(e => e.IdTipoMultaContrato)
                .ValueGeneratedNever()
                .HasColumnName("idTipoMultaContrato");
            entity.Property(e => e.DsTipoMultaContrato)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoMultaContrato");
            entity.Property(e => e.FlUsaDetalhes).HasColumnName("flUsaDetalhes");
        });

        modelBuilder.Entity<TbCntTiposOperacaoAtosContratuai>(entity =>
        {
            entity.HasKey(e => e.IdTipoOperacaoAto);

            entity.ToTable("tbCntTiposOperacaoAtosContratuais");

            entity.Property(e => e.IdTipoOperacaoAto)
                .ValueGeneratedNever()
                .HasColumnName("idTipoOperacaoAto");
            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.DsTipoOperacao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTipoOperacao");
        });

        modelBuilder.Entity<TbCntTiposOrigemContrato>(entity =>
        {
            entity.HasKey(e => e.IdTipoOrigemContrato);

            entity.ToTable("tbCntTiposOrigemContrato");

            entity.Property(e => e.IdTipoOrigemContrato)
                .ValueGeneratedNever()
                .HasColumnName("idTipoOrigemContrato");
            entity.Property(e => e.DsTipoOrigemContrato)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoOrigemContrato");
        });

        modelBuilder.Entity<TbCntTiposPartesContrato>(entity =>
        {
            entity.HasKey(e => e.IdTipoParteContrato);

            entity.ToTable("tbCntTiposPartesContrato");

            entity.Property(e => e.IdTipoParteContrato)
                .ValueGeneratedNever()
                .HasColumnName("idTipoParteContrato");
            entity.Property(e => e.DsTipoParteContrato)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoParteContrato");
            entity.Property(e => e.FlAtivo).HasColumnName("flAtivo");
        });

        modelBuilder.Entity<TbCntTiposRedimensionamento>(entity =>
        {
            entity.HasKey(e => e.IdTipoRedimensionamento);

            entity.ToTable("tbCntTiposRedimensionamentos");

            entity.Property(e => e.IdTipoRedimensionamento)
                .ValueGeneratedNever()
                .HasColumnName("idTipoRedimensionamento");
            entity.Property(e => e.DsTipoRedimensionamento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoRedimensionamento");
            entity.Property(e => e.VlPercentual)
                .HasColumnType("money")
                .HasColumnName("vlPercentual");
        });

        modelBuilder.Entity<TbCntTiposResponsabilidadeAdm>(entity =>
        {
            entity.HasKey(e => e.IdTipoRespAdm);

            entity.ToTable("tbCntTiposResponsabilidadeAdm");

            entity.Property(e => e.IdTipoRespAdm).ValueGeneratedNever();
            entity.Property(e => e.DsSigla)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSigla");
            entity.Property(e => e.DsTipoRespAdm)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoRespAdm");
        });

        modelBuilder.Entity<TbConSolicitacaoInscricaoCmcpublicidade>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbConSolicitacaoInscricaoCMCPublicidades");

            entity.Property(e => e.DsPublicidadeNome)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("dsPublicidadeNome");
            entity.Property(e => e.IdSolicitacaoInscricaoPublicidade).ValueGeneratedOnAdd();
            entity.Property(e => e.NrAreaAberta)
                .HasColumnType("decimal(15, 2)")
                .HasColumnName("nrAreaAberta");
            entity.Property(e => e.NrAreaCoberta)
                .HasColumnType("decimal(15, 2)")
                .HasColumnName("nrAreaCoberta");
            entity.Property(e => e.NrPeriodicidade).HasColumnName("nrPeriodicidade");
            entity.Property(e => e.NrUnidMedida).HasColumnName("nrUnidMedida");
            entity.Property(e => e.NrVistoriaAno).HasColumnName("nrVistoriaAno");
            entity.Property(e => e.NrVistoriaNumero).HasColumnName("nrVistoriaNumero");
        });

        modelBuilder.Entity<TbConSolicitacaoInscricaoCmcservico>(entity =>
        {
            entity.HasKey(e => e.IdSolicitacaoInscricaoServico);

            entity.ToTable("tbConSolicitacaoInscricaoCMCServicos");

            entity.Property(e => e.DsDescricao)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("dsDescricao");
            entity.Property(e => e.DsIncidencia)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsIncidencia");
            entity.Property(e => e.DsMotivo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DtFinal)
                .HasColumnType("smalldatetime")
                .HasColumnName("dtFinal");
            entity.Property(e => e.DtInicial)
                .HasColumnType("smalldatetime")
                .HasColumnName("dtInicial");
            entity.Property(e => e.FlPrincipal).HasColumnName("flPrincipal");
            entity.Property(e => e.ServId)
                .HasMaxLength(20)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TbCtcCentroCusto>(entity =>
        {
            entity.HasKey(e => e.IdCentroCusto);

            entity.ToTable("tbCtcCentroCustos");

            entity.Property(e => e.IdCentroCusto).HasColumnName("idCentroCusto");
            entity.Property(e => e.CdCentroCusto)
                .HasMaxLength(10)
                .HasColumnName("cdCentroCusto");
            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(21)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.DsCentroCusto)
                .HasMaxLength(255)
                .HasColumnName("dsCentroCusto");
            entity.Property(e => e.DtFim)
                .HasColumnType("date")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("date")
                .HasColumnName("dtInicio");
            entity.Property(e => e.FlCustoIndireto)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flCustoIndireto");
            entity.Property(e => e.IdCentroCustoSuperior).HasColumnName("idCentroCustoSuperior");
            entity.Property(e => e.NmCentroCusto)
                .HasMaxLength(50)
                .HasColumnName("nmCentroCusto");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrNivel).HasColumnName("nrNivel");
            entity.Property(e => e.TpCentroCusto)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("tpCentroCusto");
        });

        modelBuilder.Entity<TbCtcCentroCustosCriterio>(entity =>
        {
            entity.HasKey(e => new { e.IdCentroCusto, e.IdCriterio });

            entity.ToTable("tbCtcCentroCustosCriterios");

            entity.Property(e => e.IdCentroCusto).HasColumnName("idCentroCusto");
            entity.Property(e => e.IdCriterio).HasColumnName("idCriterio");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");

            entity.HasOne(d => d.IdCentroCustoNavigation).WithMany(p => p.TbCtcCentroCustosCriterios)
                .HasForeignKey(d => d.IdCentroCusto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCtcCentroCustosCriterios_tbCtcCentroCustos");

            entity.HasOne(d => d.IdCriterioNavigation).WithMany(p => p.TbCtcCentroCustosCriterios)
                .HasForeignKey(d => d.IdCriterio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCtcCentroCustosCriterios_tbCtcCriterios");
        });

        modelBuilder.Entity<TbCtcCentroCustosIten>(entity =>
        {
            entity.HasKey(e => new { e.IdCentroCusto, e.IdItem });

            entity.ToTable("tbCtcCentroCustosItens");

            entity.Property(e => e.IdCentroCusto).HasColumnName("idCentroCusto");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");

            entity.HasOne(d => d.IdCentroCustoNavigation).WithMany(p => p.TbCtcCentroCustosItens)
                .HasForeignKey(d => d.IdCentroCusto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCtcCentroCustosItens_tbCtcCentroCustos");

            entity.HasOne(d => d.IdItemNavigation).WithMany(p => p.TbCtcCentroCustosItens)
                .HasForeignKey(d => d.IdItem)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCtcCentroCustosItens_tbDspItens");
        });

        modelBuilder.Entity<TbCtcCentroCustosNaturezaDespesa>(entity =>
        {
            entity.HasKey(e => new { e.IdCentroCusto, e.CategoriaEconomica, e.GrupoNaturezaDespesa, e.ModalidadeAplicacao, e.ElementoDespesa, e.Desdobramento, e.Detalhamento }).HasName("PK_tbCtcCentroCustosNaturezaDespesa_1");

            entity.ToTable("tbCtcCentroCustosNaturezaDespesa");

            entity.Property(e => e.IdCentroCusto).HasColumnName("idCentroCusto");
            entity.Property(e => e.CategoriaEconomica)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.GrupoNaturezaDespesa)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ModalidadeAplicacao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ElementoDespesa)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Desdobramento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Detalhamento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");

            entity.HasOne(d => d.IdCentroCustoNavigation).WithMany(p => p.TbCtcCentroCustosNaturezaDespesas)
                .HasForeignKey(d => d.IdCentroCusto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCtcCentroCustosNaturezaDespesa_tbCtcCentroCustos");
        });

        modelBuilder.Entity<TbCtcCentroCustosOrgaoUnidade>(entity =>
        {
            entity.HasKey(e => new { e.IdCentroCusto, e.CdOrgao, e.CdUnidade });

            entity.ToTable("tbCtcCentroCustosOrgaoUnidade");

            entity.Property(e => e.IdCentroCusto).HasColumnName("idCentroCusto");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");

            entity.HasOne(d => d.IdCentroCustoNavigation).WithMany(p => p.TbCtcCentroCustosOrgaoUnidades)
                .HasForeignKey(d => d.IdCentroCusto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCtcCentroCustosOrgaoUnidade_tbCtcCentroCustos");
        });

        modelBuilder.Entity<TbCtcCriterio>(entity =>
        {
            entity.HasKey(e => e.IdCriterio);

            entity.ToTable("tbCtcCriterios");

            entity.Property(e => e.IdCriterio).HasColumnName("idCriterio");
            entity.Property(e => e.DsCriterio)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsCriterio");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.IdUnidadeMedida).HasColumnName("idUnidadeMedida");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");

            entity.HasOne(d => d.IdUnidadeMedidaNavigation).WithMany(p => p.TbCtcCriterios)
                .HasForeignKey(d => d.IdUnidadeMedida)
                .HasConstraintName("FK_tbCtcCriterios_tbCtcUnidadesMedidas");
        });

        modelBuilder.Entity<TbCtcLiquidacaoCentroCusto>(entity =>
        {
            entity.HasKey(e => new { e.IdLiquidacao, e.IdCentroCusto });

            entity.ToTable("tbCtcLiquidacaoCentroCusto", tb => tb.HasTrigger("InsereCustosFilaContabil"));

            entity.Property(e => e.IdCentroCusto).HasColumnName("idCentroCusto");
            entity.Property(e => e.DtLiquidacao)
                .HasColumnType("datetime")
                .HasColumnName("dtLiquidacao");
            entity.Property(e => e.NrNumObjeto)
                .ValueGeneratedOnAdd()
                .HasColumnName("nrNumObjeto");
            entity.Property(e => e.TpOrigem)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpOrigem");
            entity.Property(e => e.VlLancamento)
                .HasColumnType("money")
                .HasColumnName("vlLancamento");
            entity.Property(e => e.VlLiquidacao)
                .HasColumnType("money")
                .HasColumnName("vlLiquidacao");
            entity.Property(e => e.VlPercRateio)
                .HasColumnType("decimal(10, 4)")
                .HasColumnName("vlPercRateio");
        });

        modelBuilder.Entity<TbCtcRateio>(entity =>
        {
            entity.HasKey(e => e.IdRateio);

            entity.ToTable("tbCtcRateio");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtFim)
                .HasColumnType("date")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtInicio)
                .HasColumnType("date")
                .HasColumnName("dtInicio");
        });

        modelBuilder.Entity<TbCtcRateioCriterio>(entity =>
        {
            entity.HasKey(e => new { e.IdRateio, e.IdCentroCusto, e.IdCriterio }).HasName("PK_tbCtcRateioCriterios_1");

            entity.ToTable("tbCtcRateioCriterios");

            entity.Property(e => e.IdCentroCusto).HasColumnName("idCentroCusto");
            entity.Property(e => e.IdCriterio).HasColumnName("idCriterio");
            entity.Property(e => e.VlCoeficiente)
                .HasColumnType("decimal(18, 4)")
                .HasColumnName("vlCoeficiente");
            entity.Property(e => e.VlRateio)
                .HasColumnType("decimal(18, 4)")
                .HasColumnName("vlRateio");
        });

        modelBuilder.Entity<TbCtcUnidadesMedida>(entity =>
        {
            entity.HasKey(e => e.IdUnidadeMedida);

            entity.ToTable("tbCtcUnidadesMedidas");

            entity.Property(e => e.DsUnidadeMedida)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsUnidadeMedida");
        });

        modelBuilder.Entity<TbCtiAssunto>(entity =>
        {
            entity.HasKey(e => e.IdAssunto);

            entity.ToTable("tbCtiAssuntos");

            entity.Property(e => e.IdAssunto).HasColumnName("idAssunto");
            entity.Property(e => e.DsAssunto)
                .HasMaxLength(500)
                .HasColumnName("dsAssunto");
            entity.Property(e => e.DsTitulo)
                .HasMaxLength(50)
                .HasColumnName("dsTitulo");
        });

        modelBuilder.Entity<TbCtiDespachoSetor>(entity =>
        {
            entity.HasKey(e => e.IdDespacho);

            entity.ToTable("tbCtiDespachoSetor");

            entity.Property(e => e.IdDespacho).HasColumnName("idDespacho");
            entity.Property(e => e.DsParecer)
                .HasMaxLength(500)
                .HasColumnName("dsParecer");
            entity.Property(e => e.DtDespacho)
                .HasMaxLength(50)
                .HasColumnName("dtDespacho");
            entity.Property(e => e.IdQuestionario).HasColumnName("idQuestionario");
            entity.Property(e => e.IdSetorDestino).HasColumnName("idSetorDestino");
            entity.Property(e => e.IdSetorOrigem).HasColumnName("idSetorOrigem");

            entity.HasOne(d => d.IdQuestionarioNavigation).WithMany(p => p.TbCtiDespachoSetors)
                .HasForeignKey(d => d.IdQuestionario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCtiDespachoSetor_tbCtiQuestionarios");

            entity.HasOne(d => d.IdSetorOrigemNavigation).WithMany(p => p.TbCtiDespachoSetors)
                .HasForeignKey(d => d.IdSetorOrigem)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCtiDespachoSetor_tbCtiSetores");
        });

        modelBuilder.Entity<TbCtiPergunta>(entity =>
        {
            entity.HasKey(e => e.IdPergunta);

            entity.ToTable("tbCtiPerguntas");

            entity.Property(e => e.IdPergunta).HasColumnName("idPergunta");
            entity.Property(e => e.DsPergunta)
                .HasMaxLength(500)
                .HasColumnName("dsPergunta");
            entity.Property(e => e.IdQuestionario).HasColumnName("idQuestionario");

            entity.HasOne(d => d.IdQuestionarioNavigation).WithMany(p => p.TbCtiPergunta)
                .HasForeignKey(d => d.IdQuestionario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCtiPerguntas_tbCtiQuestionarios");
        });

        modelBuilder.Entity<TbCtiQuestionario>(entity =>
        {
            entity.HasKey(e => e.IdQuestionario);

            entity.ToTable("tbCtiQuestionarios");

            entity.Property(e => e.IdQuestionario).HasColumnName("idQuestionario");
            entity.Property(e => e.DsQuestionario)
                .HasMaxLength(500)
                .HasColumnName("dsQuestionario");
            entity.Property(e => e.DsResultadoEsperado)
                .HasMaxLength(500)
                .HasColumnName("dsResultadoEsperado");
            entity.Property(e => e.IdAssunto).HasColumnName("idAssunto");

            entity.HasOne(d => d.IdAssuntoNavigation).WithMany(p => p.TbCtiQuestionarios)
                .HasForeignKey(d => d.IdAssunto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCtiQuestionarios_tbCtiAssuntos");
        });

        modelBuilder.Entity<TbCtiResposta>(entity =>
        {
            entity.HasKey(e => e.IdResposta);

            entity.ToTable("tbCtiRespostas");

            entity.Property(e => e.IdResposta).HasColumnName("idResposta");
            entity.Property(e => e.DsResposta)
                .HasMaxLength(500)
                .HasColumnName("dsResposta");
            entity.Property(e => e.DtResposta)
                .HasColumnType("datetime")
                .HasColumnName("dtResposta");
            entity.Property(e => e.IdPergunta).HasColumnName("idPergunta");

            entity.HasOne(d => d.IdPerguntaNavigation).WithMany(p => p.TbCtiResposta)
                .HasForeignKey(d => d.IdPergunta)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCtiRespostas_tbCtiPerguntas");
        });

        modelBuilder.Entity<TbCtiSetore>(entity =>
        {
            entity.HasKey(e => e.IdSetor).HasName("PK_tbCtiSetor");

            entity.ToTable("tbCtiSetores");

            entity.Property(e => e.IdSetor).HasColumnName("idSetor");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.NmSetor)
                .HasMaxLength(50)
                .HasColumnName("nmSetor");
        });

        modelBuilder.Entity<TbCtiSetoresServidore>(entity =>
        {
            entity.HasKey(e => new { e.IdSetor, e.IdServidor });

            entity.ToTable("tbCtiSetoresServidores");

            entity.Property(e => e.IdSetor).HasColumnName("idSetor");
            entity.Property(e => e.NrNivel).HasColumnName("nrNivel");

            entity.HasOne(d => d.IdServidorNavigation).WithMany(p => p.TbCtiSetoresServidores)
                .HasForeignKey(d => d.IdServidor)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCtiSetoresServidores_tbGerServidores");

            entity.HasOne(d => d.IdSetorNavigation).WithMany(p => p.TbCtiSetoresServidores)
                .HasForeignKey(d => d.IdSetor)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbCtiSetoresServidores_tbCtiSetores");
        });

        modelBuilder.Entity<TbDspApropriacoesDespesaNaoEmpenhadum>(entity =>
        {
            entity.HasKey(e => e.IdApropriacao);

            entity.ToTable("tbDspApropriacoesDespesaNaoEmpenhada");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
        });

        modelBuilder.Entity<TbDspAquisicaoBen>(entity =>
        {
            entity.HasKey(e => e.IdAquisicao);

            entity.ToTable("tbDspAquisicaoBens");

            entity.Property(e => e.DsAquisicao)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("dsAquisicao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtAquisicao)
                .HasColumnType("datetime")
                .HasColumnName("dtAquisicao");
        });

        modelBuilder.Entity<TbDspAquisicaoBensEmpenho>(entity =>
        {
            entity.HasKey(e => new { e.IdAquisicao, e.IdEmpenho });

            entity.ToTable("tbDspAquisicaoBensEmpenhos");
        });

        modelBuilder.Entity<TbDspAquisicaoBensIten>(entity =>
        {
            entity.HasKey(e => new { e.IdAquisicao, e.IdItem });

            entity.ToTable("tbDspAquisicaoBensItens");

            entity.Property(e => e.DsMarca)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsMarca");
            entity.Property(e => e.IdNatDespesa).HasColumnName("idNatDespesa");
            entity.Property(e => e.NrQtde).HasColumnName("nrQtde");
            entity.Property(e => e.VlTotal)
                .HasColumnType("money")
                .HasColumnName("vlTotal");
            entity.Property(e => e.VlUnitario)
                .HasColumnType("money")
                .HasColumnName("vlUnitario");
        });

        modelBuilder.Entity<TbDspAquisicaoBensItensVinculo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbDspAquisicaoBensItensVinculo");

            entity.Property(e => e.IdEmpenho).HasColumnName("idEmpenho");
            entity.Property(e => e.IdItemNovo).HasColumnName("idItemNovo");
            entity.Property(e => e.IdItemOrigem).HasColumnName("idItemOrigem");
        });

        modelBuilder.Entity<TbDspCodigosFiscaisOperacoesPrestaco>(entity =>
        {
            entity.HasKey(e => e.CdCfop);

            entity.ToTable("tbDspCodigosFiscaisOperacoesPrestacoes");

            entity.Property(e => e.CdCfop)
                .ValueGeneratedNever()
                .HasColumnName("cdCFOP");
            entity.Property(e => e.DsCfop)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("dsCFOP");
        });

        modelBuilder.Entity<TbDspCodigosPagamentoInss>(entity =>
        {
            entity.HasKey(e => e.CdPagamento);

            entity.ToTable("tbDspCodigosPagamentoInss");

            entity.Property(e => e.CdPagamento)
                .ValueGeneratedNever()
                .HasColumnName("cdPagamento");
            entity.Property(e => e.DsPagamento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsPagamento");
        });

        modelBuilder.Entity<TbDspComponentesDespesa>(entity =>
        {
            entity.HasKey(e => e.IdComponente);

            entity.ToTable("tbDspComponentesDespesas");

            entity.Property(e => e.IdComponente).HasColumnName("idComponente");
            entity.Property(e => e.CdComponente)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdComponente");
            entity.Property(e => e.IdComponenteVinculo).HasColumnName("idComponenteVinculo");
            entity.Property(e => e.NmComponente)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmComponente");
        });

        modelBuilder.Entity<TbDspConsignaco>(entity =>
        {
            entity.HasKey(e => e.IdConsignacao);

            entity.ToTable("tbDspConsignacoes");

            entity.HasIndex(e => new { e.IdLiquidacaoDocto, e.FlExcluido, e.IdConsignacao }, "IX_Consignacoes_IdLiquidacaoDocto").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdContaContabil, e.IdLiquidacao, e.IdPessoa }, "IX_IdContaContabil_IdLiquidacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdLiquidacaoDocto, e.FlExcluido, e.IdConsignacao }, "IX_IdLiquidacaoDocto_flExcluido").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdLiquidacao, e.DtConsignacao, e.VlConsignacao }, "IX_IdLiquidacao_dtConsignacao_vlConsignacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.FlExcluido, e.IdLiquidacao, e.IdConsignacao, e.IdContaContabil }, "IX_flExcluido_IdLiquidacao_IdConsignacao_IdContaContabil");

            entity.HasIndex(e => e.IdConsignacao, "IX_tbDspConsignacoes_IdConsignacao");

            entity.HasIndex(e => new { e.IdConsignacao, e.IdTipoConsignacao }, "IX_tbDspConsignacoes_IdConsignacao_IdTipoConsignacao");

            entity.HasIndex(e => new { e.IdContaContabil, e.IdRecurso, e.IdPessoa, e.IdConsignacao }, "IX_tbDspConsignacoes_IdContaContabil_IdRecurso_IdPessoa_IdConsignacao");

            entity.HasIndex(e => new { e.IdLiquidacao, e.FlExcluido, e.IdConsignacao, e.IdContaContabil, e.IdLiquidacaoDocto, e.IdTipoConsignacao, e.VlConsignacao }, "IX_tbDspConsignacoes_IdLiquidacao_flExcluido_IdConsignacao_IdContaContabil_IdLiquidacaoDocto_IdTipoConsignacao_vlConsignacao");

            entity.HasIndex(e => new { e.DtConsignacao, e.FlExcluido, e.IdLiquidacao, e.IdConsignacao, e.IdLiquidacaoDocto, e.IdContaContabil, e.IdContaContabilInscricao, e.VlConsignacao }, "IX_tbDspConsignacoes_dtConsignacao_flExcluido_IdLiquidacao_IdConsignacao_IdLiquidacaoDocto_IdContaContabil_");

            entity.HasIndex(e => new { e.FlExcluido, e.IdConsignacao, e.IdLiquidacao, e.DtConsignacao }, "IX_tbDspConsignacoes_flExcluido_IdConsignacao_IdLiquidacao_dtConsignacao");

            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtConsignacao)
                .HasColumnType("datetime")
                .HasColumnName("dtConsignacao");
            entity.Property(e => e.DtExclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtExclusao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlExcluido)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flExcluido");
            entity.Property(e => e.IdCcorigem).HasColumnName("IdCCOrigem");
            entity.Property(e => e.NrCei)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("nrCEI");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.NrPercentual)
                .HasColumnType("money")
                .HasColumnName("nrPercentual");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlConsignacao)
                .HasColumnType("money")
                .HasColumnName("vlConsignacao");

            entity.HasOne(d => d.IdLiquidacaoNavigation).WithMany(p => p.TbDspConsignacos)
                .HasForeignKey(d => d.IdLiquidacao)
                .HasConstraintName("FK_tbDspConsignacoes_tbDspLiquidacoes");

            entity.HasOne(d => d.IdRecursoNavigation).WithMany(p => p.TbDspConsignacos)
                .HasForeignKey(d => d.IdRecurso)
                .HasConstraintName("FK_tbDspConsignacoes_tbCapRecursos");

            entity.HasOne(d => d.IdTipoConsignacaoNavigation).WithMany(p => p.TbDspConsignacos)
                .HasForeignKey(d => d.IdTipoConsignacao)
                .HasConstraintName("FK_tbDspConsignacoes_tbDspTiposConsignacoes");

            entity.HasMany(d => d.IdDespesas).WithMany(p => p.IdConsignacaos)
                .UsingEntity<Dictionary<string, object>>(
                    "TbDspDespesaExtraConsignaco",
                    r => r.HasOne<TbDspDespesaExtraOrcamentarium>().WithMany()
                        .HasForeignKey("IdDespesa")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbDspDespesaExtraConsignacoes_tbDspDespesaExtraOrcamentaria"),
                    l => l.HasOne<TbDspConsignaco>().WithMany()
                        .HasForeignKey("IdConsignacao")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbDspDespesaExtraConsignacoes_tbDspConsignacoes"),
                    j =>
                    {
                        j.HasKey("IdConsignacao", "IdDespesa");
                        j.ToTable("tbDspDespesaExtraConsignacoes");
                        j.HasIndex(new[] { "IdDespesa" }, "IX_IdDespesa");
                        j.HasIndex(new[] { "IdConsignacao" }, "IX_tbDspDespesaExtraConsignacoes_IdConsignacao");
                        j.HasIndex(new[] { "IdConsignacao", "IdDespesa" }, "IX_tbDspDespesaExtraConsignacoes_IdConsignacao_IdDespesa");
                    });
        });

        modelBuilder.Entity<TbDspConsignacoesIten>(entity =>
        {
            entity.HasKey(e => new { e.IdConsignacao, e.IdNatDespesa }).HasName("PK_tbDspConsignacoesItens_1");

            entity.ToTable("tbDspConsignacoesItens");

            entity.Property(e => e.VlTotal)
                .HasColumnType("money")
                .HasColumnName("vlTotal");

            entity.HasOne(d => d.IdConsignacaoNavigation).WithMany(p => p.TbDspConsignacoesItens)
                .HasForeignKey(d => d.IdConsignacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspConsignacoesItens_tbDspConsignacoes");
        });

        modelBuilder.Entity<TbDspConsignacoesOrdensPagamento>(entity =>
        {
            entity.HasKey(e => new { e.IdConsignacao, e.IdOrdemPagamento, e.IdAutorizacao }).HasName("PK_tbDspConsignacoesOrdensPagamento_1");

            entity.ToTable("tbDspConsignacoesOrdensPagamento");
        });

        modelBuilder.Entity<TbDspDespesaExtraOrcamentariaDevReceita>(entity =>
        {
            entity.HasKey(e => new { e.IdDespesa, e.IdReceita });

            entity.ToTable("tbDspDespesaExtraOrcamentariaDevReceitas");

            entity.Property(e => e.VlDevolvido)
                .HasColumnType("money")
                .HasColumnName("vlDevolvido");

            entity.HasOne(d => d.IdDespesaNavigation).WithMany(p => p.TbDspDespesaExtraOrcamentariaDevReceita)
                .HasForeignKey(d => d.IdDespesa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspDespesaExtraOrcamentariaDevReceitas_tbDspDespesaExtraOrcamentaria");

            entity.HasOne(d => d.IdReceitaNavigation).WithMany(p => p.TbDspDespesaExtraOrcamentariaDevReceita)
                .HasForeignKey(d => d.IdReceita)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspDespesaExtraOrcamentariaDevReceitas_tbOrcReceitas");
        });

        modelBuilder.Entity<TbDspDespesaExtraOrcamentarium>(entity =>
        {
            entity.HasKey(e => e.IdDespesa);

            entity.ToTable("tbDspDespesaExtraOrcamentaria");

            entity.HasIndex(e => e.IdContaContabilCredito, "IX_IdContaContabilCredito");

            entity.HasIndex(e => e.IdContaContabilDebito, "IX_IdContaContabilDebito");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.NrSequencia }, "IX_IdEmpresa_nrAno_nrSequencia").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdPessoa, e.DtDespesa, e.IdDespesa }, "IX_IdPessoa_dtDespesa_IdDespesa").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdContaContabilCredito, e.IdPessoa, e.NrAno }, "IX_tbDspDespesaExtraOrcamentaria_IdContaContabilCredito_IdPessoa_nrAno");

            entity.HasIndex(e => new { e.IdDespesa, e.NrSequencia, e.NrAno }, "IX_tbDspDespesaExtraOrcamentaria_IdDespesa_nrSequencia_nrAno");

            entity.HasIndex(e => e.IdEmpenho, "IX_tbDspDespesaExtraOrcamentaria_IdEmpenho");

            entity.HasIndex(e => new { e.IdEmpresa, e.IdPessoa }, "IX_tbDspDespesaExtraOrcamentaria_IdEmpresa_IdPessoa_inc_IdDesp_dtDesp_nrSeq_IdFont_IdCCDeb_IdCCCred_vlDesp_dsHist_cdOrg_cdUnid");

            entity.HasIndex(e => new { e.IdEmpresa, e.DtDespesa, e.IdRecurso, e.IdPessoa, e.CdOrgao, e.CdUnidade, e.VlDespesa, e.NrAno, e.IdDespesa, e.NrSequencia }, "IX_tbDspDespesaExtraOrcamentaria_IdEmpresa_dsHistorico");

            entity.HasIndex(e => new { e.IdPessoa, e.NrAno, e.CdOrgao, e.CdUnidade, e.IdEmpresa, e.VlDespesa, e.IdDespesa, e.IdFonte }, "IX_tbDspDespesaExtraOrcamentaria_IdPessoa_nrAno_cdOrgao_cdUnidade_IdEmpresa_vlDespesa_IdDespesa_IdFonte");

            entity.HasIndex(e => e.DtDespesa, "IX_tbDspDespesaExtraOrcamentaria_dtDespesa_inc");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtDespesa)
                .HasColumnType("datetime")
                .HasColumnName("dtDespesa");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdCcfavorecido).HasColumnName("IdCCFavorecido");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrDocFinanceiro)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocFinanceiro");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlDespesa)
                .HasColumnType("money")
                .HasColumnName("vlDespesa");

            entity.HasOne(d => d.IdContaContabilCreditoNavigation).WithMany(p => p.TbDspDespesaExtraOrcamentariumIdContaContabilCreditoNavigations)
                .HasForeignKey(d => d.IdContaContabilCredito)
                .HasConstraintName("FK_tbDspDespesaExtraOrcamentaria_tbFinContasContabeis1");

            entity.HasOne(d => d.IdContaContabilDebitoNavigation).WithMany(p => p.TbDspDespesaExtraOrcamentariumIdContaContabilDebitoNavigations)
                .HasForeignKey(d => d.IdContaContabilDebito)
                .HasConstraintName("FK_tbDspDespesaExtraOrcamentaria_tbFinContasContabeis");

            entity.HasOne(d => d.IdFonteNavigation).WithMany(p => p.TbDspDespesaExtraOrcamentaria)
                .HasForeignKey(d => d.IdFonte)
                .HasConstraintName("FK_tbDspDespesaExtraOrcamentaria_tbOrcFontes");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbDspDespesaExtraOrcamentaria)
                .HasForeignKey(d => d.IdPessoa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspDespesaExtraOrcamentaria_tbGerPessoas");
        });

        modelBuilder.Entity<TbDspDiaria>(entity =>
        {
            entity.HasKey(e => e.IdDiaria);

            entity.ToTable("tbDspDiarias");

            entity.Property(e => e.DsCargoBeneficiario)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsCargoBeneficiario");
            entity.Property(e => e.DsDestino)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsDestino");
            entity.Property(e => e.DsObjetivo)
                .IsUnicode(false)
                .HasColumnName("dsObjetivo");
            entity.Property(e => e.DsTipoLocomocao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTipoLocomocao");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtPublicacaoLei)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoLei");
            entity.Property(e => e.IdLeiAtoAutorizacao).HasColumnName("idLeiAtoAutorizacao");
            entity.Property(e => e.IdLeiAtoConcessao).HasColumnName("idLeiAtoConcessao");
            entity.Property(e => e.IdTipoObjetivoDiaria).HasColumnName("idTipoObjetivoDiaria");
            entity.Property(e => e.IdcidadeDestino).HasColumnName("IDCidadeDestino");
            entity.Property(e => e.NrAnoAto).HasColumnName("nrAnoAto");
            entity.Property(e => e.NrAnoLei).HasColumnName("nrAnoLei");
            entity.Property(e => e.NrAto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrAto");
            entity.Property(e => e.NrDiarias)
                .HasColumnType("decimal(3, 1)")
                .HasColumnName("nrDiarias");
            entity.Property(e => e.NrHospedagem)
                .HasColumnType("decimal(3, 1)")
                .HasColumnName("nrHospedagem");
            entity.Property(e => e.NrLei).HasColumnName("nrLei");
            entity.Property(e => e.NrPassagem)
                .HasColumnType("decimal(3, 1)")
                .HasColumnName("nrPassagem");
            entity.Property(e => e.VlInscricaoEvento)
                .HasColumnType("money")
                .HasColumnName("vlInscricaoEvento");
            entity.Property(e => e.VlTotal)
                .HasColumnType("money")
                .HasColumnName("vlTotal");
            entity.Property(e => e.VlTotalHospedagem)
                .HasColumnType("money")
                .HasColumnName("vlTotalHospedagem");
            entity.Property(e => e.VlTotalPassagem)
                .HasColumnType("money")
                .HasColumnName("vlTotalPassagem");
            entity.Property(e => e.VlUnitario)
                .HasColumnType("money")
                .HasColumnName("vlUnitario");
            entity.Property(e => e.VlUnitarioHospedagem)
                .HasColumnType("money")
                .HasColumnName("vlUnitarioHospedagem");
            entity.Property(e => e.VlUnitarioPassagem)
                .HasColumnType("money")
                .HasColumnName("vlUnitarioPassagem");

            entity.HasOne(d => d.IdEmpenhoNavigation).WithMany(p => p.TbDspDiaria)
                .HasForeignKey(d => d.IdEmpenho)
                .HasConstraintName("FK_tbDspDiarias_tbDspEmpenhos");

            entity.HasOne(d => d.IdTipoObjetivoDiariaNavigation).WithMany(p => p.TbDspDiaria)
                .HasForeignKey(d => d.IdTipoObjetivoDiaria)
                .HasConstraintName("FK_tbDspDiarias_tbDspTiposObjetivoDiaria");

            entity.HasOne(d => d.IdcidadeDestinoNavigation).WithMany(p => p.TbDspDiaria)
                .HasForeignKey(d => d.IdcidadeDestino)
                .HasConstraintName("FK_tbDspDiarias_tbGerCidades");
        });

        modelBuilder.Entity<TbDspDirfRtpa>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbDspDirfRTPA");

            entity.Property(e => e.CdReceitaIrrf)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdReceitaIRRF");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(50)
                .HasColumnName("dsTipo");
            entity.Property(e => e.DsTipoPessoa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoPessoa");
            entity.Property(e => e.NmPessoa)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmPessoa");
            entity.Property(e => e.NrCnpjcpf)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrCNPJCPF");
            entity.Property(e => e.VlAbril)
                .HasColumnType("money")
                .HasColumnName("vlAbril");
            entity.Property(e => e.VlAgosto)
                .HasColumnType("money")
                .HasColumnName("vlAgosto");
            entity.Property(e => e.VlDezembro)
                .HasColumnType("money")
                .HasColumnName("vlDezembro");
            entity.Property(e => e.VlFevereiro)
                .HasColumnType("money")
                .HasColumnName("vlFevereiro");
            entity.Property(e => e.VlJaneiro)
                .HasColumnType("money")
                .HasColumnName("vlJaneiro");
            entity.Property(e => e.VlJulho)
                .HasColumnType("money")
                .HasColumnName("vlJulho");
            entity.Property(e => e.VlJunho)
                .HasColumnType("money")
                .HasColumnName("vlJunho");
            entity.Property(e => e.VlMaio)
                .HasColumnType("money")
                .HasColumnName("vlMaio");
            entity.Property(e => e.VlMarco)
                .HasColumnType("money")
                .HasColumnName("vlMarco");
            entity.Property(e => e.VlNovembro)
                .HasColumnType("money")
                .HasColumnName("vlNovembro");
            entity.Property(e => e.VlOutubro)
                .HasColumnType("money")
                .HasColumnName("vlOutubro");
            entity.Property(e => e.VlSetembro)
                .HasColumnType("money")
                .HasColumnName("vlSetembro");
        });

        modelBuilder.Entity<TbDspDocumento>(entity =>
        {
            entity.HasKey(e => e.IdDocumento);

            entity.ToTable("tbDspDocumentos");

            entity.Property(e => e.BnDocumento).HasColumnName("bnDocumento");
            entity.Property(e => e.DsDocumento)
                .IsUnicode(false)
                .HasColumnName("dsDocumento");
            entity.Property(e => e.DsExtensao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsExtensao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
        });

        modelBuilder.Entity<TbDspDocumentosFiscai>(entity =>
        {
            entity.HasKey(e => e.IdDoctoFiscal);

            entity.ToTable("tbDspDocumentosFiscais");

            entity.Property(e => e.IdDoctoFiscal).HasColumnName("idDoctoFiscal");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsHistorico)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtDocumento)
                .HasColumnType("datetime")
                .HasColumnName("dtDocumento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtRecebimento)
                .HasColumnType("datetime")
                .HasColumnName("dtRecebimento");
            entity.Property(e => e.DtVencimento)
                .HasColumnType("datetime")
                .HasColumnName("dtVencimento");
            entity.Property(e => e.IdTipoSerieDocFiscal).HasColumnName("idTipoSerieDocFiscal");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.NrSequenciaAnual).HasColumnName("nrSequenciaAnual");
            entity.Property(e => e.VlDocumento)
                .HasColumnType("money")
                .HasColumnName("vlDocumento");

            entity.HasOne(d => d.IdTipoDoctoFiscalNavigation).WithMany(p => p.TbDspDocumentosFiscais)
                .HasForeignKey(d => d.IdTipoDoctoFiscal)
                .HasConstraintName("FK_tbDspDocumentosFiscais_tbDspTiposDocumentosFiscais");

            entity.HasOne(d => d.IdTipoSerieDocFiscalNavigation).WithMany(p => p.TbDspDocumentosFiscais)
                .HasForeignKey(d => d.IdTipoSerieDocFiscal)
                .HasConstraintName("FK_tbDspDocumentosFiscais_tbDspTiposSerieDocFiscal");
        });

        modelBuilder.Entity<TbDspDocumentosFiscaisIten>(entity =>
        {
            entity.HasKey(e => new { e.IdDoctoFiscal, e.IdItem });

            entity.ToTable("tbDspDocumentosFiscaisItens");

            entity.Property(e => e.IdDoctoFiscal).HasColumnName("idDoctoFiscal");
            entity.Property(e => e.NrQtde)
                .HasColumnType("money")
                .HasColumnName("nrQtde");
            entity.Property(e => e.VlDesconto)
                .HasColumnType("money")
                .HasColumnName("vlDesconto");
            entity.Property(e => e.VlTotal)
                .HasColumnType("money")
                .HasColumnName("vlTotal");

            entity.HasOne(d => d.IdDoctoFiscalNavigation).WithMany(p => p.TbDspDocumentosFiscaisItens)
                .HasForeignKey(d => d.IdDoctoFiscal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspDocumentosFiscaisItens_tbDspDocumentosFiscais");
        });

        modelBuilder.Entity<TbDspDocumentosTransaco>(entity =>
        {
            entity.HasKey(e => new { e.IdDocumento, e.DsTransacao, e.NrTransacao });

            entity.ToTable("tbDspDocumentosTransacoes");

            entity.Property(e => e.DsTransacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTransacao");
            entity.Property(e => e.NrTransacao).HasColumnName("nrTransacao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");

            entity.HasOne(d => d.IdDocumentoNavigation).WithMany(p => p.TbDspDocumentosTransacos)
                .HasForeignKey(d => d.IdDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspDocumentosTransacoes_tbDspDocumentos");
        });

        modelBuilder.Entity<TbDspEmpenho>(entity =>
        {
            entity.HasKey(e => e.IdEmpenho);

            entity.ToTable("tbDspEmpenhos");

            entity.HasIndex(e => new { e.IdContrato, e.IdLicitacao }, "IX_IdContrato_IdLicitacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdDotacao, e.NrEmpenho, e.NrAno, e.IdNatDespesa }, "IX_IdDotacao_nrEmpenho_nrAno").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpenho, e.IdEmpresa, e.NrAno, e.IdDotacao }, "IX_IdEmpenho_IdEmpresa_nrAno_IdDotacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpenho, e.IdPessoa, e.IdNatDespesa }, "IX_IdEmpenho_IdPessoa_IdNatDespesa");

            entity.HasIndex(e => e.IdPessoa, "IX_IdPessoa_IdEmpenho_nrAno").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdPessoa, e.NrAno }, "IX_IdPessoa_nrAno");

            entity.HasIndex(e => new { e.IdSolicitacaoEmpenho, e.IdEmpenho }, "IX_IdSolicitacaoEmpenho_IdEmpenho").HasFillFactor(90);

            entity.HasIndex(e => new { e.CdOrgao, e.CdUnidade, e.IdEmpresa, e.IdNatDespesa, e.NrAno }, "IX_cdOrgao_cdUnidade_IdEmpresa_IdNatDespesa_nrAno");

            entity.HasIndex(e => new { e.NrAno, e.IdEmpresa, e.IdDotacao, e.IdEmpenho }, "IX_nrAno_IdEmpresa_IdDotacao_IdEmpenho").HasFillFactor(90);

            entity.HasIndex(e => new { e.NrEmpenhoAnterior, e.NrAno, e.NrEmpenho, e.IdEmpenho }, "IX_nrEmpenhoAnterior");

            entity.HasIndex(e => new { e.NrEmpenho, e.NrAno, e.IdEmpresa, e.IdEmpenho }, "IX_nrEmpenho_nrAno_IdEmpresa").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdDotacao, e.NrAno, e.IdEmpresa, e.VlEmpenho, e.IdEmpenho, e.NrEmpenho }, "IX_tbDspEmpenhos_IdDotacao_nrAno_IdEmpresa_vlEmpenho_IdEmpenho_nrEmpenho");

            entity.HasIndex(e => e.IdEmpenho, "IX_tbDspEmpenhos_IdEmpenho");

            entity.HasIndex(e => new { e.IdEmpenho, e.IdDotacao }, "IX_tbDspEmpenhos_IdEmpenho_IdDotacao");

            entity.HasIndex(e => new { e.IdEmpenho, e.IdNatDespesa, e.IdPessoa, e.NrParcela }, "IX_tbDspEmpenhos_IdEmpenho_IdNatDespesa_IdPessoa_nrParcela");

            entity.HasIndex(e => new { e.IdEmpenho, e.CdOrgao, e.IdEmpresa, e.NrAno, e.IdRecurso, e.CdUnidade, e.IdPessoa, e.IdNatDespesa, e.NrEmpenho, e.DtEmpenho }, "IX_tbDspEmpenhos_IdEmpenho_cdOrgao_IdEmpresa_nrAno_IdRecurso_cdUnidade_IdPessoa");

            entity.HasIndex(e => e.IdEmpenho, "IX_tbDspEmpenhos_IdEmpenho_inc_IdEmpresa_cdOrgao_cdUnid_idEmpOr");

            entity.HasIndex(e => new { e.IdEmpresa, e.DtEmpenho, e.IdDotacao, e.VlEmpenho, e.IdEmpenho, e.NrAno, e.IdPessoa, e.IdRecurso, e.NrEmpenho }, "IX_tbDspEmpenhos_IdEmpresa_dtEmpenho_IdDotacao_IdNatDespesa");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.IdDotacao }, "IX_tbDspEmpenhos_IdEmpresa_nrAno_IdDotacao");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.DtEmpenho }, "IX_tbDspEmpenhos_IdEmpresa_nrAno_dtEmpenho");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno }, "IX_tbDspEmpenhos_IdEmpresa_nrAno_inc_cdOrgao_cdUnidade");

            entity.HasIndex(e => e.IdLicitacao, "IX_tbDspEmpenhos_IdLicitacao_inc");

            entity.HasIndex(e => new { e.IdNatDespesa, e.NrAno, e.IdEmpresa, e.VlEmpenho, e.NrEmpenho }, "IX_tbDspEmpenhos_IdNatDespesa_nrAno_IdEmpresa_vlEmpenho_nrEmpenho");

            entity.HasIndex(e => new { e.IdNatDespesa, e.NrAno, e.IdLicitacao, e.IdPessoa, e.IdDotacao, e.IdEmpresa }, "IX_tbDspEmpenhos_IdNatDespesa_nrAno_IdLicitacao_IdPessoa_IdDotacao_IdEmpresa");

            entity.HasIndex(e => new { e.IdPessoa, e.NrAno, e.CdOrgao, e.CdUnidade, e.IdEmpresa, e.VlEmpenho, e.IdEmpenho, e.IdNatDespesa, e.IdDotacao }, "IX_tbDspEmpenhos_IdPessoa_nrAno_cdOrgao_cdUnidade_IdEmpresa_vlEmpenho_IdEmpenho_IdNatDespesa_IdDotacao");

            entity.HasIndex(e => e.DtEmpenho, "IX_tbDspEmpenhos_dtEmpenho_inc");

            entity.HasIndex(e => new { e.NrAno, e.IdEmpresa, e.IdNatDespesa, e.IdPessoa }, "IX_tbDspEmpenhos_nrAno_IdEmpresa_IdNatDesp_IdPessoa_inc_IdEmpe_vlEmp");

            entity.HasIndex(e => new { e.NrAno, e.NrEmpenho }, "IX_tbDspEmpenhos_nrAno_nrEmpenho_inc_IdEmpenho");

            entity.Property(e => e.CdIntervencao).HasColumnName("cdIntervencao");
            entity.Property(e => e.CdLocalidade).HasColumnName("cdLocalidade");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsTipoEmpenho)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoEmpenho");
            entity.Property(e => e.DtEmpenho)
                .HasColumnType("datetime")
                .HasColumnName("dtEmpenho");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlContrapartida)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flContrapartida");
            entity.Property(e => e.FlRateioAdiantamento)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flRateioAdiantamento");
            entity.Property(e => e.FlRestabelecimentoRap)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flRestabelecimentoRAP");
            entity.Property(e => e.IdNumeroAto).HasColumnName("idNumeroAto");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrAnoCompetencia).HasColumnName("nrAnoCompetencia");
            entity.Property(e => e.NrAutoDirf)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrAutoDIRF");
            entity.Property(e => e.NrEmpenho).HasColumnName("nrEmpenho");
            entity.Property(e => e.NrEmpenhoAnterior)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("nrEmpenhoAnterior");
            entity.Property(e => e.NrMesCompetencia).HasColumnName("nrMesCompetencia");
            entity.Property(e => e.NrParcela).HasColumnName("nrParcela");
            entity.Property(e => e.VlEmpenho)
                .HasColumnType("money")
                .HasColumnName("vlEmpenho");
            entity.Property(e => e.VlPagoAdv)
                .HasColumnType("money")
                .HasColumnName("vlPagoAdv");

            entity.HasOne(d => d.IdClassificacaoObjetoNavigation).WithMany(p => p.TbDspEmpenhos)
                .HasForeignKey(d => d.IdClassificacaoObjeto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspEmpenhos_tbLicClassificacoesObjetos");

            entity.HasOne(d => d.IdCondicaoPgtoNavigation).WithMany(p => p.TbDspEmpenhos)
                .HasForeignKey(d => d.IdCondicaoPgto)
                .HasConstraintName("FK_tbDspEmpenhos_tbGerCondicoesPagamento");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.TbDspEmpenhos)
                .HasForeignKey(d => d.IdContrato)
                .HasConstraintName("FK_tbDspEmpenhos_tbCntContratos");

            entity.HasOne(d => d.IdDotacaoNavigation).WithMany(p => p.TbDspEmpenhos)
                .HasForeignKey(d => d.IdDotacao)
                .HasConstraintName("FK_tbDspEmpenhos_tbOrcDotacoes");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbDspEmpenhos)
                .HasForeignKey(d => d.IdLicitacao)
                .HasConstraintName("FK_tbDspEmpenhos_tbLicLicitacoes");

            entity.HasOne(d => d.IdNatDespesaNavigation).WithMany(p => p.TbDspEmpenhos)
                .HasForeignKey(d => d.IdNatDespesa)
                .HasConstraintName("FK_tbDspEmpenhos_tbOrcNaturezasDespesa");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbDspEmpenhos)
                .HasForeignKey(d => d.IdPessoa)
                .HasConstraintName("FK_tbDspEmpenhos_tbGerPessoas");

            entity.HasOne(d => d.IdPrazoEntregaNavigation).WithMany(p => p.TbDspEmpenhos)
                .HasForeignKey(d => d.IdPrazoEntrega)
                .HasConstraintName("FK_tbDspEmpenhos_tbGerPrazosEntrega");

            entity.HasOne(d => d.IdRecursoNavigation).WithMany(p => p.TbDspEmpenhos)
                .HasForeignKey(d => d.IdRecurso)
                .HasConstraintName("FK_tbDspEmpenhos_tbCapRecursos");

            entity.HasOne(d => d.IdSolicitacaoEmpenhoNavigation).WithMany(p => p.TbDspEmpenhos)
                .HasForeignKey(d => d.IdSolicitacaoEmpenho)
                .HasConstraintName("FK_tbDspEmpenhos_tbDspSolicitacoesEmpenho");

            entity.HasMany(d => d.IdDoctoFiscals).WithMany(p => p.IdEmpenhos)
                .UsingEntity<Dictionary<string, object>>(
                    "TbDspEmpenhosDocumentosFiscai",
                    r => r.HasOne<TbDspDocumentosFiscai>().WithMany()
                        .HasForeignKey("IdDoctoFiscal")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbDspEmpenhosDocumentosFiscais_tbDspDocumentosFiscais"),
                    l => l.HasOne<TbDspEmpenho>().WithMany()
                        .HasForeignKey("IdEmpenho")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbDspEmpenhosDocumentosFiscais_tbDspEmpenhos"),
                    j =>
                    {
                        j.HasKey("IdEmpenho", "IdDoctoFiscal");
                        j.ToTable("tbDspEmpenhosDocumentosFiscais");
                        j.IndexerProperty<int>("IdDoctoFiscal").HasColumnName("idDoctoFiscal");
                    });
        });

        modelBuilder.Entity<TbDspEmpenhoEmailEnviado>(entity =>
        {
            entity.HasKey(e => e.IdNotificacao);

            entity.ToTable("tbDspEmpenhoEmailEnviado");

            entity.Property(e => e.IdNotificacao).HasColumnName("idNotificacao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
        });

        modelBuilder.Entity<TbDspEmpenhosAssinaturaEletronica>(entity =>
        {
            entity.HasKey(e => e.IdAssinatura);

            entity.ToTable("tbDspEmpenhosAssinaturaEletronica");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsNotaAssinatura)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsNotaAssinatura");
            entity.Property(e => e.DsTipoDocumento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoDocumento");
            entity.Property(e => e.DtAssinatura)
                .HasColumnType("datetime")
                .HasColumnName("dtAssinatura");
        });

        modelBuilder.Entity<TbDspEmpenhosCompoentesDespesa>(entity =>
        {
            entity.HasKey(e => new { e.IdEmpenho, e.IdComponente });

            entity.ToTable("tbDspEmpenhosCompoentesDespesas");

            entity.Property(e => e.IdComponente).HasColumnName("idComponente");
            entity.Property(e => e.VlDespesa)
                .HasColumnType("money")
                .HasColumnName("vlDespesa");

            entity.HasOne(d => d.IdComponenteNavigation).WithMany(p => p.TbDspEmpenhosCompoentesDespesas)
                .HasForeignKey(d => d.IdComponente)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspEmpenhosCompoentesDespesas_tbDspComponentesDespesas");

            entity.HasOne(d => d.IdEmpenhoNavigation).WithMany(p => p.TbDspEmpenhosCompoentesDespesas)
                .HasForeignKey(d => d.IdEmpenho)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspEmpenhosCompoentesDespesas_tbDspEmpenhos");
        });

        modelBuilder.Entity<TbDspEmpenhosIntervenco>(entity =>
        {
            entity.HasKey(e => new { e.IdEmpenho, e.CdIntervencao });

            entity.ToTable("tbDspEmpenhosIntervencoes");

            entity.Property(e => e.CdIntervencao).HasColumnName("cdIntervencao");

            entity.HasOne(d => d.IdEmpenhoNavigation).WithMany(p => p.TbDspEmpenhosIntervencos)
                .HasForeignKey(d => d.IdEmpenho)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspEmpenhosIntervencoes_tbDspEmpenhos");
        });

        modelBuilder.Entity<TbDspEmpenhosIten>(entity =>
        {
            entity.HasKey(e => e.IdEmpenhoItem);

            entity.ToTable("tbDspEmpenhosItens");

            entity.HasIndex(e => new { e.IdEmpenho, e.IdItem, e.NrLote }, "IX_tbDspEmpenhosItens");

            entity.HasIndex(e => new { e.IdEmpenho, e.IdEmpenhoItem, e.IdItem, e.NrLote, e.IdNatDespesa, e.NrQtde, e.VlUnitario }, "IX_tbDspEmpenhosItens_14_169923827__K2_K1_K3_K10_K8_K5_K6_4_7");

            entity.HasIndex(e => new { e.IdEmpenho, e.IdNatDespesa }, "IX_tbDspEmpenhosItens_IdEmpenho_IdNatDespesa");

            entity.Property(e => e.DsItemCompl)
                .IsUnicode(false)
                .HasColumnName("dsItemCompl");
            entity.Property(e => e.DsMarca)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsMarca");
            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.NrQtde)
                .HasColumnType("money")
                .HasColumnName("nrQtde");
            entity.Property(e => e.VlTotal)
                .HasColumnType("money")
                .HasColumnName("vlTotal");
            entity.Property(e => e.VlUnitario)
                .HasColumnType("money")
                .HasColumnName("vlUnitario");

            entity.HasOne(d => d.IdEmpenhoNavigation).WithMany(p => p.TbDspEmpenhosItens)
                .HasForeignKey(d => d.IdEmpenho)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspEmpenhosItens_tbDspEmpenhos");

            entity.HasOne(d => d.IdItemNavigation).WithMany(p => p.TbDspEmpenhosItens)
                .HasForeignKey(d => d.IdItem)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspEmpenhosItens_tbDspItens");
        });

        modelBuilder.Entity<TbDspEstornoDetalheOrdemCredito>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbDspEstornoDetalheOrdemCredito");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtEstorno)
                .HasColumnType("datetime")
                .HasColumnName("dtEstorno");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdEstornoDetalhe).ValueGeneratedOnAdd();
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlEstorno)
                .HasColumnType("money")
                .HasColumnName("vlEstorno");
            entity.Property(e => e.VlRetencao)
                .HasColumnType("money")
                .HasColumnName("vlRetencao");
        });

        modelBuilder.Entity<TbDspEstornosDespesaExtraOrcamentarium>(entity =>
        {
            entity.HasKey(e => e.IdEstorno);

            entity.ToTable("tbDspEstornosDespesaExtraOrcamentaria");

            entity.HasIndex(e => e.IdDespesa, "IX_tbDspEstornosDespesaExtraOrcamentaria");

            entity.HasIndex(e => new { e.IdDespesa, e.IdEstorno }, "IX_tbDspEstornosDespesaExtraOrcamentaria_IdDespesa_IdEstorno");

            entity.HasIndex(e => new { e.DtEstorno, e.IdDespesa }, "IX_tbDspEstornosDespesaExtraOrcamentaria_dtEstorno_IdDespesa");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivo)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DtEstorno)
                .HasColumnType("datetime")
                .HasColumnName("dtEstorno");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.NrSequenciaAnual).HasColumnName("nrSequenciaAnual");
            entity.Property(e => e.VlEstorno)
                .HasColumnType("money")
                .HasColumnName("vlEstorno");

            entity.HasOne(d => d.IdDespesaNavigation).WithMany(p => p.TbDspEstornosDespesaExtraOrcamentaria)
                .HasForeignKey(d => d.IdDespesa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspEstornosDespesaExtraOrcamentaria_tbDspDespesaExtraOrcamentaria");
        });

        modelBuilder.Entity<TbDspEstornosEmpenho>(entity =>
        {
            entity.HasKey(e => e.IdEstorno);

            entity.ToTable("tbDspEstornosEmpenho");

            entity.HasIndex(e => new { e.IdEmpenho, e.DtEstorno, e.VlEstorno }, "IX_IdEmpenho_dtEstorno_vlEstorno").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpenho, e.IdEstorno }, "IX_tbDspEstornosEmpenho_IdEmpenho_IdEstorno");

            entity.HasIndex(e => e.IdEmpenho, "IX_tbDspEstornosEmpenho_IdEmpenho_inc_IdEstorno");

            entity.HasIndex(e => new { e.IdEstornoLiquidacao, e.DtEstorno, e.IdEmpenho }, "IX_tbDspEstornosEmpenho_IdEstornoLiquidacao_dtEstorno_IdEmpenho");

            entity.HasIndex(e => new { e.DtEstorno, e.IdEstornoLiquidacao, e.IdEmpenho }, "IX_tbDspEstornosEmpenho_dtEstorno_IdEstornoLiquidacao_IdEmpenho");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivo)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DtEstorno)
                .HasColumnType("datetime")
                .HasColumnName("dtEstorno");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdTipoEstornoEmpenho).HasColumnName("idTipoEstornoEmpenho");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.NrSequenciaAnual).HasColumnName("nrSequenciaAnual");
            entity.Property(e => e.VlEstorno)
                .HasColumnType("money")
                .HasColumnName("vlEstorno");
            entity.Property(e => e.VlSaldoAntDotacao)
                .HasColumnType("money")
                .HasColumnName("vlSaldoAntDotacao");

            entity.HasOne(d => d.IdEmpenhoNavigation).WithMany(p => p.TbDspEstornosEmpenhos)
                .HasForeignKey(d => d.IdEmpenho)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspEstornosEmpenho_tbDspEmpenhos");

            entity.HasOne(d => d.IdEmpresaNavigation).WithMany(p => p.TbDspEstornosEmpenhos)
                .HasForeignKey(d => d.IdEmpresa)
                .HasConstraintName("FK_tbDspEstornosEmpenho_tbGerEmpresasGoverno");

            entity.HasOne(d => d.IdTipoEstornoEmpenhoNavigation).WithMany(p => p.TbDspEstornosEmpenhos)
                .HasForeignKey(d => d.IdTipoEstornoEmpenho)
                .HasConstraintName("FK_tbDspEstornosEmpenho_tbDspTiposEstornoEmpenho");
        });

        modelBuilder.Entity<TbDspEstornosEmpenhoIten>(entity =>
        {
            entity.HasKey(e => e.IdEstornoItem);

            entity.ToTable("tbDspEstornosEmpenhoItens");

            entity.HasIndex(e => new { e.IdEstorno, e.IdItem, e.NrLote }, "IX_tbDspEstornosEmpenhoItens");

            entity.HasIndex(e => new { e.IdEstorno, e.IdItem, e.IdEstornoItem }, "IX_tbDspEstornosEmpenhoItens_IdEstorno_IdItem_IdEstornoItem");

            entity.Property(e => e.DsItemCompl)
                .IsUnicode(false)
                .HasColumnName("dsItemCompl");
            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.NrQtde)
                .HasColumnType("money")
                .HasColumnName("nrQtde");
            entity.Property(e => e.VlTotal)
                .HasColumnType("money")
                .HasColumnName("vlTotal");

            entity.HasOne(d => d.IdEstornoNavigation).WithMany(p => p.TbDspEstornosEmpenhoItens)
                .HasForeignKey(d => d.IdEstorno)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspEstornosEmpenhoItens_tbDspEstornosEmpenho");
        });

        modelBuilder.Entity<TbDspEstornosLiquidacao>(entity =>
        {
            entity.HasKey(e => e.IdEstorno);

            entity.ToTable("tbDspEstornosLiquidacao");

            entity.HasIndex(e => e.IdLiquidacao, "IX_IdLiquidacao").HasFillFactor(90);

            entity.HasIndex(e => e.DtEstorno, "IX_tbDspEstornosLiquidacao_dtEstorno_inc_IdLiquidacao_vlEstorno");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivo)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DtEstorno)
                .HasColumnType("datetime")
                .HasColumnName("dtEstorno");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.NrSequenciaAnual).HasColumnName("nrSequenciaAnual");
            entity.Property(e => e.VlEstorno)
                .HasColumnType("money")
                .HasColumnName("vlEstorno");

            entity.HasOne(d => d.IdLiquidacaoNavigation).WithMany(p => p.TbDspEstornosLiquidacaos)
                .HasForeignKey(d => d.IdLiquidacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspEstornosLiquidacao_tbDspLiquidacoes");
        });

        modelBuilder.Entity<TbDspEstornosPagamento>(entity =>
        {
            entity.HasKey(e => e.IdEstorno);

            entity.ToTable("tbDspEstornosPagamento");

            entity.HasIndex(e => e.IdPagamento, "IX_IdPagamento").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdPagamento, e.IdEstorno }, "IX_tbDspEstornosPagamento_IdPagamento_IdEstorno");

            entity.HasIndex(e => new { e.IdPagamento, e.DtEstorno }, "IX_tbDspEstornosPagamento_IdPagamento_dtEstorno");

            entity.HasIndex(e => e.DtEstorno, "IX_tbDspEstornosPagamento_dtEstorno");

            entity.HasIndex(e => new { e.DtEstorno, e.IdEstorno, e.IdPagamento }, "IX_tbDspEstornosPagamento_dtEstorno_IdEstorno_IdPagamento");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivo)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DtEstorno)
                .HasColumnType("datetime")
                .HasColumnName("dtEstorno");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlOrigem)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flOrigem");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.NrSequenciaAnual).HasColumnName("nrSequenciaAnual");
            entity.Property(e => e.VlEstorno)
                .HasColumnType("money")
                .HasColumnName("vlEstorno");
            entity.Property(e => e.VlRetencao)
                .HasColumnType("money")
                .HasColumnName("vlRetencao");

            entity.HasOne(d => d.IdPagamentoNavigation).WithMany(p => p.TbDspEstornosPagamentos)
                .HasForeignKey(d => d.IdPagamento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspEstornosPagamento_tbDspPagamentos");
        });

        modelBuilder.Entity<TbDspEstornosPagamentoDoctoNatureza>(entity =>
        {
            entity.HasKey(e => new { e.IdEstorno, e.IdLiquidacaoDocto, e.IdNatDespesa });

            entity.ToTable("tbDspEstornosPagamentoDoctoNaturezas");

            entity.Property(e => e.VlEstorno)
                .HasColumnType("money")
                .HasColumnName("vlEstorno");
            entity.Property(e => e.VlRetencao)
                .HasColumnType("money")
                .HasColumnName("vlRetencao");
        });

        modelBuilder.Entity<TbDspEstornosPagamentoDocumento>(entity =>
        {
            entity.HasKey(e => new { e.IdEstorno, e.IdLiquidacaoDocto });

            entity.ToTable("tbDspEstornosPagamentoDocumentos");

            entity.HasIndex(e => new { e.IdEstorno, e.IdLiquidacaoDocto }, "IX_tbDspEstornosPagamentoDocumentos_IdEstorno_IdLiquidacaoDocto");

            entity.HasIndex(e => new { e.IdLiquidacaoDocto, e.IdEstorno }, "IX_tbDspEstornosPagamentoDocumentos_IdLiquidacaoDocto_IdEstorno");

            entity.Property(e => e.VlEstorno)
                .HasColumnType("money")
                .HasColumnName("vlEstorno");
            entity.Property(e => e.VlRetencoes)
                .HasColumnType("money")
                .HasColumnName("vlRetencoes");
        });

        modelBuilder.Entity<TbDspGp>(entity =>
        {
            entity.HasKey(e => e.IdGps);

            entity.ToTable("tbDspGPS");

            entity.Property(e => e.CdOcorrencia)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdOcorrencia");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdPagamento).HasColumnName("cdPagamento");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsGuia)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsGuia");
            entity.Property(e => e.DsObservacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsObservacao");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.DtRemessa)
                .HasColumnType("datetime")
                .HasColumnName("dtRemessa");
            entity.Property(e => e.DtVencimento)
                .HasColumnType("datetime")
                .HasColumnName("dtVencimento");
            entity.Property(e => e.IdCc).HasColumnName("IdCC");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMesComp).HasColumnName("nrMesComp");
            entity.Property(e => e.NrRemessa).HasColumnName("nrRemessa");
            entity.Property(e => e.NrSeq).HasColumnName("nrSeq");
            entity.Property(e => e.NrSeqRemessa).HasColumnName("nrSeqRemessa");
            entity.Property(e => e.StGps)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("stGPS");
            entity.Property(e => e.VlAcrescimos)
                .HasColumnType("money")
                .HasColumnName("vlAcrescimos");
            entity.Property(e => e.VlDescontos)
                .HasColumnType("money")
                .HasColumnName("vlDescontos");
            entity.Property(e => e.VlGps)
                .HasColumnType("money")
                .HasColumnName("vlGPS");
            entity.Property(e => e.VlOutros)
                .HasColumnType("money")
                .HasColumnName("vlOutros");

            entity.HasOne(d => d.CdPagamentoNavigation).WithMany(p => p.TbDspGps)
                .HasForeignKey(d => d.CdPagamento)
                .HasConstraintName("FK_tbDspGPS_tbDspCodigosPagamentoInss");

            entity.HasOne(d => d.IdConsignacaoNavigation).WithMany(p => p.TbDspGps)
                .HasForeignKey(d => d.IdConsignacao)
                .HasConstraintName("FK_tbDspGPS_tbDspConsignacoes");

            entity.HasOne(d => d.IdEmpenhoNavigation).WithMany(p => p.TbDspGps)
                .HasForeignKey(d => d.IdEmpenho)
                .HasConstraintName("FK_tbDspGPS_tbDspEmpenhos");
        });

        modelBuilder.Entity<TbDspInscricaoRestosApagar>(entity =>
        {
            entity.HasKey(e => e.IdInscricao);

            entity.ToTable("tbDspInscricaoRestosAPagar");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtInscricao)
                .HasColumnType("datetime")
                .HasColumnName("dtInscricao");
            entity.Property(e => e.IdEmpenho).HasColumnName("idEmpenho");
            entity.Property(e => e.NrExercicio).HasColumnName("nrExercicio");
            entity.Property(e => e.VlNaoProcessado)
                .HasColumnType("money")
                .HasColumnName("vlNaoProcessado");
            entity.Property(e => e.VlProcessado)
                .HasColumnType("money")
                .HasColumnName("vlProcessado");
            entity.Property(e => e.VlProcessadoEmLiquidacao)
                .HasColumnType("money")
                .HasColumnName("vlProcessadoEmLiquidacao");

            entity.HasOne(d => d.IdEmpenhoNavigation).WithMany(p => p.TbDspInscricaoRestosApagars)
                .HasForeignKey(d => d.IdEmpenho)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspInscricaoRestosAPagar_tbDspEmpenhos");
        });

        modelBuilder.Entity<TbDspIten>(entity =>
        {
            entity.HasKey(e => e.IdItem);

            entity.ToTable("tbDspItens");

            entity.HasIndex(e => new { e.IdItem, e.IdUnidadeMedida }, "IX_IdItem_IdUnidadeMedida").HasFillFactor(90);

            entity.HasIndex(e => e.IdItem, "IX_tbDspItens").HasFillFactor(90);

            entity.HasIndex(e => e.FlAtivo, "IX_tbDspItens_flAtivo_inc_IdItem_dsItem_IdUnidadeMedida");

            entity.Property(e => e.DsItem)
                .IsUnicode(false)
                .HasColumnName("dsItem");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginAlteracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginAlteracao");
            entity.Property(e => e.DtAlteracao)
                .HasColumnType("datetime")
                .HasColumnName("dtAlteracao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlAceitaCompl)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flAceitaCompl");
            entity.Property(e => e.FlAtivo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flAtivo");
            entity.Property(e => e.FlPermiteExcederLimite)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPermiteExcederLimite");
            entity.Property(e => e.IdTipoObjetoDespesa).HasColumnName("idTipoObjetoDespesa");

            entity.HasOne(d => d.IdClassificacaoObjetoNavigation).WithMany(p => p.TbDspItens)
                .HasForeignKey(d => d.IdClassificacaoObjeto)
                .HasConstraintName("FK_tbDspItens_tbLicClassificacoesObjetos");

            entity.HasOne(d => d.IdUnidadeMedidaNavigation).WithMany(p => p.TbDspItens)
                .HasForeignKey(d => d.IdUnidadeMedida)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspItens_tbDspUnidadesMedida");
        });

        modelBuilder.Entity<TbDspItensNaturezasDespesa>(entity =>
        {
            entity.HasKey(e => new { e.IdItem, e.CdNatDespesa });

            entity.ToTable("tbDspItensNaturezasDespesa");

            entity.Property(e => e.CdNatDespesa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdNatDespesa");

            entity.HasOne(d => d.IdItemNavigation).WithMany(p => p.TbDspItensNaturezasDespesas)
                .HasForeignKey(d => d.IdItem)
                .HasConstraintName("FK_tbDspItensNaturezasDespesa_tbDspItens");
        });

        modelBuilder.Entity<TbDspItensUnificacao>(entity =>
        {
            entity.HasKey(e => e.IdItemUnificacao);

            entity.ToTable("tbDspItensUnificacao");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsNumObjeto).HasColumnName("dsNumObjeto");
            entity.Property(e => e.DsObjeto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DtUnificacao)
                .HasColumnType("datetime")
                .HasColumnName("dtUnificacao");
        });

        modelBuilder.Entity<TbDspLiquidacaoComunicacao>(entity =>
        {
            entity.HasKey(e => e.IdComunicacao);

            entity.ToTable("tbDspLiquidacaoComunicacao");

            entity.Property(e => e.DsTipoComunicacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoComunicacao");
            entity.Property(e => e.VlComunicacao)
                .HasColumnType("money")
                .HasColumnName("vlComunicacao");

            entity.HasOne(d => d.IdLiquidacaoDoctoNavigation).WithMany(p => p.TbDspLiquidacaoComunicacaos)
                .HasForeignKey(d => d.IdLiquidacaoDocto)
                .HasConstraintName("FK_tbDspLiquidacaoComunicacao_tbDspLiquidacaoComunicacao");
        });

        modelBuilder.Entity<TbDspLiquidacaoConvenio>(entity =>
        {
            entity.HasKey(e => e.IdLiqConvenio);

            entity.ToTable("tbDspLiquidacaoConvenio");

            entity.Property(e => e.IdLiqConvenio).HasColumnName("idLiqConvenio");
            entity.Property(e => e.IdLiquidacao).HasColumnName("idLiquidacao");
            entity.Property(e => e.IdSubvencao).HasColumnName("idSubvencao");
            entity.Property(e => e.NrParcela)
                .HasColumnType("money")
                .HasColumnName("nrParcela");
        });

        modelBuilder.Entity<TbDspLiquidaco>(entity =>
        {
            entity.HasKey(e => e.IdLiquidacao);

            entity.ToTable("tbDspLiquidacoes");

            entity.HasIndex(e => new { e.IdEmpenho, e.IdEmpresa, e.IdLiquidacao }, "IX_IdEmpenho_IdEmpresa_IdLiquidacao");

            entity.HasIndex(e => new { e.IdEmpenho, e.NrAno, e.DtLiquidacao, e.VlLiquidacao }, "IX_IdEmpenho_nrAno_nrSequencia_dtLiquidacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdLiquidacao, e.NrAno, e.IdEmpresa, e.IdEmpenho }, "IX_IdLiquidacao_nrAno_IdEmpresa_IdEmpenho").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpenho, e.IdLiquidacao, e.DtLiquidacao }, "IX_Liquidacoes_IdEmpenho_IdLiquidacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.NrAno, e.IdEmpresa }, "IX_nrAno_IdEmpresa").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpenho, e.DtLiquidacao }, "IX_tbDspLiquidacoes_IdEmpenho_dtLiquidacao");

            entity.HasIndex(e => new { e.IdEmpenho, e.DtLiquidacao, e.IdLiquidacao }, "IX_tbDspLiquidacoes_IdEmpenho_dtLiquidacao_IdLiquidacao");

            entity.HasIndex(e => new { e.IdLiquidacao, e.IdEmpenho }, "IX_tbDspLiquidacoes_IdLiquidacao_IdEmpenho");

            entity.HasIndex(e => new { e.IdLiquidacao, e.DtLiquidacao, e.IdEmpenho }, "IX_tbDspLiquidacoes_IdLiquidacao_dtLiquidacao_IdEmpenho");

            entity.HasIndex(e => new { e.DtLiquidacao, e.IdEmpenho, e.IdLiquidacao }, "IX_tbDspLiquidacoes_dtLiquidacao_IdEmpenho_IdLiquidacao");

            entity.HasIndex(e => new { e.DtLiquidacao, e.IdLiquidacao, e.IdEmpenho }, "IX_tbDspLiquidacoes_dtLiquidacao_IdLiquidacao_IdEmpenho");

            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtLiquidacao)
                .HasColumnType("datetime")
                .HasColumnName("dtLiquidacao");
            entity.Property(e => e.FlCisaoFusao).HasColumnName("flCisaoFusao");
            entity.Property(e => e.IdCcarrecadadora).HasColumnName("IdCCArrecadadora");
            entity.Property(e => e.IdCcfavorecido).HasColumnName("IdCCFavorecido");
            entity.Property(e => e.IdCcgrafica).HasColumnName("IdCCGrafica");
            entity.Property(e => e.NmServidor)
                .IsUnicode(false)
                .HasColumnName("nmServidor");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrCpfservidor)
                .HasMaxLength(11)
                .IsUnicode(false)
                .HasColumnName("nrCPFServidor");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.NrSequenciaAnual).HasColumnName("nrSequenciaAnual");
            entity.Property(e => e.VlLiquidacao)
                .HasColumnType("money")
                .HasColumnName("vlLiquidacao");

            entity.HasOne(d => d.IdEmpenhoNavigation).WithMany(p => p.TbDspLiquidacos)
                .HasForeignKey(d => d.IdEmpenho)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspLiquidacoes_tbDspEmpenhos");
        });

        modelBuilder.Entity<TbDspLiquidacoesDoctosIntegrado>(entity =>
        {
            entity.HasKey(e => e.IdDoctoIntegrado);

            entity.ToTable("tbDspLiquidacoesDoctosIntegrados");

            entity.Property(e => e.DsSituacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.IdNfse).HasColumnName("idNfse");
            entity.Property(e => e.VlAliquota)
                .HasColumnType("money")
                .HasColumnName("vlAliquota");
            entity.Property(e => e.VlIss)
                .HasColumnType("money")
                .HasColumnName("vlISS");

            entity.HasOne(d => d.IdConsignacaoNavigation).WithMany(p => p.TbDspLiquidacoesDoctosIntegrados)
                .HasForeignKey(d => d.IdConsignacao)
                .HasConstraintName("FK_tbDspLiquidacoesDoctosIntegrados_tbDspConsignacoes");
        });

        modelBuilder.Entity<TbDspLiquidacoesDoctosIten>(entity =>
        {
            entity.HasKey(e => e.IdLiquidacaoDoctoItem).HasName("PK_tbDspLiquidacoesDoctosItens_1");

            entity.ToTable("tbDspLiquidacoesDoctosItens");

            entity.HasIndex(e => e.IdNatDespesa, "IX_IdLiquidacaoDocto_vlTotal").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdLiquidacaoDocto, e.IdItem, e.NrLote }, "IX_tbDspLiquidacoesDoctosItens");

            entity.HasIndex(e => new { e.IdItem, e.NrLote, e.IdLiquidacaoDocto }, "IX_tbDspLiquidacoesDoctosItens_14_313924340__K3_K7_K2_6");

            entity.HasIndex(e => new { e.IdLiquidacaoDocto, e.NrLote, e.IdLiquidacaoDoctoItem, e.IdItem }, "IX_tbDspLiquidacoesDoctosItens_IdLiquidacaoDocto_nrLote_IdLiquidacaoDoctoItem_IdItem");

            entity.HasIndex(e => new { e.IdItem, e.NrLote, e.IdLiquidacaoDoctoItem, e.IdLiquidacaoDocto }, "_dta_index_tbDspLiquidacoesDoctosItens_14_313924340__K3_K7_K1_K2_6_8");

            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.NrQtde)
                .HasColumnType("money")
                .HasColumnName("nrQtde");
            entity.Property(e => e.VlDesconto)
                .HasColumnType("money")
                .HasColumnName("vlDesconto");
            entity.Property(e => e.VlTotal)
                .HasColumnType("money")
                .HasColumnName("vlTotal");

            entity.HasOne(d => d.IdLiquidacaoDoctoNavigation).WithMany(p => p.TbDspLiquidacoesDoctosItens)
                .HasForeignKey(d => d.IdLiquidacaoDocto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspLiquidacoesDoctosItens_tbDspLiquidacoesDocumentos");
        });

        modelBuilder.Entity<TbDspLiquidacoesDocumento>(entity =>
        {
            entity.HasKey(e => e.IdLiquidacaoDocto);

            entity.ToTable("tbDspLiquidacoesDocumentos");

            entity.HasIndex(e => e.IdEmpenho, "IX_IdEmpenho");

            entity.HasIndex(e => new { e.IdLiquidacao, e.IdEstorno, e.DtDocumento }, "IX_IdLiquidacao_IdEstorno_dtDocumento").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdLiquidacao, e.IdLiquidacaoDocto, e.IdTipoDoctoFiscal }, "IX_tbDspLiquidacoesDocumentos").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEstorno, e.IdLiquidacaoDoctoOrigem, e.IdLiquidacaoDocto }, "IX_tbDspLiquidacoesDocumentos_IdEstorno_IdLiquidacaoDoctoOrigem_IdLiquidacaoDocto");

            entity.HasIndex(e => e.IdLiquidacaoDoctoOrigem, "IX_tbDspLiquidacoesDocumentos_IdLiquidacaoDoctoOrigem").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdLiquidacaoDocto, e.IdTipoDoctoFiscal, e.DtDocumento, e.NrDocumento }, "IX_tbDspLiquidacoesDocumentos_IdLiquidacaoDocto_IdTipoDoctoFiscal_dtDocumento_nrDocumento");

            entity.HasIndex(e => new { e.IdLiquidacaoDocto, e.IdLiquidacaoDoctoOrigem, e.IdLiquidacao, e.IdEmpenho }, "IX_tbDspLiquidacoesDocumentos_K1_K13_K2_K12");

            entity.Property(e => e.CdCfop).HasColumnName("cdCFOP");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsSerie)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsSerie");
            entity.Property(e => e.DsSerieSeloSefa)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSerieSeloSEFA");
            entity.Property(e => e.DsTipoComunicacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoComunicacao");
            entity.Property(e => e.DtDocumento)
                .HasColumnType("datetime")
                .HasColumnName("dtDocumento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtRecebimento)
                .HasColumnType("datetime")
                .HasColumnName("dtRecebimento");
            entity.Property(e => e.DtVencimento)
                .HasColumnType("datetime")
                .HasColumnName("dtVencimento");
            entity.Property(e => e.IdTipoSerieDocFiscal).HasColumnName("idTipoSerieDocFiscal");
            entity.Property(e => e.NrAutenticacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrAutenticacao");
            entity.Property(e => e.NrCodigoBarras)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrCodigoBarras");
            entity.Property(e => e.NrCompAno).HasColumnName("nrCompAno");
            entity.Property(e => e.NrCompMes).HasColumnName("nrCompMes");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.NrLinhaDigitavel)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("nrLinhaDigitavel");
            entity.Property(e => e.NrReferencia)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrReferencia");
            entity.Property(e => e.NrSeloSefa)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("nrSeloSEFA");
            entity.Property(e => e.VlDescontoGru)
                .HasColumnType("money")
                .HasColumnName("vlDescontoGRU");
            entity.Property(e => e.VlDocumento)
                .HasColumnType("money")
                .HasColumnName("vlDocumento");
            entity.Property(e => e.VlIcmsdestacado)
                .HasColumnType("money")
                .HasColumnName("vlICMSDestacado");
            entity.Property(e => e.VlIcmsretido)
                .HasColumnType("money")
                .HasColumnName("vlICMSRetido");
            entity.Property(e => e.VlMoraJuros)
                .HasColumnType("money")
                .HasColumnName("vlMoraJuros");
            entity.Property(e => e.VlPrincipalGru)
                .HasColumnType("money")
                .HasColumnName("vlPrincipalGRU");

            entity.HasOne(d => d.CdCfopNavigation).WithMany(p => p.TbDspLiquidacoesDocumentos)
                .HasForeignKey(d => d.CdCfop)
                .HasConstraintName("FK_tbDspLiquidacoesDocumentos_tbDspCodigosFiscaisOperacoesPrestacoes");

            entity.HasOne(d => d.IdEstornoNavigation).WithMany(p => p.TbDspLiquidacoesDocumentos)
                .HasForeignKey(d => d.IdEstorno)
                .HasConstraintName("FK_tbDspLiquidacoesDocumentos_tbDspEstornosLiquidacao");

            entity.HasOne(d => d.IdLiquidacaoNavigation).WithMany(p => p.TbDspLiquidacoesDocumentos)
                .HasForeignKey(d => d.IdLiquidacao)
                .HasConstraintName("FK_tbDspLiquidacoesDocumentos_tbDspLiquidacoes");

            entity.HasOne(d => d.IdTipoDoctoFiscalNavigation).WithMany(p => p.TbDspLiquidacoesDocumentos)
                .HasForeignKey(d => d.IdTipoDoctoFiscal)
                .HasConstraintName("FK_tbDspLiquidacoesDocumentos_tbDspTiposDocumentosFiscais");

            entity.HasOne(d => d.IdTipoSerieDocFiscalNavigation).WithMany(p => p.TbDspLiquidacoesDocumentos)
                .HasForeignKey(d => d.IdTipoSerieDocFiscal)
                .HasConstraintName("FK_tbDspLiquidacoesDocumentos_tbDspTiposSerieDocFiscal");
        });

        modelBuilder.Entity<TbDspNumeracoesBaixasRap>(entity =>
        {
            entity.HasKey(e => e.IdNumeracaoBaixaRap);

            entity.ToTable("tbDspNumeracoesBaixasRap");

            entity.Property(e => e.DtObjeto)
                .HasColumnType("datetime")
                .HasColumnName("dtObjeto");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrSequenciaBaixa).HasColumnName("nrSequenciaBaixa");
        });

        modelBuilder.Entity<TbDspOrdemCompra>(entity =>
        {
            entity.HasKey(e => e.IdOrdemCompra);

            entity.ToTable("tbDspOrdemCompras");

            entity.Property(e => e.DsFormaPagamento)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("dsFormaPagamento");
            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLocalEntrega)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("dsLocalEntrega");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObservacoes)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("dsObservacoes");
            entity.Property(e => e.DsPrazoEntrega)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsPrazoEntrega");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.DtCompra)
                .HasColumnType("datetime")
                .HasColumnName("dtCompra");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtPrazoEntrega)
                .HasColumnType("datetime")
                .HasColumnName("dtPrazoEntrega");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlCompra)
                .HasColumnType("money")
                .HasColumnName("vlCompra");

            entity.HasOne(d => d.IdEmpenhoNavigation).WithMany(p => p.TbDspOrdemCompras)
                .HasForeignKey(d => d.IdEmpenho)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspOrdemCompras_tbDspEmpenhos");
        });

        modelBuilder.Entity<TbDspOrdemComprasIten>(entity =>
        {
            entity.HasKey(e => e.IdOrdemCompraItem).HasName("PK_tbDspOrdemComprasItens_1");

            entity.ToTable("tbDspOrdemComprasItens");

            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.NrQtde)
                .HasColumnType("money")
                .HasColumnName("nrQtde");
            entity.Property(e => e.VlDesconto)
                .HasColumnType("money")
                .HasColumnName("vlDesconto");
            entity.Property(e => e.VlTotal)
                .HasColumnType("money")
                .HasColumnName("vlTotal");

            entity.HasOne(d => d.IdOrdemCompraNavigation).WithMany(p => p.TbDspOrdemComprasItens)
                .HasForeignKey(d => d.IdOrdemCompra)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspOrdemComprasItens_tbDspOrdemCompras");
        });

        modelBuilder.Entity<TbDspOrdensPagamento>(entity =>
        {
            entity.HasKey(e => e.IdOrdemPagamento);

            entity.ToTable("tbDspOrdensPagamento");

            entity.HasIndex(e => new { e.IdEmpresa, e.IdPessoa }, "IX_IdEmpresa_IdPessoa").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.DsSituacao, e.IdOrdemPagamento }, "IX_IdEmpresa_dsSituacao_idOrdemPagamento").HasFillFactor(90);

            entity.HasIndex(e => e.DsSituacao, "IX_Situacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.NrSequencia, e.NrAno, e.IdOrdemPagamento, e.DtPagamento, e.IdPessoa }, "IX_nrSequencia_nrAno")
                .IsDescending(true, true, false, false, false)
                .HasFillFactor(90);

            entity.HasIndex(e => new { e.DsSituacao, e.DtOrdemPagamento, e.IdPessoa, e.IdOrdemPagamento }, "IX_tbDspOrdensPagamento_dsSituacao").HasFillFactor(90);

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.DsTipoOp)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipoOP");
            entity.Property(e => e.DtBaixa)
                .HasColumnType("datetime")
                .HasColumnName("dtBaixa");
            entity.Property(e => e.DtDoctoFinanceiro)
                .HasColumnType("datetime")
                .HasColumnName("dtDoctoFinanceiro");
            entity.Property(e => e.DtDoctoPagamento)
                .HasColumnType("datetime")
                .HasColumnName("dtDoctoPagamento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtOrdemPagamento)
                .HasColumnType("datetime")
                .HasColumnName("dtOrdemPagamento");
            entity.Property(e => e.DtPagamento)
                .HasColumnType("datetime")
                .HasColumnName("dtPagamento");
            entity.Property(e => e.IdCcarrecadadora).HasColumnName("IdCCArrecadadora");
            entity.Property(e => e.IdCcempresa).HasColumnName("IdCCEmpresa");
            entity.Property(e => e.IdCcfavorecido).HasColumnName("IdCCFavorecido");
            entity.Property(e => e.IdDepositoJudicial)
                .HasMaxLength(18)
                .IsUnicode(false);
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrCodigoBarrasDj)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrCodigoBarrasDJ");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlOrdemPagamento)
                .HasColumnType("money")
                .HasColumnName("vlOrdemPagamento");
            entity.Property(e => e.VlRetencoes)
                .HasColumnType("money")
                .HasColumnName("vlRetencoes");

            entity.HasOne(d => d.IdCcempresaNavigation).WithMany(p => p.TbDspOrdensPagamentos)
                .HasForeignKey(d => d.IdCcempresa)
                .HasConstraintName("FK_tbDspOrdensPagamento_tbGerContasCorrente");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbDspOrdensPagamentos)
                .HasForeignKey(d => d.IdPessoa)
                .HasConstraintName("FK_tbDspOrdensPagamento_tbGerPessoas");

            entity.HasOne(d => d.IdTipoDocFinanceiroNavigation).WithMany(p => p.TbDspOrdensPagamentos)
                .HasForeignKey(d => d.IdTipoDocFinanceiro)
                .HasConstraintName("FK_tbDspOrdensPagamento_tbFinTiposDocumentoFinanceiro");
        });

        modelBuilder.Entity<TbDspOrdensPagamentoDespesasExtra>(entity =>
        {
            entity.HasKey(e => new { e.IdOrdemPagamento, e.IdDespesa });

            entity.ToTable("tbDspOrdensPagamentoDespesasExtra");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.VlPagamento)
                .HasColumnType("money")
                .HasColumnName("vlPagamento");

            entity.HasOne(d => d.IdDespesaNavigation).WithMany(p => p.TbDspOrdensPagamentoDespesasExtras)
                .HasForeignKey(d => d.IdDespesa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspOrdensPagamentoDespesasExtra_tbDspDespesaExtraOrcamentaria");

            entity.HasOne(d => d.IdOrdemPagamentoNavigation).WithMany(p => p.TbDspOrdensPagamentoDespesasExtras)
                .HasForeignKey(d => d.IdOrdemPagamento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspOrdensPagamentoDespesasExtra_tbDspOrdensPagamento");
        });

        modelBuilder.Entity<TbDspOrdensPagamentoDocumento>(entity =>
        {
            entity.HasKey(e => new { e.IdOrdemPagamento, e.IdLiquidacaoDocto });

            entity.ToTable("tbDspOrdensPagamentoDocumentos");

            entity.HasIndex(e => new { e.IdLiquidacaoDocto, e.IdOrdemPagamento }, "IX_tbDspOrdensPagamentoDocumentos_Id").HasFillFactor(90);

            entity.Property(e => e.DsSituacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.VlPagamento)
                .HasColumnType("money")
                .HasColumnName("vlPagamento");
            entity.Property(e => e.VlRetencoes)
                .HasColumnType("money")
                .HasColumnName("vlRetencoes");

            entity.HasOne(d => d.IdLiquidacaoDoctoNavigation).WithMany(p => p.TbDspOrdensPagamentoDocumentos)
                .HasForeignKey(d => d.IdLiquidacaoDocto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspOrdensPagamentoDocumentos_tbDspLiquidacoesDocumentos");

            entity.HasOne(d => d.IdOrdemPagamentoNavigation).WithMany(p => p.TbDspOrdensPagamentoDocumentos)
                .HasForeignKey(d => d.IdOrdemPagamento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspOrdensPagamentoDocumentos_tbDspOrdensPagamento");
        });

        modelBuilder.Entity<TbDspPagamento>(entity =>
        {
            entity.HasKey(e => e.IdPagamento);

            entity.ToTable("tbDspPagamentos");

            entity.HasIndex(e => e.IdDespesa, "IX_IdDespesa").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdDespesa, e.DtPagamento, e.IdPagamento, e.IdLiquidacao, e.NrAno }, "IX_IdDespesa_dtPagamento_dtPagamento_IdPagamento_IdLiquidacao_nrAno");

            entity.HasIndex(e => new { e.IdLiquidacao, e.DtPagamento, e.VlPagamento, e.VlRetencoes }, "IX_IdLiquidacao_dtPagamento_vlPagamento").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdLiquidacao, e.VlPagamento, e.IdPagamento, e.NrAno }, "IX_IdLiquidacao_vlPagamento_IdPagamento_nrAno");

            entity.HasIndex(e => new { e.NrAno, e.IdPagamento, e.IdDespesa, e.NrSequencia, e.DtPagamento }, "IX_nrAno_IdPagamento_IdDespesa_nrSequencia").HasFillFactor(90);

            entity.HasIndex(e => e.IdConsignacao, "IX_tbDspPagamentos_IdConsignacao");

            entity.HasIndex(e => new { e.IdLiquidacao, e.IdPagamento, e.IdConsignacao, e.NrAno, e.VlRetencoes, e.DtPagamento }, "IX_tbDspPagamentos_IdLiquidacao_IdPagamento_IdConsignacao_nrAno_vlRetencoes_dtPagamento");

            entity.HasIndex(e => new { e.IdLiquidacao, e.IdPagamento, e.IdConsignacao, e.NrAno, e.VlRetencoes, e.DtPagamento, e.VlPagamento }, "IX_tbDspPagamentos_IdLiquidacao_IdPagamento_IdConsignacao_nrAno_vlRetencoes_dtPagamento_vlPagamento");

            entity.HasIndex(e => new { e.IdLiquidacao, e.DtPagamento, e.IdPagamento, e.IdCcempresa, e.IdEmpresa, e.IdConsignacao, e.NrAno }, "IX_tbDspPagamentos_IdLiquidacao_dtPagamento_IdPagamento_IdCCEmpresa_IdEmpresa_IdConsignacao_nrAno");

            entity.HasIndex(e => new { e.IdLiquidacao, e.DtPagamento, e.IdPagamento, e.IdDespesa, e.NrAno }, "IX_tbDspPagamentos_IdLiquidacao_dtPagamento_IdPagamento_IdDespesa_nrAno");

            entity.HasIndex(e => new { e.IdLiquidacao, e.NrAno, e.VlPagamento, e.IdPagamento }, "IX_tbDspPagamentos_IdLiquidacao_nrAno_vlPagamento_IdPagamento");

            entity.HasIndex(e => new { e.IdLiquidacao, e.NrAno, e.VlPagamento, e.DtPagamento, e.IdPagamento }, "IX_tbDspPagamentos_IdLiquidacao_nrAno_vlPagamento_dtPagamento_IdPagamento");

            entity.HasIndex(e => new { e.IdLiquidacao, e.NrAno, e.VlRetencoes, e.IdConsignacao, e.IdPagamento }, "IX_tbDspPagamentos_IdLiquidacao_nrAno_vlRetencoes_IdConsignacao_IdPagamento");

            entity.HasIndex(e => new { e.IdPagamento, e.DtPagamento, e.IdLiquidacao, e.IdDespesa, e.NrAno }, "IX_tbDspPagamentos_IdPagamento_dtPagamento_IdLiquidacao_IdDespesa_nrAno");

            entity.HasIndex(e => new { e.IdPagamento, e.NrAno }, "IX_tbDspPagamentos_IdPagamento_nrAno");

            entity.HasIndex(e => e.DtPagamento, "IX_tbDspPagamentos_dtPagamento");

            entity.HasIndex(e => new { e.DtPagamento, e.IdDespesa }, "IX_tbDspPagamentos_dtPagamento_IdDespesa");

            entity.HasIndex(e => new { e.DtPagamento, e.IdPagamento, e.IdDespesa }, "IX_tbDspPagamentos_dtPagamento_IdPagamento_IdDespesa");

            entity.HasIndex(e => new { e.DtPagamento, e.IdPagamento, e.IdLiquidacao, e.IdCcempresa, e.IdEmpresa, e.IdConsignacao, e.NrAno }, "IX_tbDspPagamentos_dtPagamento_IdPagamento_IdLiquidacao_IdCCEmpresa_IdEmpresa_IdConsignacao_nrAno");

            entity.HasIndex(e => new { e.NrAno, e.IdEmpresa, e.IdPessoaPagamento, e.IdTipoDocFinanceiro, e.IdLiquidacao, e.IdPagamento }, "IX_tbDspPagamentos_nrAno_IdEmpresa_IdPessoaPagamento_IdTipoDocFinanceiro_IdLiquidacao_IdPagamento");

            entity.HasIndex(e => new { e.NrAno, e.IdLiquidacao, e.IdPagamento, e.DtPagamento }, "IX_tbDspPagamentos_nrAno_IdLiquidacao_IdPagamento_dtPagamento");

            entity.HasIndex(e => new { e.NrAno, e.IdLiquidacao, e.IdPagamento, e.VlPagamento, e.IdConsignacao, e.VlRetencoes, e.DtPagamento }, "IX_tbDspPagamentos_nrAno_IdLiquidacao_IdPagamento_vlPagamento_IdConsignacao_vlRetencoes_dtPagamento");

            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtDoctoPagamento)
                .HasColumnType("datetime")
                .HasColumnName("dtDoctoPagamento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtPagamento)
                .HasColumnType("datetime")
                .HasColumnName("dtPagamento");
            entity.Property(e => e.IdCcarrecadadora).HasColumnName("IdCCArrecadadora");
            entity.Property(e => e.IdCcempresa).HasColumnName("IdCCEmpresa");
            entity.Property(e => e.IdCcfavorecido).HasColumnName("IdCCFavorecido");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.NrSequenciaAnual).HasColumnName("nrSequenciaAnual");
            entity.Property(e => e.VlPagamento)
                .HasColumnType("money")
                .HasColumnName("vlPagamento");
            entity.Property(e => e.VlRetencoes)
                .HasColumnType("money")
                .HasColumnName("vlRetencoes");

            entity.HasOne(d => d.IdConsignacaoNavigation).WithMany(p => p.TbDspPagamentos)
                .HasForeignKey(d => d.IdConsignacao)
                .HasConstraintName("FK_tbDspPagamentos_tbDspConsignacoes");

            entity.HasOne(d => d.IdDespesaNavigation).WithMany(p => p.TbDspPagamentos)
                .HasForeignKey(d => d.IdDespesa)
                .HasConstraintName("FK_tbDspPagamentos_tbDspDespesaExtraOrcamentaria");

            entity.HasOne(d => d.IdLiquidacaoNavigation).WithMany(p => p.TbDspPagamentos)
                .HasForeignKey(d => d.IdLiquidacao)
                .HasConstraintName("FK_tbDspPagamentos_tbDspLiquidacoes");

            entity.HasOne(d => d.IdOrdemPagamentoNavigation).WithMany(p => p.TbDspPagamentos)
                .HasForeignKey(d => d.IdOrdemPagamento)
                .HasConstraintName("FK_tbDspPagamentos_tbDspOrdensPagamento");

            entity.HasOne(d => d.IdTipoDocFinanceiroNavigation).WithMany(p => p.TbDspPagamentos)
                .HasForeignKey(d => d.IdTipoDocFinanceiro)
                .HasConstraintName("FK_tbDspPagamentos_tbFinTiposDocumentoFinanceiro");
        });

        modelBuilder.Entity<TbDspPagamentosAporte>(entity =>
        {
            entity.HasKey(e => new { e.IdPagamento, e.IdAporte });

            entity.ToTable("tbDspPagamentosAportes");

            entity.Property(e => e.VlPagamento)
                .HasColumnType("money")
                .HasColumnName("vlPagamento");

            entity.HasOne(d => d.IdAporteNavigation).WithMany(p => p.TbDspPagamentosAportes)
                .HasForeignKey(d => d.IdAporte)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspPagamentosAportes_tbRecMovimentoReceitasAportes");

            entity.HasOne(d => d.IdPagamentoNavigation).WithMany(p => p.TbDspPagamentosAportes)
                .HasForeignKey(d => d.IdPagamento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspPagamentosAportes_tbDspPagamentos");
        });

        modelBuilder.Entity<TbDspPagamentosAutorizacao>(entity =>
        {
            entity.HasKey(e => e.IdPagamentoAutorizacao);

            entity.ToTable("tbDspPagamentosAutorizacao");

            entity.Property(e => e.IdPagamentoAutorizacao).HasColumnName("idPagamentoAutorizacao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivo)
                .HasMaxLength(255)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(20)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");

            entity.HasMany(d => d.IdLiquidacaos).WithMany(p => p.IdPagamentoAutorizacaos)
                .UsingEntity<Dictionary<string, object>>(
                    "TbDspPagamentosAutorizacaoLiquidaco",
                    r => r.HasOne<TbDspLiquidaco>().WithMany()
                        .HasForeignKey("IdLiquidacao")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbDspPagamentosAutorizacaoLiquidacoes_tbDspLiquidacoes"),
                    l => l.HasOne<TbDspPagamentosAutorizacao>().WithMany()
                        .HasForeignKey("IdPagamentoAutorizacao")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbDspPagamentosAutorizacaoLiquidacoes_tbDspPagamentosAutorizacao"),
                    j =>
                    {
                        j.HasKey("IdPagamentoAutorizacao", "IdLiquidacao");
                        j.ToTable("tbDspPagamentosAutorizacaoLiquidacoes");
                        j.IndexerProperty<int>("IdPagamentoAutorizacao").HasColumnName("idPagamentoAutorizacao");
                    });
        });

        modelBuilder.Entity<TbDspPagamentosDespesaNaoEmpenhadum>(entity =>
        {
            entity.HasKey(e => e.IdPagtoNaoEmpenhada);

            entity.ToTable("tbDspPagamentosDespesaNaoEmpenhada");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
        });

        modelBuilder.Entity<TbDspPagamentosDoctoNatureza>(entity =>
        {
            entity.HasKey(e => new { e.IdPagamento, e.IdLiquidacaoDocto, e.IdNatDespesa });

            entity.ToTable("tbDspPagamentosDoctoNaturezas");

            entity.HasIndex(e => e.IdLiquidacaoDocto, "IX_tbDspPagamentosDoctoNaturezas_IdLiquidacaoDocto").HasFillFactor(90);

            entity.Property(e => e.VlPagamento)
                .HasColumnType("money")
                .HasColumnName("vlPagamento");
            entity.Property(e => e.VlRetencao)
                .HasColumnType("money")
                .HasColumnName("vlRetencao");
        });

        modelBuilder.Entity<TbDspPagamentosDocumento>(entity =>
        {
            entity.HasKey(e => new { e.IdPagamento, e.IdLiquidacaoDocto });

            entity.ToTable("tbDspPagamentosDocumentos");

            entity.HasIndex(e => e.IdLiquidacaoDocto, "IX_IdLiquidacaoDocto").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdLiquidacaoDocto, e.IdPagamento, e.VlRetencoes }, "IX_tbDspPagamentosDocumentos_IdLiquidacaoDocto_IdPagamento_vlRetencoes");

            entity.HasIndex(e => new { e.IdPagamento, e.IdLiquidacaoDocto, e.VlRetencoes }, "IX_tbDspPagamentosDocumentos_IdPagamento_IdLiquidacaoDocto_vlRetencoes");

            entity.HasIndex(e => new { e.IdPagamento, e.VlRetencoes, e.IdLiquidacaoDocto }, "IX_tbDspPagamentosDocumentos_IdPagamento_vlRetencoes_IdLiquidacaoDocto");

            entity.Property(e => e.VlPagamento)
                .HasColumnType("money")
                .HasColumnName("vlPagamento");
            entity.Property(e => e.VlRetencoes)
                .HasColumnType("money")
                .HasColumnName("vlRetencoes");
        });

        modelBuilder.Entity<TbDspPrestacaoContasAdiantamento>(entity =>
        {
            entity.HasKey(e => e.IdPrestacaoAdiantamento);

            entity.ToTable("tbDspPrestacaoContasAdiantamento");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsPrestacaoAdiantamento)
                .IsUnicode(false)
                .HasColumnName("dsPrestacaoAdiantamento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtPrestacaoAdiantamento)
                .HasColumnType("datetime")
                .HasColumnName("dtPrestacaoAdiantamento");
            entity.Property(e => e.VlConsumido)
                .HasColumnType("money")
                .HasColumnName("vlConsumido");
            entity.Property(e => e.VlNaoUtilizado)
                .HasColumnType("money")
                .HasColumnName("vlNaoUtilizado");
        });

        modelBuilder.Entity<TbDspRegDotacao>(entity =>
        {
            entity.HasKey(e => new { e.IdRegistro, e.IdDotacao });

            entity.ToTable("tbDspRegDotacao");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtVinculacao)
                .HasColumnType("datetime")
                .HasColumnName("dtVinculacao");
        });

        modelBuilder.Entity<TbDspRegistrosNecLicitOrgaosIten>(entity =>
        {
            entity.HasKey(e => new { e.IdRegistroOrgao, e.IdItem });

            entity.ToTable("tbDspRegistrosNecLicitOrgaosItens");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlCriador).HasColumnName("flCriador");
            entity.Property(e => e.NrQtdeAlterada)
                .HasColumnType("money")
                .HasColumnName("nrQtdeAlterada");
            entity.Property(e => e.NrQuantidade)
                .HasColumnType("money")
                .HasColumnName("nrQuantidade");

            entity.HasOne(d => d.IdItemNavigation).WithMany(p => p.TbDspRegistrosNecLicitOrgaosItens)
                .HasForeignKey(d => d.IdItem)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspRegistrosNecLicitOrgaosItens_tbDspItens");

            entity.HasOne(d => d.IdRegistroOrgaoNavigation).WithMany(p => p.TbDspRegistrosNecLicitOrgaosItens)
                .HasForeignKey(d => d.IdRegistroOrgao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspRegistrosNecLicitOrgaosItens_tbDspRegistrosNecLicitacoesOrgaos");
        });

        modelBuilder.Entity<TbDspRegistrosNecLicitOrgaosItensAlteraco>(entity =>
        {
            entity.HasKey(e => e.IdRegistroAlteracao);

            entity.ToTable("tbDspRegistrosNecLicitOrgaosItensAlteracoes");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrQuantidade).HasColumnName("nrQuantidade");
        });

        modelBuilder.Entity<TbDspRegistrosNecLicitacoesAnexo>(entity =>
        {
            entity.HasKey(e => e.IdAnexo);

            entity.ToTable("tbDspRegistrosNecLicitacoesAnexos");

            entity.HasIndex(e => e.IdRegistro, "IX_tbDspRegistrosNecLicitacoesAnexos").HasFillFactor(90);

            entity.Property(e => e.BnArquivo).HasColumnName("bnArquivo");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsAnexo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsAnexo");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtAnexso)
                .HasColumnType("datetime")
                .HasColumnName("dtAnexso");
            entity.Property(e => e.NmArquivo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmArquivo");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");

            entity.HasOne(d => d.IdRegistroNavigation).WithMany(p => p.TbDspRegistrosNecLicitacoesAnexos)
                .HasForeignKey(d => d.IdRegistro)
                .HasConstraintName("FK_tbDspRegistrosNecLicitacoesAnexos_tbDspRegistrosNecessidadeLicitacoes");
        });

        modelBuilder.Entity<TbDspRegistrosNecLicitacoesDotaco>(entity =>
        {
            entity.HasKey(e => new { e.IdRegistro, e.IdDotacao });

            entity.ToTable("tbDspRegistrosNecLicitacoesDotacoes");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");

            entity.HasOne(d => d.IdRegistroNavigation).WithMany(p => p.TbDspRegistrosNecLicitacoesDotacos)
                .HasForeignKey(d => d.IdRegistro)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspRegistrosNecLicitacoesDotacoes_tbDspRegistrosNecessidadeLicitacoes");
        });

        modelBuilder.Entity<TbDspRegistrosNecLicitacoesIten>(entity =>
        {
            entity.HasKey(e => new { e.IdRegistro, e.IdItem });

            entity.ToTable("tbDspRegistrosNecLicitacoesItens");

            entity.Property(e => e.NrQtdTotal)
                .HasColumnType("money")
                .HasColumnName("nrQtdTotal");
            entity.Property(e => e.VlUnitario)
                .HasColumnType("money")
                .HasColumnName("vlUnitario");

            entity.HasOne(d => d.IdItemNavigation).WithMany(p => p.TbDspRegistrosNecLicitacoesItens)
                .HasForeignKey(d => d.IdItem)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspRegistrosNecLicitacoesItens_tbDspItens");

            entity.HasOne(d => d.IdRegistroNavigation).WithMany(p => p.TbDspRegistrosNecLicitacoesItens)
                .HasForeignKey(d => d.IdRegistro)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspRegistrosNecLicitacoesItens_tbDspRegistrosNecessidadeLicitacoes");
        });

        modelBuilder.Entity<TbDspRegistrosNecLicitacoesOrgao>(entity =>
        {
            entity.HasKey(e => e.IdRegistroOrgao);

            entity.ToTable("tbDspRegistrosNecLicitacoesOrgaos");

            entity.HasIndex(e => new { e.IdEmpresa, e.IdRegistro, e.CdOrgao, e.CdUnidade, e.IdRegistroOrgao }, "IX_IdRegistro_cdOrgao_cdUnidade").HasFillFactor(90);

            entity.HasIndex(e => e.IdRegistro, "IX_tbDspRegistrosNecLicitacoesOrgaos_IdRegistro_inc_IdRegistroOrgao_cdOrgao_cdUnidade");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsJustificativa)
                .IsUnicode(false)
                .HasColumnName("dsJustificativa");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsRegistroOrgao)
                .IsUnicode(false)
                .HasColumnName("dsRegistroOrgao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlCriadoOrgao).HasColumnName("flCriadoOrgao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");

            entity.HasOne(d => d.IdRegistroNavigation).WithMany(p => p.TbDspRegistrosNecLicitacoesOrgaos)
                .HasForeignKey(d => d.IdRegistro)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspRegistrosNecLicitacoesOrgaos_tbDspRegistrosNecessidadeLicitacoes");

            entity.HasOne(d => d.TbOrcOrgao).WithMany(p => p.TbDspRegistrosNecLicitacoesOrgaos)
                .HasForeignKey(d => new { d.IdEmpresa, d.NrAno, d.CdOrgao })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspRegistrosNecLicitacoesOrgaos_tbOrcOrgaos");
        });

        modelBuilder.Entity<TbDspRegistrosNecessidadeLicitaco>(entity =>
        {
            entity.HasKey(e => e.IdRegistro);

            entity.ToTable("tbDspRegistrosNecessidadeLicitacoes");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsOrientacoes)
                .IsUnicode(false)
                .HasColumnName("dsOrientacoes");
            entity.Property(e => e.DsOrigemSaldo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsOrigemSaldo");
            entity.Property(e => e.DsRegistro)
                .IsUnicode(false)
                .HasColumnName("dsRegistro");
            entity.Property(e => e.DtLimiteSolicitacoes)
                .HasColumnType("datetime")
                .HasColumnName("dtLimiteSolicitacoes");
            entity.Property(e => e.DtRegistro)
                .HasColumnType("datetime")
                .HasColumnName("dtRegistro");
            entity.Property(e => e.FlPermiteAddItens).HasColumnName("flPermiteAddItens");
        });

        modelBuilder.Entity<TbDspRetOcorrenciasGp>(entity =>
        {
            entity.HasKey(e => e.IdOcorrencia);

            entity.ToTable("tbDspRetOcorrenciasGPS");

            entity.Property(e => e.IdOcorrencia)
                .ValueGeneratedNever()
                .HasColumnName("idOcorrencia");
            entity.Property(e => e.CdOcorrencia)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdOcorrencia");
            entity.Property(e => e.DsOcorrencia)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("dsOcorrencia");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipo");
        });

        modelBuilder.Entity<TbDspReversaoEstorno>(entity =>
        {
            entity.HasKey(e => e.IdReversao);

            entity.ToTable("tbDspReversaoEstornos");

            entity.Property(e => e.IdReversao).HasColumnName("idReversao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivo)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtReversao)
                .HasColumnType("datetime")
                .HasColumnName("dtReversao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrReversao).HasColumnName("nrReversao");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlReversao)
                .HasColumnType("money")
                .HasColumnName("vlReversao");

            entity.HasOne(d => d.IdEstornoNavigation).WithMany(p => p.TbDspReversaoEstornos)
                .HasForeignKey(d => d.IdEstorno)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspReversaoEstornos_tbDspEstornosEmpenho");
        });

        modelBuilder.Entity<TbDspReversaoEstornosItem>(entity =>
        {
            entity.HasKey(e => e.IdReversaoItem);

            entity.ToTable("tbDspReversaoEstornosItem");

            entity.Property(e => e.DsItemCompl)
                .IsUnicode(false)
                .HasColumnName("dsItemCompl");
            entity.Property(e => e.IdReversao).HasColumnName("idReversao");
            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.NrQtde)
                .HasColumnType("money")
                .HasColumnName("nrQtde");
            entity.Property(e => e.VlTotal)
                .HasColumnType("money")
                .HasColumnName("vlTotal");

            entity.HasOne(d => d.IdReversaoNavigation).WithMany(p => p.TbDspReversaoEstornosItems)
                .HasForeignKey(d => d.IdReversao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspReversaoEstornosItem_tbDspReversaoEstornos1");
        });

        modelBuilder.Entity<TbDspRm>(entity =>
        {
            entity.HasKey(e => e.IdRms);

            entity.ToTable("tbDspRms");

            entity.HasIndex(e => new { e.IdDotacao, e.IdRms, e.DtRms, e.DsSituacao }, "IX_IdDotacao_dsSituacao_IdRms_dtRms").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdRms, e.IdEmpresa, e.DsSituacao }, "IX_IdRms_IdEmpresa_dsSituacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.DsSituacao, e.IdRms, e.IdEmpresa }, "IX_dsSituacao_IdRms_IdEmpresa").HasFillFactor(90);

            entity.HasIndex(e => new { e.DsSituacao, e.IdRms, e.DtRms }, "IX_dsSituacao_IdRms_dtRms").HasFillFactor(90);

            entity.HasIndex(e => new { e.DtRms, e.DsSituacao, e.NrSequencial, e.NrAno, e.IdRms }, "IX_dtRms_dsSituacao_nrSequencial_nrAno_IdRms").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdDotacao, e.IdRms }, "IX_index_tbDspRms_IdDotacao_IdRms");

            entity.HasIndex(e => new { e.NrSequencial, e.NrAno, e.IdDotacao, e.IdNatDespesa, e.IdEmpresa }, "IX_nrSequencial_nrAno_IdDotacao_IdNatDespesa").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.DsSituacao, e.IdRms, e.IdDotacao, e.IdNatDespesa, e.VlRms }, "IX_tbDspRms_IdEmpresa_nrAno_dsSituacao_IdRms_IdDotacao_IdNatDespesa_vlRms");

            entity.Property(e => e.DsJustificativa)
                .IsUnicode(false)
                .HasColumnName("dsJustificativa");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsParecer)
                .IsUnicode(false)
                .HasColumnName("dsParecer");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.DtAnalise)
                .HasColumnType("datetime")
                .HasColumnName("dtAnalise");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtRms)
                .HasColumnType("datetime")
                .HasColumnName("dtRms");
            entity.Property(e => e.IdProcAdm).HasColumnName("idProcAdm");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrSequencial).HasColumnName("nrSequencial");
            entity.Property(e => e.VlRms)
                .HasColumnType("money")
                .HasColumnName("vlRms");

            entity.HasOne(d => d.IdDotacaoNavigation).WithMany(p => p.TbDspRms)
                .HasForeignKey(d => d.IdDotacao)
                .HasConstraintName("FK_tbDspRms_tbOrcDotacoes");

            entity.HasOne(d => d.IdSetorCompraNavigation).WithMany(p => p.TbDspRms)
                .HasForeignKey(d => d.IdSetorCompra)
                .HasConstraintName("FK_tbDspRms_tbDspSetoresCompra");

            entity.HasOne(d => d.IdTipoProcessoNavigation).WithMany(p => p.TbDspRms)
                .HasForeignKey(d => d.IdTipoProcesso)
                .HasConstraintName("FK_tbDspRms_tbWflTiposProcessos");
        });

        modelBuilder.Entity<TbDspRmsIten>(entity =>
        {
            entity.HasKey(e => new { e.IdRms, e.IdItem });

            entity.ToTable("tbDspRmsItens");

            entity.HasIndex(e => new { e.IdContratoItemLicitacao, e.IdRms }, "IX_IdContratoItemLicitacao_IdRms").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdCotacao, e.IdRms, e.IdItem }, "IX_IdCotacao_IdRms_IdItem").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdItem, e.IdRms, e.IdContratoItemLicitacao }, "IX_IdItem_IdRms_IdContratoItemLicitacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdRms, e.IdContratoItemLicitacao }, "IX_IdRms_IdContratoItemLicitacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdRms, e.IdCotacao }, "IX_IdRms_IdCotacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdRms, e.IdItem, e.IdCotacao }, "IX_IdRms_IdItem_IdCotacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdContratoItemLicitacao, e.IdCotacao, e.IdRms }, "IX_tbDspRmsItens_IdContratoItemLicitacao_IdCotacao_IdRms");

            entity.HasIndex(e => new { e.IdRms, e.IdContratoItemLicitacao, e.IdCotacao, e.IdItem }, "IX_tbDspRmsItens_IdRms_IdContratoItemLicitacao_IdCotacao_IdItem");

            entity.Property(e => e.DsComplemento)
                .IsUnicode(false)
                .HasColumnName("dsComplemento");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrQtde)
                .HasColumnType("money")
                .HasColumnName("nrQtde");
            entity.Property(e => e.VlEstimadoTotal)
                .HasColumnType("money")
                .HasColumnName("vlEstimadoTotal");
            entity.Property(e => e.VlEstimadoUnitario)
                .HasColumnType("money")
                .HasColumnName("vlEstimadoUnitario");

            entity.HasOne(d => d.IdItemNavigation).WithMany(p => p.TbDspRmsItens)
                .HasForeignKey(d => d.IdItem)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspRmsItens_tbDspItens");

            entity.HasOne(d => d.IdRmsNavigation).WithMany(p => p.TbDspRmsItens)
                .HasForeignKey(d => d.IdRms)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspRmsItens_tbDspRms");
        });

        modelBuilder.Entity<TbDspRmsMovimento>(entity =>
        {
            entity.HasKey(e => e.IdMovimento);

            entity.ToTable("tbDspRmsMovimentos");

            entity.HasIndex(e => new { e.IdRms, e.DtMovimento }, "IX_IdRms_dtMovimento").HasFillFactor(90);

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsProcedimento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsProcedimento");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.EnderecoIp)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("EnderecoIP");
            entity.Property(e => e.Ocorrencia).IsUnicode(false);

            entity.HasOne(d => d.IdRmsNavigation).WithMany(p => p.TbDspRmsMovimentos)
                .HasForeignKey(d => d.IdRms)
                .HasConstraintName("FK_tbDspRmsMovimentos_tbDspRms");
        });

        modelBuilder.Entity<TbDspSetoresCompra>(entity =>
        {
            entity.HasKey(e => e.IdSetorCompra);

            entity.ToTable("tbDspSetoresCompra");

            entity.Property(e => e.FlCpl).HasColumnName("flCPL");
            entity.Property(e => e.NmSetorCompra)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmSetorCompra");

            entity.HasMany(d => d.IdModalidades).WithMany(p => p.IdSetorCompras)
                .UsingEntity<Dictionary<string, object>>(
                    "TbLicModalidadesSetoresCompra",
                    r => r.HasOne<TbLicModalidade>().WithMany()
                        .HasForeignKey("IdModalidade")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbLicModalidadesSetoresCompras_tbLicModalidades"),
                    l => l.HasOne<TbDspSetoresCompra>().WithMany()
                        .HasForeignKey("IdSetorCompra")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbLicModalidadesSetoresCompras_tbDspSetoresCompra"),
                    j =>
                    {
                        j.HasKey("IdSetorCompra", "IdModalidade");
                        j.ToTable("tbLicModalidadesSetoresCompras");
                    });
        });

        modelBuilder.Entity<TbDspSetoresCompraOrgaosUnidade>(entity =>
        {
            entity.HasKey(e => e.IdSetorOrgUnidade);

            entity.ToTable("tbDspSetoresCompraOrgaosUnidades");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.FlElaboraProcesso).HasColumnName("flElaboraProcesso");
            entity.Property(e => e.FlVisualizaElaboracaoProcesso).HasColumnName("flVisualizaElaboracaoProcesso");
            entity.Property(e => e.Idempresa).HasColumnName("IDEmpresa");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");

            entity.HasOne(d => d.IdSetorCompraNavigation).WithMany(p => p.TbDspSetoresCompraOrgaosUnidades)
                .HasForeignKey(d => d.IdSetorCompra)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspSetoresCompraOrgaosUnidades_tbDspSetoresCompra");

            entity.HasOne(d => d.TbOrcUnidade).WithMany(p => p.TbDspSetoresCompraOrgaosUnidades)
                .HasForeignKey(d => new { d.Idempresa, d.NrAno, d.CdOrgao, d.CdUnidade })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspSetoresCompraOrgaosUnidades_tbOrcUnidades");
        });

        modelBuilder.Entity<TbDspSolicitacoesEmpenho>(entity =>
        {
            entity.HasKey(e => e.IdSolicitacaoEmpenho);

            entity.ToTable("tbDspSolicitacoesEmpenho");

            entity.HasIndex(e => new { e.IdRms, e.NrSequencia, e.IdSolicitacaoEmpenho }, "IX_IdRms_nrSequencia").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdRms, e.NrSequencia, e.IdPessoa, e.IdContrato, e.IdLicitacao, e.DtSolicitacaoEmpenho }, "IX_IdRms_nrSequencia_IdPessoa").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdPessoa, e.DtSolicitacaoEmpenho }, "IX_tbDspSolicitacoesEmpenho_IdPessoa_dtSolicitacaoEmpenho");

            entity.HasIndex(e => e.IdRms, "IX_tbDspSolicitacoesEmpenho_IdRms");

            entity.HasIndex(e => e.DtSolicitacaoEmpenho, "IX_tbDspSolicitacoesEmpenho_dtSolicitacaoEmpenho_inc_IdSolEmp_IdRms_nrSeq_IdPess_vlSolEmp");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObservacao)
                .IsUnicode(false)
                .HasColumnName("dsObservacao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtSolicitacaoEmpenho)
                .HasColumnType("datetime")
                .HasColumnName("dtSolicitacaoEmpenho");
            entity.Property(e => e.DtVencimentoProposta)
                .HasColumnType("datetime")
                .HasColumnName("dtVencimentoProposta");
            entity.Property(e => e.FlContraPartida)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flContraPartida");
            entity.Property(e => e.IdNumeroAto).HasColumnName("idNumeroAto");
            entity.Property(e => e.NrAnoCompetencia).HasColumnName("nrAnoCompetencia");
            entity.Property(e => e.NrAnoProcesso).HasColumnName("nrAnoProcesso");
            entity.Property(e => e.NrMesCompetencia).HasColumnName("nrMesCompetencia");
            entity.Property(e => e.NrParcelas).HasColumnName("nrParcelas");
            entity.Property(e => e.NrProcesso)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrProcesso");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlSolicitacaoEmpenho)
                .HasColumnType("money")
                .HasColumnName("vlSolicitacaoEmpenho");

            entity.HasOne(d => d.IdCondicaoPgtoNavigation).WithMany(p => p.TbDspSolicitacoesEmpenhos)
                .HasForeignKey(d => d.IdCondicaoPgto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspSolicitacoesEmpenho_tbGerCondicoesPagamento");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbDspSolicitacoesEmpenhos)
                .HasForeignKey(d => d.IdPessoa)
                .HasConstraintName("FK_tbDspSolicitacoesEmpenho_tbGerPessoas");

            entity.HasOne(d => d.IdPrazoEntregaNavigation).WithMany(p => p.TbDspSolicitacoesEmpenhos)
                .HasForeignKey(d => d.IdPrazoEntrega)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspSolicitacoesEmpenho_tbGerPrazosEntrega");

            entity.HasOne(d => d.IdRmsNavigation).WithMany(p => p.TbDspSolicitacoesEmpenhos)
                .HasForeignKey(d => d.IdRms)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspSolicitacoesEmpenho_tbDspRms");
        });

        modelBuilder.Entity<TbDspSolicitacoesEmpenhoCancelada>(entity =>
        {
            entity.HasKey(e => e.IdCancelamento);

            entity.ToTable("tbDspSolicitacoesEmpenhoCanceladas");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivo)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DtCancelamento)
                .HasColumnType("datetime")
                .HasColumnName("dtCancelamento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");

            entity.HasOne(d => d.IdSolicitacaoEmpenhoNavigation).WithMany(p => p.TbDspSolicitacoesEmpenhoCancelada)
                .HasForeignKey(d => d.IdSolicitacaoEmpenho)
                .HasConstraintName("FK_tbDspSolicitacoesEmpenhoCanceladas_tbDspSolicitacoesEmpenho");
        });

        modelBuilder.Entity<TbDspSolicitacoesEmpenhoIten>(entity =>
        {
            entity.HasKey(e => e.IdSolicitacaoEmpenhoItem);

            entity.ToTable("tbDspSolicitacoesEmpenhoItens");

            entity.HasIndex(e => new { e.IdLicitacaoItem, e.NrLote, e.IdSolicitacaoEmpenho, e.IdSolicitacaoEmpenhoItem }, "IX_IdLicitacaoItem_nrLote_IdSolicitacaoEmpenhoItem").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdSolicitacaoEmpenho, e.IdItem, e.IdSolicitacaoEmpenhoItem }, "IX_IdSolicitacaoEmpenho_IdItem").HasFillFactor(90);

            entity.HasIndex(e => new { e.NrLote, e.IdItem, e.IdSolicitacaoEmpenho }, "IX_nrLote_IdItem_idSolicitacaoEmpenho").HasFillFactor(90);

            entity.Property(e => e.DsItemCompl)
                .IsUnicode(false)
                .HasColumnName("dsItemCompl");
            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.NrQtde)
                .HasColumnType("money")
                .HasColumnName("nrQtde");
            entity.Property(e => e.VlTotal)
                .HasColumnType("money")
                .HasColumnName("vlTotal");
            entity.Property(e => e.VlUnitario)
                .HasColumnType("money")
                .HasColumnName("vlUnitario");

            entity.HasOne(d => d.IdItemNavigation).WithMany(p => p.TbDspSolicitacoesEmpenhoItens)
                .HasForeignKey(d => d.IdItem)
                .HasConstraintName("FK_tbDspSolicitacoesEmpenhoItens_tbDspItens");

            entity.HasOne(d => d.IdSolicitacaoEmpenhoNavigation).WithMany(p => p.TbDspSolicitacoesEmpenhoItens)
                .HasForeignKey(d => d.IdSolicitacaoEmpenho)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbDspSolicitacoesEmpenhoItens_tbDspSolicitacoesEmpenho");

            entity.HasOne(d => d.TbLicLicitacoesItensLote).WithMany(p => p.TbDspSolicitacoesEmpenhoItens)
                .HasForeignKey(d => new { d.NrLote, d.IdLicitacaoItem })
                .HasConstraintName("FK_tbDspSolicitacoesEmpenhoItens_tbLicLicitacoesItensLotes");
        });

        modelBuilder.Entity<TbDspSolicitacoesLiquidacao>(entity =>
        {
            entity.HasKey(e => e.IdSolicitacao).HasName("PK_tbDspSolicitacaoLiquidacao");

            entity.ToTable("tbDspSolicitacoesLiquidacao");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsEnderecoIp)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsEnderecoIP");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginParecer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginParecer");
            entity.Property(e => e.DsParecer)
                .IsUnicode(false)
                .HasColumnName("dsParecer");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.DsSoliticacao)
                .IsUnicode(false)
                .HasColumnName("dsSoliticacao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtParecer)
                .HasColumnType("datetime")
                .HasColumnName("dtParecer");
            entity.Property(e => e.VlLiberado)
                .HasColumnType("money")
                .HasColumnName("vlLiberado");
            entity.Property(e => e.VlSolicitacao)
                .HasColumnType("money")
                .HasColumnName("vlSolicitacao");
        });

        modelBuilder.Entity<TbDspTiposConsignaco>(entity =>
        {
            entity.HasKey(e => e.IdTipoConsignacao);

            entity.ToTable("tbDspTiposConsignacoes");

            entity.HasIndex(e => new { e.IdEmpresa, e.DsCategoria, e.CdContaContabil }, "IX_tbDspTiposConsignacoes_IdEmpresa_dsCategoria_cdContaContabil");

            entity.HasIndex(e => new { e.IdEmpresa, e.DsCategoria, e.CdContaContabil, e.IdTipoConsignacao }, "IX_tbDspTiposConsignacoes_IdEmpresa_dsCategoria_cdContaContabil_IdTipoConsignacao");

            entity.HasIndex(e => new { e.IdTipoConsignacao, e.DsCategoria }, "IX_tbDspTiposConsignacoes_IdTipoConsignacao_dsCategoria");

            entity.HasIndex(e => new { e.CdContaContabil, e.IdEmpresa, e.DsCategoria }, "IX_tbDspTiposConsignacoes_cdContaContabil_IdEmpresa_dsCategori");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsCategoria)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("dsCategoria");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtTermino)
                .HasColumnType("datetime")
                .HasColumnName("dtTermino");
            entity.Property(e => e.FlExecutaBaixaAutomatica)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flExecutaBaixaAutomatica");
            entity.Property(e => e.FlRepercuteGuia)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flRepercuteGuia");
            entity.Property(e => e.IdCcfavorecido).HasColumnName("IdCCFavorecido");
            entity.Property(e => e.NmTipoConsignacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmTipoConsignacao");
            entity.Property(e => e.NrPercentual)
                .HasColumnType("money")
                .HasColumnName("nrPercentual");
        });

        modelBuilder.Entity<TbDspTiposDocumentosFiscai>(entity =>
        {
            entity.HasKey(e => e.IdTipoDoctoFiscal);

            entity.ToTable("tbDspTiposDocumentosFiscais");

            entity.Property(e => e.CdTipoTc).HasColumnName("cdTipoTC");
            entity.Property(e => e.FlAtivo).HasColumnName("flAtivo");
            entity.Property(e => e.FlControlaVencimento)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flControlaVencimento");
            entity.Property(e => e.FlConvenio)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flConvenio");
            entity.Property(e => e.FlUsaSerie).HasColumnName("flUsaSerie");
            entity.Property(e => e.NmTipoDoctoFiscal)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nmTipoDoctoFiscal");
            entity.Property(e => e.NrDiasPadrao).HasColumnName("nrDiasPadrao");
            entity.Property(e => e.NrDigitosCodigoBarras).HasColumnName("nrDigitosCodigoBarras");
        });

        modelBuilder.Entity<TbDspTiposEstornoEmpenho>(entity =>
        {
            entity.HasKey(e => e.IdTipoEstornoEmpenho);

            entity.ToTable("tbDspTiposEstornoEmpenho");

            entity.Property(e => e.IdTipoEstornoEmpenho)
                .ValueGeneratedNever()
                .HasColumnName("idTipoEstornoEmpenho");
            entity.Property(e => e.DsTipoEstornoEmpenho)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTipoEstornoEmpenho");
            entity.Property(e => e.FlRap).HasColumnName("flRap");
        });

        modelBuilder.Entity<TbDspTiposObjetivoDiarium>(entity =>
        {
            entity.HasKey(e => e.IdTipoObjetivoDiaria);

            entity.ToTable("tbDspTiposObjetivoDiaria");

            entity.Property(e => e.IdTipoObjetivoDiaria)
                .ValueGeneratedNever()
                .HasColumnName("idTipoObjetivoDiaria");
            entity.Property(e => e.DsTipoObjetivoDiaria)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTipoObjetivoDiaria");
        });

        modelBuilder.Entity<TbDspTiposSerieDocFiscal>(entity =>
        {
            entity.HasKey(e => e.IdTipoSerieDocFiscal);

            entity.ToTable("tbDspTiposSerieDocFiscal");

            entity.Property(e => e.IdTipoSerieDocFiscal)
                .ValueGeneratedNever()
                .HasColumnName("idTipoSerieDocFiscal");
            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.DsTipoSerieDocFiscal)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoSerieDocFiscal");
            entity.Property(e => e.FlAtivo).HasColumnName("flAtivo");
        });

        modelBuilder.Entity<TbDspUnidadesMedidum>(entity =>
        {
            entity.HasKey(e => e.IdUnidadeMedida);

            entity.ToTable("tbDspUnidadesMedida");

            entity.Property(e => e.NmUnidadeMedida)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmUnidadeMedida");

            entity.HasOne(d => d.IdUnidadeMedidaPadraoNavigation).WithMany(p => p.TbDspUnidadesMedida)
                .HasForeignKey(d => d.IdUnidadeMedidaPadrao)
                .HasConstraintName("FK_tbDspUnidadesMedida_tbPlaUnidadesMedidasPadrao");
        });

        modelBuilder.Entity<TbFinArquivoDocFinanceiro>(entity =>
        {
            entity.HasKey(e => e.IdArquivo);

            entity.ToTable("tbFinArquivoDocFinanceiro");

            entity.HasIndex(e => e.IdArquivoGerado, "IX_IdArquivoGerado").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdCcempresa, e.NrSequencia }, "IX_IdCCEmpresa_nrSequencia").HasFillFactor(90);

            entity.HasIndex(e => new { e.DsSituacao, e.IdArquivoGerado }, "IX_dsSituacao_IdArquivoGerado").HasFillFactor(90);

            entity.Property(e => e.DsJustificativaExclusao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsJustificativaExclusao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginExclusao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginExclusao");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.DsTipoArquivo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipoArquivo");
            entity.Property(e => e.DtExclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtExclusao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdCcarrecadadora).HasColumnName("IdCCArrecadadora");
            entity.Property(e => e.IdCcempresa).HasColumnName("IdCCEmpresa");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
        });

        modelBuilder.Entity<TbFinArquivoRetorno>(entity =>
        {
            entity.HasKey(e => e.IdIntegracao);

            entity.ToTable("tbFinArquivoRetorno");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdRetorno)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("cdRetorno");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NmArquivo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmArquivo");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrArquivoOrigem).HasColumnName("nrArquivoOrigem");
            entity.Property(e => e.NrArquivoRetorno).HasColumnName("nrArquivoRetorno");
        });

        modelBuilder.Entity<TbFinArquivoRetornoDetalhe>(entity =>
        {
            entity.HasKey(e => e.IdIntegracaoDetalhe);

            entity.ToTable("tbFinArquivoRetornoDetalhe");

            entity.Property(e => e.CdRetorno)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdRetorno");
            entity.Property(e => e.DsDestinatario)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsDestinatario");
            entity.Property(e => e.DsFuncional)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsFuncional");
            entity.Property(e => e.DsPagamento)
                .IsUnicode(false)
                .HasColumnName("dsPagamento");
            entity.Property(e => e.DsRemetente)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsRemetente");
            entity.Property(e => e.DsRetorno)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("dsRetorno");
            entity.Property(e => e.DtDetalhe)
                .HasColumnType("datetime")
                .HasColumnName("dtDetalhe");
            entity.Property(e => e.FlSituacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("flSituacao");
            entity.Property(e => e.NrAutenticacao)
                .HasMaxLength(17)
                .IsUnicode(false)
                .HasColumnName("nrAutenticacao");
            entity.Property(e => e.VlDetalhe)
                .HasColumnType("money")
                .HasColumnName("vlDetalhe");
        });

        modelBuilder.Entity<TbFinAutorizacaoPagamento>(entity =>
        {
            entity.HasKey(e => e.IdAutorizacao);

            entity.ToTable("tbFinAutorizacaoPagamento");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsAutorizacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsAutorizacao");
            entity.Property(e => e.DsJustificativa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsJustificativa");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginAnulacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginAnulacao");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtAnulacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulacao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlSituacao)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("flSituacao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlPagamento)
                .HasColumnType("money")
                .HasColumnName("vlPagamento");
            entity.Property(e => e.VlRetencoes)
                .HasColumnType("money")
                .HasColumnName("vlRetencoes");
        });

        modelBuilder.Entity<TbFinClassesOperacoesCredito>(entity =>
        {
            entity.HasKey(e => e.IdClasseOperacaoCredito).HasName("PK_tbammClasseOperacaoCredito");

            entity.ToTable("tbFinClassesOperacoesCredito");

            entity.Property(e => e.IdClasseOperacaoCredito).ValueGeneratedNever();
            entity.Property(e => e.CdClassificacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdClassificacao");
            entity.Property(e => e.DsClasse)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsClasse");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipo");
            entity.Property(e => e.FlAtivo).HasColumnName("flAtivo");
        });

        modelBuilder.Entity<TbFinCompensacaoDiarioTesourarium>(entity =>
        {
            entity.HasKey(e => e.IdCompensacaoDiario).HasName("PK_tbFinCompensacaoDiarioTesouraria_1");

            entity.ToTable("tbFinCompensacaoDiarioTesouraria");

            entity.HasIndex(e => e.IdCompensacaoDiario, "IX_tbFinCompensacaoDiarioTesouraria_IdCompensacaoDiario");

            entity.HasIndex(e => new { e.IdConciliacao, e.VlCompensacao }, "IX_tbFinCompensacaoDiarioTesouraria_IdConciliacao_vlCompensacao");

            entity.HasIndex(e => e.IdEstorno, "IX_tbFinCompensacaoDiarioTesouraria_IdEstorno_inc_IdCompDia_IdLancDia_nrSeq_IdExtr_IdConc_dtComp_vlComp_flTp_flOg");

            entity.HasIndex(e => e.IdLancamentoDiario, "IX_tbFinCompensacaoDiarioTesouraria_IdLancamentoDiario");

            entity.HasIndex(e => e.IdLancamentoDiario, "IX_tbFinCompensacaoDiarioTesouraria_IdLancamentoDiario2");

            entity.HasIndex(e => e.FlTipo, "IX_tbFinCompensacaoDiarioTesouraria_flTipo_inc_IdLancDiario_IdConcil_dtComp_IdEst");

            entity.Property(e => e.DtCompensacao)
                .HasColumnType("datetime")
                .HasColumnName("dtCompensacao");
            entity.Property(e => e.FlOrigem)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flOrigem");
            entity.Property(e => e.FlTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flTipo");
            entity.Property(e => e.NrSequencial).HasColumnName("nrSequencial");
            entity.Property(e => e.VlCompensacao)
                .HasColumnType("money")
                .HasColumnName("vlCompensacao");

            entity.HasOne(d => d.IdExtratoNavigation).WithMany(p => p.TbFinCompensacaoDiarioTesouraria)
                .HasForeignKey(d => d.IdExtrato)
                .HasConstraintName("FK_tbFinCompensacaoDiarioTesouraria_tbFinExtratosBancarios");
        });

        modelBuilder.Entity<TbFinConciliacoesBancaria>(entity =>
        {
            entity.HasKey(e => e.IdConciliacao);

            entity.ToTable("tbFinConciliacoesBancarias");

            entity.HasIndex(e => e.IdLancamentoDiario, "IX_IdLancamentoDiario");

            entity.HasIndex(e => new { e.IdCc, e.IdTipoConciliacao, e.DtOperacao, e.DtBaixa }, "IX_tbFinConciliacoesBancarias_IdCC_IdTipoConciliacao_dtOperacao_dtBaixa");

            entity.HasIndex(e => new { e.IdCc, e.IdTipoConciliacao, e.NrDocumento, e.VlOperacao, e.IdCcorigemDestino }, "IX_tbFinConciliacoesBancarias_IdCC_IdTipoConciliacao_nrDocumento_vlOperacao_IdCCOrigemDestino");

            entity.HasIndex(e => new { e.IdCc, e.DtOperacao, e.DtBaixa, e.IdCcorigemDestino, e.IdTipoConciliacao, e.IdConciliacao, e.NrDocumento }, "IX_tbFinConciliacoesBancarias_IdCC_dtOperacao_dtBaixa_IdCCOrigemDestino_IdTipoConciliacao_IdConciliacao_nrDocumento");

            entity.HasIndex(e => new { e.IdCc, e.FlParcial, e.DtOperacao, e.DtBaixa }, "IX_tbFinConciliacoesBancarias_IdCC_flParcial_dtOperacao_dtBaixa");

            entity.HasIndex(e => e.IdConciliacaoOrigem, "IX_tbFinConciliacoesBancarias_IdConciliacaoOrigem_inc");

            entity.HasIndex(e => new { e.IdEmpresa, e.IdLancamentoDiario, e.IdTipoConciliacao }, "IX_tbFinConciliacoesBancarias_IdEmpresa_IdLancamentoDiario");

            entity.HasIndex(e => new { e.IdLancamentoDiario, e.IdConciliacao }, "IX_tbFinConciliacoesBancarias_IdLancamentoDiario_IdConciliacao");

            entity.HasIndex(e => new { e.DtBaixa, e.DtOperacao, e.IdCc, e.IdTipoConciliacao }, "IX_tbFinConciliacoesBancarias_dtBaixa_dtOperacao_IdCC_IdTipoConciliacao").HasFillFactor(90);

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginBaixa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginBaixa");
            entity.Property(e => e.DsOperacao)
                .IsUnicode(false)
                .HasColumnName("dsOperacao");
            entity.Property(e => e.DsTipoOperacao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipoOperacao");
            entity.Property(e => e.DtBaixa)
                .HasColumnType("datetime")
                .HasColumnName("dtBaixa");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtOperacao)
                .HasColumnType("datetime")
                .HasColumnName("dtOperacao");
            entity.Property(e => e.FlParcial)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flParcial");
            entity.Property(e => e.IdCc).HasColumnName("IdCC");
            entity.Property(e => e.IdCcorigemDestino).HasColumnName("IdCCOrigemDestino");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlOperacao)
                .HasColumnType("money")
                .HasColumnName("vlOperacao");

            entity.HasOne(d => d.IdCcNavigation).WithMany(p => p.TbFinConciliacoesBancaria)
                .HasForeignKey(d => d.IdCc)
                .HasConstraintName("FK_tbFinConciliacoesBancarias_tbGerContasCorrente");

            entity.HasOne(d => d.IdExtratoNavigation).WithMany(p => p.TbFinConciliacoesBancaria)
                .HasForeignKey(d => d.IdExtrato)
                .HasConstraintName("FK_tbFinConciliacoesBancarias_tbFinExtratosBancarios");

            entity.HasOne(d => d.IdLancamentoDiarioNavigation).WithMany(p => p.TbFinConciliacoesBancaria)
                .HasForeignKey(d => d.IdLancamentoDiario)
                .OnDelete(DeleteBehavior.SetNull)
                .HasConstraintName("FK_tbFinConciliacoesBancarias_tbFinDiarioTesouraria");

            entity.HasOne(d => d.IdTipoConciliacaoNavigation).WithMany(p => p.TbFinConciliacoesBancaria)
                .HasForeignKey(d => d.IdTipoConciliacao)
                .HasConstraintName("FK_tbFinConciliacoesBancarias_tbFinTiposConciliacao");

            entity.HasOne(d => d.IdTipoDocFinanceiroNavigation).WithMany(p => p.TbFinConciliacoesBancaria)
                .HasForeignKey(d => d.IdTipoDocFinanceiro)
                .HasConstraintName("FK_tbFinConciliacoesBancarias_tbFinTiposDocumentoFinanceiro");
        });

        modelBuilder.Entity<TbFinConciliacoesBancariasObjeto>(entity =>
        {
            entity.HasKey(e => new { e.IdConciliacao, e.TpObjeto, e.IdObjeto });

            entity.ToTable("tbFinConciliacoesBancariasObjetos");

            entity.HasIndex(e => e.IdConciliacao, "IX_tbFinConciliacoesBancariasObjetos_IdConciliacao");

            entity.HasIndex(e => e.IdObjeto, "IX_tbFinConciliacoesBancariasObjetos_idObjeto");

            entity.HasIndex(e => new { e.TpObjeto, e.IdObjeto, e.TpSigla }, "IX_tbFinConciliacoesBancariasObjetos_tpObjeto_idObjeto_tpSigla");

            entity.Property(e => e.TpObjeto)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpObjeto");
            entity.Property(e => e.IdObjeto).HasColumnName("idObjeto");
            entity.Property(e => e.TpSigla)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpSigla");

            entity.HasOne(d => d.IdConciliacaoNavigation).WithMany(p => p.TbFinConciliacoesBancariasObjetos)
                .HasForeignKey(d => d.IdConciliacao)
                .HasConstraintName("FK_tbFinConciliacoesBancariasObjetos_tbFinConciliacoesBancarias");
        });

        modelBuilder.Entity<TbFinContaContabilEstatal>(entity =>
        {
            entity.HasKey(e => e.IdContaContabilEstatal);

            entity.ToTable("tbFinContaContabilEstatal");

            entity.Property(e => e.CdContaContabilEstatal)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilEstatal");
            entity.Property(e => e.DsContaContabil)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsContaContabil");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.TpEscrituracao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpEscrituracao");
            entity.Property(e => e.TpNaturazaSaldo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpNaturazaSaldo");

            entity.HasMany(d => d.IdContaContabils).WithMany(p => p.IdContaContabilEstatals)
                .UsingEntity<Dictionary<string, object>>(
                    "TbFinCorrelacaoContaEstatalContaPadrao",
                    r => r.HasOne<TbFinContasContabei>().WithMany()
                        .HasForeignKey("IdContaContabil")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbFinCorrelacaoContaEstatalContaPadrao_tbFinContasContabeis1"),
                    l => l.HasOne<TbFinContaContabilEstatal>().WithMany()
                        .HasForeignKey("IdContaContabilEstatal")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbFinCorrelacaoContaEstatalContaPadrao_tbFinContaContabilEstatal"),
                    j =>
                    {
                        j.HasKey("IdContaContabilEstatal", "IdContaContabil").HasName("PK_tbFinCorrelacaoContaEstatalContaPadrao_1");
                        j.ToTable("tbFinCorrelacaoContaEstatalContaPadrao");
                    });
        });

        modelBuilder.Entity<TbFinContasContabei>(entity =>
        {
            entity.HasKey(e => e.IdContaContabil);

            entity.ToTable("tbFinContasContabeis");

            entity.HasIndex(e => new { e.IdContaContabilNivelSuperior, e.IdContaContabil }, "IX_IdContaContabilNivelSuperior").HasFillFactor(90);

            entity.HasIndex(e => e.IdContaContabilNivelSuperior, "IX_tbFinContasContabeis_IdContaContabilNivelSuperior");

            entity.HasIndex(e => new { e.IdContaContabilNivelSuperior, e.IdContaContabil, e.CdContaContabil, e.DsContaContabil, e.DtDesativacao }, "IX_tbFinContasContabeis_IdContaContabilNivelSuperior_idContaContabil_cdContaContabil_dsContaContabil_dtDesativacao");

            entity.HasIndex(e => new { e.IdContaContabil, e.IdEmpresa, e.CdContaContabil }, "IX_tbFinContasContabeis_IdContaContabil_IdEmpresa_cdContaContabil");

            entity.HasIndex(e => new { e.IdContaContabil, e.CdContaContabil, e.DsContaContabil, e.NrAno, e.IdEmpresa }, "IX_tbFinContasContabeis_IdContaContabil_cdContaContabil_dsContaContabil_nrAno_IdEmpresa");

            entity.HasIndex(e => new { e.IdContaContabil, e.NrAno, e.CdContaContabil, e.IdEmpresa, e.DsContaContabil }, "IX_tbFinContasContabeis_IdContaContabil_nrAno_cdContaContabil_IdEmpresa_dsContaContabil");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.IdContaContabil, e.CdContaContabil }, "IX_tbFinContasContabeis_IdEmpresa_nrAno_IdContaContabil_cdContaContabil");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.CdContaContabil, e.IdContaContabil, e.IdContaContabilNivelSuperior, e.DsContaContabil }, "IX_tbFinContasContabeis_IdEmpresa_nrAno_cdContaContabil_IdContaContabil_IdContaContabilNivelSuperior_dsContaContabil");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.DtDesativacao }, "IX_tbFinContasContabeis_IdEmpresa_nrAno_dtDesativacao_inc_IdContaContabil_cdContaContabil");

            entity.HasIndex(e => new { e.CdContaContabil, e.IdContaContabil }, "IX_tbFinContasContabeis_cdContaContabil_IdContaContabil");

            entity.HasIndex(e => new { e.CdContaContabil, e.DsContaContabil, e.IdEmpresa, e.NrAno }, "IX_tbFinContasContabeis_cdContaContabil_dsContaContabil_IdEmpresa_nrAno");

            entity.HasIndex(e => new { e.NrAno, e.IdEmpresa, e.IdContaContabil }, "IX_tbFinContasContabeis_nrAno_IdEmpresa_IdContaContabil");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(21)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.DsCategoriaConta)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsCategoriaConta");
            entity.Property(e => e.DsContaContabil)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsContaContabil");
            entity.Property(e => e.DsEspecificacao)
                .IsUnicode(false)
                .HasColumnName("dsEspecificacao");
            entity.Property(e => e.DsLoginAlteracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginAlteracao");
            entity.Property(e => e.DsLoginInclusao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginInclusao");
            entity.Property(e => e.DsTipoContaPadrao)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoContaPadrao");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.DtCriacao)
                .HasColumnType("datetime")
                .HasColumnName("dtCriacao");
            entity.Property(e => e.DtDesativacao)
                .HasColumnType("datetime")
                .HasColumnName("dtDesativacao");
            entity.Property(e => e.FlContaPadrao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flContaPadrao");
            entity.Property(e => e.FlEscrituracao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flEscrituracao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.TpControle)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpControle");
            entity.Property(e => e.TpIndicSupFinanc)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpIndicSupFinanc");
            entity.Property(e => e.TpNaturezaInformacao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpNaturezaInformacao");
            entity.Property(e => e.TpNaturezaSaldo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpNaturezaSaldo");
            entity.Property(e => e.VlSaldoInicial)
                .HasColumnType("money")
                .HasColumnName("vlSaldoInicial");

            entity.HasOne(d => d.IdContaContabilNivelSuperiorNavigation).WithMany(p => p.InverseIdContaContabilNivelSuperiorNavigation)
                .HasForeignKey(d => d.IdContaContabilNivelSuperior)
                .HasConstraintName("FK_tbFinContasContabeis_tbFinContasContabeis");
        });

        modelBuilder.Entity<TbFinContasContabeisContasCorrente>(entity =>
        {
            entity.HasKey(e => e.IdCorrelacao);

            entity.ToTable("tbFinContasContabeisContasCorrentes");

            entity.HasIndex(e => new { e.IdTipoInvestimento, e.IdCc, e.IdContaContabil }, "IX_tbFinContasContabeisContasCorrentes_IdTipoInvestimento_IdCC_IdContaContabil");

            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.IdCc).HasColumnName("IdCC");

            entity.HasOne(d => d.IdCcNavigation).WithMany(p => p.TbFinContasContabeisContasCorrentes)
                .HasForeignKey(d => d.IdCc)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbFinContasContabeisContasCorrentes_tbGerContasCorrente1");

            entity.HasOne(d => d.IdContaContabilNavigation).WithMany(p => p.TbFinContasContabeisContasCorrentes)
                .HasForeignKey(d => d.IdContaContabil)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbFinContasContabeisContasCorrentes_tbFinContasContabeis");
        });

        modelBuilder.Entity<TbFinContasContabeisCorrelacao>(entity =>
        {
            entity.HasKey(e => new { e.IdEmpresa, e.NrAno, e.CdContaContabil });

            entity.ToTable("tbFinContasContabeisCorrelacao");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdContaContabilAnoSeguinte)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilAnoSeguinte");
        });

        modelBuilder.Entity<TbFinContasContabeisLancamento>(entity =>
        {
            entity.HasKey(e => e.IdLancamento);

            entity.ToTable("tbFinContasContabeisLancamentos");

            entity.HasIndex(e => new { e.IdContaContabilCredito, e.DtLancamento, e.FlEstorno, e.IdLancamento, e.DsObjeto, e.DsNumObjeto }, "IX_IdContaContabilCredito_dtLancamento_flEstorno_IdLancamento").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdContaContabilCredito, e.DtLancamento, e.NrSequencial, e.IdLancamento, e.DsOrigem, e.NrAno, e.IdEmpresa, e.DsObjeto }, "IX_IdContaContabilCredito_dtLancamento_nrSequencial_IdLancamento_dsOrigem_nrAno").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdContaContabilDebito, e.DtLancamento, e.FlEstorno, e.IdLancamento, e.DsObjeto, e.DsNumObjeto }, "IX_IdContaContabilDebito_dtLancamento_flEstorno_IdLancamento").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdContaContabilDebito, e.DtLancamento, e.NrSequencial, e.IdLancamento, e.DsOrigem, e.NrAno, e.IdEmpresa, e.DsObjeto }, "IX_IdContaContabilDebito_dtLancamento_nrSequencial_IdLancamento_dsOrigem_nrAno").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno }, "IX_IdEmpresa_nrAno");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.DtLancamento }, "IX_IdEmpresa_nrAno_dtLancamento_IncludeColumns").HasFillFactor(90);

            entity.HasIndex(e => new { e.DsObjeto, e.DsNumObjeto, e.DsSigla, e.NrAno, e.IdEmpresa, e.IdLancamento }, "IX_Objeto_Numero_Sigla_Ano_Empresa").IsDescending(false, true, false, true, false, true);

            entity.HasIndex(e => new { e.CdOrgao, e.CdUnidade, e.NrAno, e.IdEmpresa, e.DtLancamento, e.IdLancamento, e.NrSequencial }, "IX_cdOrgao_cdUnidade_nrAno_IdEmpresa");

            entity.HasIndex(e => new { e.DsObjeto, e.DsNumObjeto, e.DsSigla, e.IdEmpresa, e.NrAno, e.IdLancamento }, "IX_dsObjeto_dsNumObjeto").IsDescending(false, true, false, false, false, false);

            entity.HasIndex(e => new { e.DtLancamento, e.IdContaContabilCredito, e.IdContaContabilDebito, e.VlLancamento, e.DsObjeto, e.DsNumObjeto }, "IX_dtLancamento_IdContaContabilCredito_IdContaContabilDebito_vlLancamento").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdContaContabilCredito, e.DtLancamento }, "IX_tbFinContasContabeisLancamentos_IdContaContabilCredito_dtLanc_inc_vlLanc_dsObjeto_cdOrgao_cdUnidade");

            entity.HasIndex(e => new { e.IdContaContabilCredito, e.NrSequencial, e.DtLancamento }, "IX_tbFinContasContabeisLancamentos_IdContaContabilCredito_nrSeq_dtLanc_inc_vlLanc_dsObj_cdOrg_cdUnid");

            entity.HasIndex(e => new { e.IdContaContabilDebito, e.NrSequencial, e.DtLancamento }, "IX_tbFinContasContabeisLancamentos_IdContaContabilDebito_nrSeq_dtLanc_inc_vlLanc_dsObj_cdOrg_cdUnid");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.DtLancamento, e.IdLancamento, e.NrSequencial, e.IdContaContabilCredito, e.IdContaContabilDebito }, "IX_tbFinContasContabeisLancamentos_IdEmp_nrAno_dtLanc_IdLanc_nrSeq_IdCCCred_IdCCDeb_inc_vlLanc_dsHist");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.DtLancamento }, "IX_tbFinContasContabeisLancamentos_IdEmpresa_nrAno_dtLancamento");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.DtLancamento, e.IdLancamento, e.IdContaContabilCredito, e.DsObjeto }, "IX_tbFinContasContabeisLancamentos_IdEmpresa_nrAno_dtLancamento_IdLancamento_IdContaContabilCredito_dsObjeto");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.DtLancamento, e.IdLancamento, e.IdContaContabilDebito, e.CdOrgao, e.CdUnidade, e.IdContaContabilCredito }, "IX_tbFinContasContabeisLancamentos_IdEmpresa_nrAno_dtLancamento_IdLancamento_IdContaContabilDebito_cdOrgao");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.DtLancamento, e.CdOrgao, e.CdUnidade, e.IdLancamento, e.IdContaContabilDebito }, "IX_tbFinContasContabeisLancamentos_IdEmpresa_nrAno_dtLancamento_cdOrgao_cdUnidade_IdLancamento");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.DtLancamento, e.CdOrgao, e.CdUnidade, e.IdLancamento, e.IdContaContabilCredito }, "IX_tbFinContasContabeisLancamentos_IdEmpresa_nrAno_dtLancamento_cdOrgao_cdUnidade_IdLancamento_IdContaContabilCredito");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.DtLancamento, e.CdOrgao, e.CdUnidade, e.IdLancamento, e.IdContaContabilDebito, e.IdContaContabilCredito }, "IX_tbFinContasContabeisLancamentos_IdEmpresa_nrAno_dtLancamento_cdOrgao_cdUnidade_IdLancamento_IdContaContabilDebito_IdContaCon");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.DtLancamento }, "IX_tbFinContasContabeisLancamentos_IdEmpresa_nrAno_dtLancamento_inc_nrSeq");

            entity.HasIndex(e => e.IdLancamento, "IX_tbFinContasContabeisLancamentos_IdLancamento");

            entity.HasIndex(e => new { e.CdEvento, e.IdLancamento, e.NrSequencial, e.NrAno, e.DtLancamento }, "IX_tbFinContasContabeisLancamentos_cdEvento_IdLancamento_nrSequencial_nrAno_dtLancamento");

            entity.HasIndex(e => new { e.DsSigla, e.DsObjeto, e.IdLancamento, e.DsNumObjeto, e.IdContaContabilCredito }, "IX_tbFinContasContabeisLancamentos_dsSigla_dsObj_IdLan_dsNumObj_IDccc");

            entity.HasIndex(e => new { e.DtLancamento, e.IdLancamento, e.CdEvento, e.NrSequencial, e.NrAno }, "IX_tbFinContasContabeisLancamentos_dtLancamento_IdLancamento_cdEvento_nrSequencial_nrAno");

            entity.HasIndex(e => new { e.NrAno, e.IdEmpresa, e.IdLancamento, e.IdContaContabilCredito, e.DsObjeto }, "IX_tbFinContasContabeisLancamentos_nrAno_IdEmpresa_IdContaContabilCredito_dsObjeto");

            entity.HasIndex(e => new { e.NrAno, e.DsObjeto, e.IdLancamento, e.IdContaContabilCredito, e.IdContaContabilDebito, e.IdEmpresa, e.VlLancamento, e.DtLancamento, e.DsNumObjeto, e.CdOrgao, e.CdUnidade }, "IX_tbFinContasContabeisLancamentos_nrAno_dsObjeto_IdLancamento_IdCContabilC_IdCContabilD_IdEmpresa_vlLanc_dtLanc_dsNumObj");

            entity.HasIndex(e => new { e.NrAno, e.DsOrigem }, "IX_tbFinContasContabeisLancamentos_nrAno_dsOrigem_inc_IdLanc_IdEmp_IdCCCredito_dtLanc_vlLanc");

            entity.HasIndex(e => new { e.NrAno, e.DsOrigem }, "IX_tbFinContasContabeisLancamentos_nrAno_dsOrigem_inc_IdLanc_IdEmp_IdCCDebito_dtLanc_vlLanc");

            entity.HasIndex(e => new { e.NrAno, e.IdTipoOperacaoFinanceira }, "IX_tbFinContasContabeisLancamentos_nrAno_idTipoOperacaoFinanceira");

            entity.HasIndex(e => new { e.NrAno, e.IdTipoOperacaoFinanceira }, "IX_tbFinContasContabeisLancamentos_nrAno_idTipoOperacaoFinanceira_inc_idLan_Idccd_Idccc_dtLan_vlLan_dsObj");

            entity.HasIndex(e => new { e.NrAno, e.NrSequencial }, "IX_tbFinContasContabeisLancamentos_nrAno_nrSequencia");

            entity.Property(e => e.CdEvento).HasColumnName("cdEvento");
            entity.Property(e => e.CdHistorico).HasColumnName("cdHistorico");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsEnderecoIp)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsEnderecoIP");
            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsNumObjeto).HasColumnName("dsNumObjeto");
            entity.Property(e => e.DsObjeto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("Empenho, RMS, Solicitação Adicional, Bloqueio de Programação")
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DsOrigem)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsOrigem");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtLancamento)
                .HasColumnType("datetime")
                .HasColumnName("dtLancamento");
            entity.Property(e => e.FlEstorno)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flEstorno");
            entity.Property(e => e.IdTipoOperacaoFinanceira).HasColumnName("idTipoOperacaoFinanceira");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrDocFinanceiro)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocFinanceiro");
            entity.Property(e => e.NrSequencial).HasColumnName("nrSequencial");
            entity.Property(e => e.VlLancamento)
                .HasColumnType("money")
                .HasColumnName("vlLancamento");
        });

        modelBuilder.Entity<TbFinContasContabeisLancamentosAnalisador>(entity =>
        {
            entity.HasKey(e => e.IdLancamentoAnalisador);

            entity.ToTable("tbFinContasContabeisLancamentosAnalisador");

            entity.Property(e => e.CdEvento).HasColumnName("cdEvento");
            entity.Property(e => e.CdHistorico).HasColumnName("cdHistorico");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsEnderecoIp)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsEnderecoIP");
            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsNumObjeto).HasColumnName("dsNumObjeto");
            entity.Property(e => e.DsObjeto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DsOrigem)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsOrigem");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtLancamento)
                .HasColumnType("datetime")
                .HasColumnName("dtLancamento");
            entity.Property(e => e.FlEstorno)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flEstorno");
            entity.Property(e => e.FlSituacao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("flSituacao");
            entity.Property(e => e.IdTipoOperacaoFinanceira).HasColumnName("idTipoOperacaoFinanceira");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrDocFinanceiro)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocFinanceiro");
            entity.Property(e => e.NrSequencial).HasColumnName("nrSequencial");
            entity.Property(e => e.VlLancamento)
                .HasColumnType("money")
                .HasColumnName("vlLancamento");

            entity.HasOne(d => d.CdHistoricoNavigation).WithMany(p => p.TbFinContasContabeisLancamentosAnalisadors)
                .HasForeignKey(d => d.CdHistorico)
                .HasConstraintName("FK_tbFinContasContabeisLancamentosAnalisador_tbFinHistoricosPadrao");

            entity.HasOne(d => d.IdContaContabilDebitoNavigation).WithMany(p => p.TbFinContasContabeisLancamentosAnalisadors)
                .HasForeignKey(d => d.IdContaContabilDebito)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbFinContasContabeisLancamentosAnalisador_tbFinContasContabeis");

            entity.HasOne(d => d.IdEmpresaNavigation).WithMany(p => p.TbFinContasContabeisLancamentosAnalisadors)
                .HasForeignKey(d => d.IdEmpresa)
                .HasConstraintName("FK_tbFinContasContabeisLancamentosAnalisador_tbGerEmpresasGoverno");

            entity.HasOne(d => d.IdTipoDocFinanceiroNavigation).WithMany(p => p.TbFinContasContabeisLancamentosAnalisadors)
                .HasForeignKey(d => d.IdTipoDocFinanceiro)
                .HasConstraintName("FK_tbFinContasContabeisLancamentosAnalisador_tbFinTiposDocumentoFinanceiro");

            entity.HasOne(d => d.IdTipoOperacaoFinanceiraNavigation).WithMany(p => p.TbFinContasContabeisLancamentosAnalisadors)
                .HasForeignKey(d => d.IdTipoOperacaoFinanceira)
                .HasConstraintName("FK_tbFinContasContabeisLancamentosAnalisador_tbFinTiposOperacoesFinanceiras");
        });

        modelBuilder.Entity<TbFinContasContabeisOrgaoUnidade>(entity =>
        {
            entity.HasKey(e => new { e.IdContaContabil, e.NrAno, e.CdOrgao, e.CdUnidade });

            entity.ToTable("tbFinContasContabeisOrgaoUnidade");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.VlSaldoInicial)
                .HasColumnType("money")
                .HasColumnName("vlSaldoInicial");

            entity.HasOne(d => d.IdContaContabilNavigation).WithMany(p => p.TbFinContasContabeisOrgaoUnidades)
                .HasForeignKey(d => d.IdContaContabil)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbFinContasContabeisOrgaoUnidade_tbFinContasContabeis");
        });

        modelBuilder.Entity<TbFinContasContabeisRepasse>(entity =>
        {
            entity.HasKey(e => e.IdContaContabilRepasse);

            entity.ToTable("tbFinContasContabeisRepasse");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<TbFinContrapartidasOpCredito>(entity =>
        {
            entity.HasKey(e => e.IdContrapartidaOpCredito).HasName("PK_tbFinContrapartidaOpCredito");

            entity.ToTable("tbFinContrapartidasOpCredito");

            entity.Property(e => e.DtOperacao)
                .HasColumnType("datetime")
                .HasColumnName("dtOperacao");
            entity.Property(e => e.VlOperacao)
                .HasColumnType("money")
                .HasColumnName("vlOperacao");

            entity.HasOne(d => d.IdFonteContraPartidaNavigation).WithMany(p => p.TbFinContrapartidasOpCreditoIdFonteContraPartidaNavigations)
                .HasForeignKey(d => d.IdFonteContraPartida)
                .HasConstraintName("FK_tbFinContrapartidasOpCredito_tbOrcFontes");

            entity.HasOne(d => d.IdFonteOpCreditoNavigation).WithMany(p => p.TbFinContrapartidasOpCreditoIdFonteOpCreditoNavigations)
                .HasForeignKey(d => d.IdFonteOpCredito)
                .HasConstraintName("FK_tbFinContrapartidasOpCredito_tbOrcFontes1");

            entity.HasOne(d => d.IdTipoOperacaoNavigation).WithMany(p => p.TbFinContrapartidasOpCreditos)
                .HasForeignKey(d => d.IdTipoOperacao)
                .HasConstraintName("FK_tbFinContrapartidasOpCredito_tbFinTipoContrapartidaOpCredito");
        });

        modelBuilder.Entity<TbFinCorrelacaoTipoMovimento>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbFinCorrelacaoTipoMovimento");

            entity.Property(e => e.IdTipoMovimentoGiig).HasColumnName("IdTipoMovimentoGIIG");
            entity.Property(e => e.IdTipoMovimentoTce).HasColumnName("IdTipoMovimentoTCE");
        });

        modelBuilder.Entity<TbFinCronogramaDesembolso>(entity =>
        {
            entity.HasKey(e => e.IdCronograma);

            entity.ToTable("tbFinCronogramaDesembolso");

            entity.Property(e => e.IdCronograma).HasColumnName("idCronograma");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdLeiAto).HasColumnName("idLeiAto");
            entity.Property(e => e.IdTipoOperacao).HasColumnName("idTipoOperacao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlOperacao)
                .HasColumnType("money")
                .HasColumnName("vlOperacao");

            entity.HasOne(d => d.IdTipoOperacaoNavigation).WithMany(p => p.TbFinCronogramaDesembolsos)
                .HasForeignKey(d => d.IdTipoOperacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbFinCronogramaDesembolso_tbFinTipoOperacaoProgramacaoFinanceira");
        });

        modelBuilder.Entity<TbFinDepositoJudicial>(entity =>
        {
            entity.HasKey(e => e.IdDeposito);

            entity.ToTable("tbFinDepositoJudicial");

            entity.Property(e => e.IdDeposito).HasColumnName("idDeposito");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsTipoContaPessoa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoContaPessoa");
            entity.Property(e => e.DsTipoPessoa)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoPessoa");
            entity.Property(e => e.DtDeposito)
                .HasColumnType("datetime")
                .HasColumnName("dtDeposito");
            entity.Property(e => e.IdAgencia).HasColumnName("idAgencia");
            entity.Property(e => e.IdCctransf).HasColumnName("idCCTransf");
            entity.Property(e => e.IdDepositoJudicial)
                .HasMaxLength(18)
                .IsUnicode(false)
                .HasColumnName("idDepositoJudicial");
            entity.Property(e => e.IdLiqDocto).HasColumnName("idLiqDocto");
            entity.Property(e => e.NmCc)
                .HasMaxLength(254)
                .IsUnicode(false)
                .HasColumnName("nmCC");
            entity.Property(e => e.NrCnpjcpf)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrCNPJCPF");
            entity.Property(e => e.NrCodigoBarrasDj)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrCodigoBarrasDJ");
            entity.Property(e => e.VlDeposito)
                .HasColumnType("money")
                .HasColumnName("vlDeposito");
        });

        modelBuilder.Entity<TbFinDiarioTesourariaContaFonte>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbFinDiarioTesourariaContaFonte");

            entity.HasIndex(e => e.IdLancamentoDiario, "IX_tbFinDiarioTesourariaContaFonte_IdLancamentoDiario");

            entity.Property(e => e.Idccfonte).HasColumnName("IDCCFonte");
        });

        modelBuilder.Entity<TbFinDiarioTesourarium>(entity =>
        {
            entity.HasKey(e => e.IdLancamentoDiario);

            entity.ToTable("tbFinDiarioTesouraria");

            entity.HasIndex(e => new { e.IdEmpresa, e.IdLancamentoDiario, e.NrAno, e.IdLancamento, e.NrSequencia }, "IX_tbFinDiarioTesouraria_IdEmpresa_IdLancamentoDiario_nrAno_IdLancamento_nrSequencia");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.IdLancamento, e.IdLancamentoDiario, e.NrSequencia }, "IX_tbFinDiarioTesouraria_IdEmpresa_nrAno_IdLancamento_IdLancamentoDiario");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.TpLancamento, e.FlCaixa }, "IX_tbFinDiarioTesouraria_IdEmpresa_nrAno_tpLancamento_flCaixa");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.TpOperacao, e.FlCaixa }, "IX_tbFinDiarioTesouraria_IdEmpresa_nrAno_tpOperacao_flCaixa");

            entity.HasIndex(e => e.IdLancamento, "IX_tbFinDiarioTesouraria_IdLancamento");

            entity.HasIndex(e => new { e.NrAno, e.IdEmpresa, e.DtLancamento, e.IdLancamentoDiario, e.IdLancamento }, "IX_tbFinDiarioTesouraria_nrAno_IdEmpresa_dtLancamento_IdLancamentoDiario_IdLancamento");

            entity.HasIndex(e => new { e.NrAno, e.NrSequencia }, "IX_tbFinDiarioTesouraria_nrAno_nrSequencia");

            entity.HasIndex(e => new { e.NrAno, e.NrSequencia }, "IX_tbFinDiarioTesouraria_nrAno_nrSequencia2");

            entity.HasIndex(e => new { e.TpOperacao, e.IdLancamento }, "IX_tbFinDiarioTesouraria_tpOperacao_IdLancamento");

            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DtLancamento)
                .HasColumnType("datetime")
                .HasColumnName("dtLancamento");
            entity.Property(e => e.FlCaixa).HasColumnName("flCaixa");
            entity.Property(e => e.IdCc).HasColumnName("IdCC");
            entity.Property(e => e.IdTipoOperacaoFinanceira).HasColumnName("idTipoOperacaoFinanceira");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.TpLancamento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpLancamento");
            entity.Property(e => e.TpOperacao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpOperacao");
            entity.Property(e => e.VlLancamento)
                .HasColumnType("money")
                .HasColumnName("vlLancamento");

            entity.HasOne(d => d.IdContaContabilNavigation).WithMany(p => p.TbFinDiarioTesouraria)
                .HasForeignKey(d => d.IdContaContabil)
                .HasConstraintName("FK_tbFinDiarioTesouraria_tbFinContasContabeis");

            entity.HasOne(d => d.IdLancamentoNavigation).WithMany(p => p.TbFinDiarioTesouraria)
                .HasForeignKey(d => d.IdLancamento)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_tbFinDiarioTesouraria_tbFinContasContabeisLancamentos");

            entity.HasOne(d => d.IdTipoOperacaoFinanceiraNavigation).WithMany(p => p.TbFinDiarioTesouraria)
                .HasForeignKey(d => d.IdTipoOperacaoFinanceira)
                .HasConstraintName("FK_tbFinDiarioTesouraria_tbFinTiposOperacoesFinanceiras");
        });

        modelBuilder.Entity<TbFinDividaFundadaContasContabei>(entity =>
        {
            entity.HasKey(e => e.IdDividaContaContabel).HasName("PK_tbFinDividaFundadaContasContabeis_1");

            entity.ToTable("tbFinDividaFundadaContasContabeis");

            entity.Property(e => e.CdContacontabil)
                .HasMaxLength(21)
                .IsUnicode(false)
                .HasColumnName("cdContacontabil");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.NrExercicio).HasColumnName("nrExercicio");
        });

        modelBuilder.Entity<TbFinDividaFundadaMovimento>(entity =>
        {
            entity.HasKey(e => e.IdMovimento);

            entity.ToTable("tbFinDividaFundadaMovimentos");

            entity.Property(e => e.DsMotivo)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DsOrigem)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsOrigem");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.IdObjetoOrigem).HasColumnName("idObjetoOrigem");
            entity.Property(e => e.NmOrigem)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nmOrigem");
            entity.Property(e => e.NrAnoMovimento).HasColumnName("nrAnoMovimento");
            entity.Property(e => e.NrMovimento).HasColumnName("nrMovimento");
            entity.Property(e => e.NrParcelas).HasColumnName("nrParcelas");
            entity.Property(e => e.TpMovimento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpMovimento");
            entity.Property(e => e.TpOperacao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpOperacao");
            entity.Property(e => e.VlMovimento)
                .HasColumnType("money")
                .HasColumnName("vlMovimento");
        });

        modelBuilder.Entity<TbFinDividaFundadum>(entity =>
        {
            entity.HasKey(e => e.IdDividaFundada);

            entity.ToTable("tbFinDividaFundada");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdContaContabilAmortizacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilAmortizacao");
            entity.Property(e => e.CdContaContabilEmprestimo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilEmprestimo");
            entity.Property(e => e.CdContaContabilLongoPrazo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilLongoPrazo");
            entity.Property(e => e.CdContaContabilReajuste)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilReajuste");
            entity.Property(e => e.CdTipoConta).HasColumnName("cdTipoConta");
            entity.Property(e => e.DsContrato)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsContrato");
            entity.Property(e => e.DtAssinaturaContrato)
                .HasColumnType("datetime")
                .HasColumnName("dtAssinaturaContrato");
            entity.Property(e => e.DtLeiAutorizatoria)
                .HasColumnType("datetime")
                .HasColumnName("dtLeiAutorizatoria");
            entity.Property(e => e.DtOficioStn)
                .HasColumnType("datetime")
                .HasColumnName("dtOficioSTN");
            entity.Property(e => e.IdLeiAtoAutorizatoria).HasColumnName("idLeiAtoAutorizatoria");
            entity.Property(e => e.NrAnoDivida).HasColumnName("nrAnoDivida");
            entity.Property(e => e.NrContratoDivida)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrContratoDivida");
            entity.Property(e => e.NrDivida).HasColumnName("nrDivida");
            entity.Property(e => e.NrLeiAutorizatoria)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrLeiAutorizatoria");
            entity.Property(e => e.NrOficioStn)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrOficioSTN");
            entity.Property(e => e.NrQtdParcelas).HasColumnName("nrQtdParcelas");
            entity.Property(e => e.NrQtdParcelasPagas).HasColumnName("nrQtdParcelasPagas");
            entity.Property(e => e.VlDivida)
                .HasColumnType("money")
                .HasColumnName("vlDivida");

            entity.HasOne(d => d.IdClasseOperacaoCreditoNavigation).WithMany(p => p.TbFinDividaFundada)
                .HasForeignKey(d => d.IdClasseOperacaoCredito)
                .HasConstraintName("FK_tbFinDividaFundada_tbFinClassesOperacoesCredito");
        });

        modelBuilder.Entity<TbFinEstornoDetalheOrdemCredito>(entity =>
        {
            entity.HasKey(e => e.IdEstornoDetalhe);

            entity.ToTable("tbFinEstornoDetalheOrdemCredito");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtEstorno)
                .HasColumnType("datetime")
                .HasColumnName("dtEstorno");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlEstorno)
                .HasColumnType("money")
                .HasColumnName("vlEstorno");
            entity.Property(e => e.VlRetencao)
                .HasColumnType("money")
                .HasColumnName("vlRetencao");
        });

        modelBuilder.Entity<TbFinEventosContaContabei>(entity =>
        {
            entity.HasKey(e => e.IdEventoContaContabil);

            entity.ToTable("tbFinEventosContaContabeis");

            entity.HasIndex(e => new { e.NrExercicio, e.IdEmpresa, e.CdEvento }, "IX_tbFinEventosContaContabeis_nrExercicio_IdEmpresa_cdEvento_inc_nrSequencia");

            entity.Property(e => e.IdEventoContaContabil).HasColumnName("idEventoContaContabil");
            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdEvento).HasColumnName("cdEvento");
            entity.Property(e => e.IdTipoFinanceiroPatrimonial).HasColumnName("idTipoFinanceiroPatrimonial");
            entity.Property(e => e.IdTipoMovimento).HasColumnName("idTipoMovimento");
            entity.Property(e => e.IdTipoVariacao).HasColumnName("idTipoVariacao");
            entity.Property(e => e.NrExercicio).HasColumnName("nrExercicio");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.TpNaturezaSaldo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpNaturezaSaldo");
        });

        modelBuilder.Entity<TbFinEventosContabei>(entity =>
        {
            entity.HasKey(e => new { e.IdEmpresa, e.CdEvento });

            entity.ToTable("tbFinEventosContabeis");

            entity.HasIndex(e => new { e.IdEmpresa, e.CdEvento }, "IX_tbFinEventosContabeis_IdEmpresa_cdEvento");

            entity.HasIndex(e => new { e.CdEvento, e.CdTc }, "IX_tbFinEventosContabeis_cdEvento_cdTc");

            entity.Property(e => e.CdEvento).HasColumnName("cdEvento");
            entity.Property(e => e.CdEventoEstorno).HasColumnName("cdEventoEstorno");
            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.DsEvento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsEvento");
            entity.Property(e => e.FlDesativado).HasColumnName("flDesativado");
            entity.Property(e => e.FlDividaFundada).HasColumnName("flDividaFundada");
            entity.Property(e => e.FlEstorno).HasColumnName("flEstorno");
            entity.Property(e => e.FlLancaManual).HasColumnName("flLancaManual");
        });

        modelBuilder.Entity<TbFinExtratosBancario>(entity =>
        {
            entity.HasKey(e => e.IdExtrato);

            entity.ToTable("tbFinExtratosBancarios");

            entity.Property(e => e.DsHistorico)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtExtrato)
                .HasColumnType("datetime")
                .HasColumnName("dtExtrato");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdCc).HasColumnName("IdCC");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.VlExtrato)
                .HasColumnType("money")
                .HasColumnName("vlExtrato");

            entity.HasMany(d => d.IdLancamentos).WithMany(p => p.IdExtratos)
                .UsingEntity<Dictionary<string, object>>(
                    "TbFinExtratosBancariosContaContabilLanc",
                    r => r.HasOne<TbFinContasContabeisLancamento>().WithMany()
                        .HasForeignKey("IdLancamento")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbFinExtratosBancariosContaContabilLanc_tbFinContasContabeisLancamentos"),
                    l => l.HasOne<TbFinExtratosBancario>().WithMany()
                        .HasForeignKey("IdExtrato")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbFinExtratosBancariosContaContabilLanc_tbFinExtratosBancarios"),
                    j =>
                    {
                        j.HasKey("IdExtrato", "IdLancamento");
                        j.ToTable("tbFinExtratosBancariosContaContabilLanc");
                    });
        });

        modelBuilder.Entity<TbFinFluxosFinanDetalhe>(entity =>
        {
            entity.HasKey(e => e.IdDetalhe);

            entity.ToTable("tbFinFluxosFinanDetalhes");

            entity.Property(e => e.DsLoginExclusao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginExclusao");
            entity.Property(e => e.DsMotivoExclusao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsMotivoExclusao");
            entity.Property(e => e.DtExclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtExclusao");
            entity.Property(e => e.FlExcluido).HasColumnName("flExcluido");
            entity.Property(e => e.NrCompAno).HasColumnName("nrCompAno");
            entity.Property(e => e.NrCompMes).HasColumnName("nrCompMes");
            entity.Property(e => e.NrParcela).HasColumnName("nrParcela");
            entity.Property(e => e.VlDetalhe)
                .HasColumnType("money")
                .HasColumnName("vlDetalhe");

            entity.HasOne(d => d.IdFluxoNavigation).WithMany(p => p.TbFinFluxosFinanDetalhes)
                .HasForeignKey(d => d.IdFluxo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbFinFluxosFinanDetalhes_tbFinFluxosFinanceiros");
        });

        modelBuilder.Entity<TbFinFluxosFinanceiro>(entity =>
        {
            entity.HasKey(e => e.IdFluxo);

            entity.ToTable("tbFinFluxosFinanceiros");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginExclusao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginExclusao");
            entity.Property(e => e.DsMotivoExclusao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsMotivoExclusao");
            entity.Property(e => e.DsObjeto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DsTipoLancamento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoLancamento");
            entity.Property(e => e.DsTipoOperacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoOperacao");
            entity.Property(e => e.DtExclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtExclusao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtLancamento)
                .HasColumnType("datetime")
                .HasColumnName("dtLancamento");
            entity.Property(e => e.FlExcluido).HasColumnName("flExcluido");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrParcelas).HasColumnName("nrParcelas");
            entity.Property(e => e.VlMovimento)
                .HasColumnType("money")
                .HasColumnName("vlMovimento");
        });

        modelBuilder.Entity<TbFinFontesMovimentacao>(entity =>
        {
            entity.HasKey(e => e.IdMovimento);

            entity.ToTable("tbFinFontesMovimentacao");

            entity.HasIndex(e => new { e.IdFonte, e.DsObjeto, e.IdObjeto, e.DsTipo }, "IX_IdFonte_dsObjeto_IdObjeto")
                .IsDescending(false, false, true, false)
                .HasFillFactor(90);

            entity.HasIndex(e => new { e.IdFonte, e.DsTipo, e.VlMovimento }, "IX_IdFonte_dsTipo_vlMovimento").HasFillFactor(90);

            entity.HasIndex(e => new { e.DsObjeto, e.IdObjeto }, "IX_tbFinFontesMovimentacao_dsObjeto_IdObjeto");

            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObjeto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.VlMovimento)
                .HasColumnType("money")
                .HasColumnName("vlMovimento");
        });

        modelBuilder.Entity<TbFinFormasLancamento>(entity =>
        {
            entity.HasKey(e => e.IdFormaLancamento).HasName("PK_tbFinFormaLancamento");

            entity.ToTable("tbFinFormasLancamentos");

            entity.Property(e => e.CdFormaLancamento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFormaLancamento");
            entity.Property(e => e.DsFormaLancamento)
                .HasMaxLength(55)
                .IsUnicode(false)
                .HasColumnName("dsFormaLancamento");
            entity.Property(e => e.FlusaRemessa).HasColumnName("flusaRemessa");
        });

        modelBuilder.Entity<TbFinHistoricosPadrao>(entity =>
        {
            entity.HasKey(e => e.CdHistorico);

            entity.ToTable("tbFinHistoricosPadrao");

            entity.Property(e => e.CdHistorico)
                .ValueGeneratedNever()
                .HasColumnName("cdHistorico");
            entity.Property(e => e.CdEvento).HasColumnName("cdEvento");
            entity.Property(e => e.DsHistorico)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.FlDesativado).HasColumnName("flDesativado");
        });

        modelBuilder.Entity<TbFinInterferenciaFinanceira>(entity =>
        {
            entity.HasKey(e => e.IdInterferencia);

            entity.ToTable("tbFinInterferenciaFinanceira");

            entity.Property(e => e.DtInterferencia)
                .HasColumnType("datetime")
                .HasColumnName("dtInterferencia");
            entity.Property(e => e.IdCcempresaInterferencia).HasColumnName("IdCCEmpresaInterferencia");
            entity.Property(e => e.NrAnoTransferencia).HasColumnName("nrAnoTransferencia");
            entity.Property(e => e.NrTransferencia).HasColumnName("nrTransferencia");
            entity.Property(e => e.TpInterferencia)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpInterferencia");
            entity.Property(e => e.TpNaturezaTransferencia).HasColumnName("tpNaturezaTransferencia");
            entity.Property(e => e.TpOperacao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpOperacao");
            entity.Property(e => e.VlInterferencia)
                .HasColumnType("money")
                .HasColumnName("vlInterferencia");

            entity.HasOne(d => d.IdLancamentoNavigation).WithMany(p => p.TbFinInterferenciaFinanceiras)
                .HasForeignKey(d => d.IdLancamento)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_tbFinInterferenciaFinanceira_tbFinContasContabeisLancamentos1");
        });

        modelBuilder.Entity<TbFinLancamentosAbertura>(entity =>
        {
            entity.HasKey(e => e.IdLancamento);

            entity.ToTable("tbFinLancamentosAbertura");

            entity.Property(e => e.IdLancamento).HasColumnName("idLancamento");
            entity.Property(e => e.CdEvento).HasColumnName("cdEvento");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsErro)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("dsErro");
            entity.Property(e => e.DsHistorico)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObjeto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("Nome do Objeto, ContaContabil,  Contrato, Divida Fundada , etc")
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DsOperacao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasComment("Indica a operação a ser feita no lançamento de abertura")
                .HasColumnName("dsOperacao");
            entity.Property(e => e.DtLancamento)
                .HasColumnType("datetime")
                .HasColumnName("dtLancamento");
            entity.Property(e => e.FlProcessado)
                .HasComment("Indica se ja processou o lançamento de abertura")
                .HasColumnName("flProcessado");
            entity.Property(e => e.IdEmpresa).HasColumnName("idEmpresa");
            entity.Property(e => e.IdObjeto)
                .HasComment("Identificador do Objeto")
                .HasColumnName("idObjeto");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrEnderecoIp)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrEnderecoIP");
            entity.Property(e => e.VlLancamento)
                .HasColumnType("money")
                .HasColumnName("vlLancamento");
        });

        modelBuilder.Entity<TbFinLancamentosAberturaEncerramento>(entity =>
        {
            entity.HasKey(e => e.IdLancamento);

            entity.ToTable("tbFinLancamentosAberturaEncerramento");

            entity.Property(e => e.CdContaContabiCredito)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabiCredito");
            entity.Property(e => e.CdContaContabilDebito)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilDebito");
            entity.Property(e => e.CdEvento).HasColumnName("cdEvento");
            entity.Property(e => e.CdHistorico).HasColumnName("cdHistorico");
            entity.Property(e => e.DsFuncaoValor)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("dsFuncaoValor");
            entity.Property(e => e.DsLancamento)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("dsLancamento");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsOperacaoEspecial)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsOperacaoEspecial");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.DsValorOrigem)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsValorOrigem");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrSeqEvento).HasColumnName("nrSeqEvento");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.TpLancamento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpLancamento");
        });

        modelBuilder.Entity<TbFinLancamentosContabeisFonte>(entity =>
        {
            entity.HasKey(e => e.IdLancamentoFonte);

            entity.ToTable("tbFinLancamentosContabeisFontes");
        });

        modelBuilder.Entity<TbFinLancamentosEncerramento>(entity =>
        {
            entity.HasKey(e => e.IdLancamento);

            entity.ToTable("tbFinLancamentosEncerramento");

            entity.Property(e => e.CdContaContabiCredito)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabiCredito");
            entity.Property(e => e.CdContaContabilDebito)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilDebito");
            entity.Property(e => e.CdEvento).HasColumnName("cdEvento");
            entity.Property(e => e.DsLancamento)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsLancamento");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsOperacaoEspecial)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsOperacaoEspecial");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.DsValorOrigem)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsValorOrigem");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrSeqEvento).HasColumnName("nrSeqEvento");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.TpLancamento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpLancamento");
        });

        modelBuilder.Entity<TbFinLancamentosPartidaDobrada>(entity =>
        {
            entity.HasKey(e => new { e.IdLancamento, e.TpLancamento, e.IdContaContabil });

            entity.ToTable("tbFinLancamentosPartidaDobradas");

            entity.HasIndex(e => new { e.IdContaContabil, e.IdTipoMovimento, e.TpLancamento, e.IdLancamento }, "IX_tbFinLancamentosPartidaDobradas_IdContaContabil_idTipoMovimento_tpLancamento_IdLancamento");

            entity.HasIndex(e => new { e.IdLancamento, e.IdContaContabil, e.TpLancamento, e.IdTipoMovimento }, "IX_tbFinLancamentosPartidaDobradas_IdLancamento_IdContaContabil_tpLancamento_idTipoMovimento");

            entity.HasIndex(e => new { e.IdLancamento, e.IdTipoMovimento }, "IX_tbFinLancamentosPartidaDobradas_IdLancamento_idTipoMovimento");

            entity.HasIndex(e => new { e.IdTipoMovimento, e.NrSequenciaAnual, e.IdContaContabil, e.IdLancamento, e.IdTipoFinanceiroPatrimonial, e.TpLancamento, e.IdTipoVariacao }, "IX_tbFinLancamentosPartidaDobradas_idTipoMovimento_nrSequenciaAnual_IdContaContabil_IdLancamento_idTipoFinanceiroPat");

            entity.HasIndex(e => new { e.TpLancamento, e.IdLancamento, e.IdContaContabil, e.IdTipoMovimento }, "IX_tbFinLancamentosPartidaDobradas_tpLancamento_IdLancamento_IdContaContabil_idTipoMovimento");

            entity.HasIndex(e => new { e.TpLancamento, e.IdTipoMovimento, e.IdLancamento, e.IdContaContabil }, "IX_tbFinLancamentosPartidaDobradas_tpLancamento_idTipoMovimento_IdLancamento_IdContaContabil");

            entity.Property(e => e.TpLancamento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpLancamento");
            entity.Property(e => e.IdTipoFinanceiroPatrimonial).HasColumnName("idTipoFinanceiroPatrimonial");
            entity.Property(e => e.IdTipoMovimento).HasColumnName("idTipoMovimento");
            entity.Property(e => e.IdTipoVariacao).HasColumnName("idTipoVariacao");
            entity.Property(e => e.NrSequenciaAnual).HasColumnName("nrSequenciaAnual");

            entity.HasOne(d => d.IdLancamentoNavigation).WithMany(p => p.TbFinLancamentosPartidaDobrada)
                .HasForeignKey(d => d.IdLancamento)
                .HasConstraintName("FK_tbFinLancamentosPartidaDobradas_tbFinContasContabeisLancamentos");

            entity.HasOne(d => d.IdTipoFinanceiroPatrimonialNavigation).WithMany(p => p.TbFinLancamentosPartidaDobrada)
                .HasForeignKey(d => d.IdTipoFinanceiroPatrimonial)
                .HasConstraintName("FK_tbFinLancamentosPartidaDobradas_tbFinTipoFinanceiroPatrimonial");

            entity.HasOne(d => d.IdTipoMovimentoNavigation).WithMany(p => p.TbFinLancamentosPartidaDobrada)
                .HasForeignKey(d => d.IdTipoMovimento)
                .HasConstraintName("FK_tbFinLancamentosPartidaDobradas_tbFinTipoMovimentoContabil");

            entity.HasOne(d => d.IdTipoVariacaoNavigation).WithMany(p => p.TbFinLancamentosPartidaDobrada)
                .HasForeignKey(d => d.IdTipoVariacao)
                .HasConstraintName("FK_tbFinLancamentosPartidaDobradas_tbFinTipoVariacaoQualitativa");
        });

        modelBuilder.Entity<TbFinLancamentosPermutaDividaFundadum>(entity =>
        {
            entity.HasKey(e => e.IdPermuta);

            entity.ToTable("tbFinLancamentosPermutaDividaFundada");

            entity.HasIndex(e => e.IdLancamento, "IX_tbFinLancamentosPermutaDividaFundada_IdLancamento_inc_IdPermuta");

            entity.Property(e => e.DtOperacao)
                .HasColumnType("datetime")
                .HasColumnName("dtOperacao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrOperacao).HasColumnName("nrOperacao");
            entity.Property(e => e.TpOperacao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpOperacao");
            entity.Property(e => e.VlOperacao)
                .HasColumnType("money")
                .HasColumnName("vlOperacao");

            entity.HasOne(d => d.IdContaContabilNavigation).WithMany(p => p.TbFinLancamentosPermutaDividaFundada)
                .HasForeignKey(d => d.IdContaContabil)
                .HasConstraintName("FK_tbFinLancamentosPermutaDividaFundada_tbFinContasContabeis");

            entity.HasOne(d => d.IdDividaFundadaNavigation).WithMany(p => p.TbFinLancamentosPermutaDividaFundada)
                .HasForeignKey(d => d.IdDividaFundada)
                .HasConstraintName("FK_tbFinLancamentosPermutaDividaFundada_tbFinDividaFundada");

            entity.HasOne(d => d.IdTipoPermutaNavigation).WithMany(p => p.TbFinLancamentosPermutaDividaFundada)
                .HasForeignKey(d => d.IdTipoPermuta)
                .HasConstraintName("FK_tbFinLancamentosPermutaDividaFundada_tbFinTipoPermutaStatusDivida");
        });

        modelBuilder.Entity<TbFinListaContaCorrenteOc>(entity =>
        {
            entity.HasKey(e => e.IdLista);

            entity.ToTable("tbFinListaContaCorrenteOC");

            entity.Property(e => e.IdLista).HasColumnName("idLista");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsTipoContaPessoa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoContaPessoa");
            entity.Property(e => e.DsTipoPessoa)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoPessoa");
            entity.Property(e => e.DtTransferencia)
                .HasColumnType("datetime")
                .HasColumnName("dtTransferencia");
            entity.Property(e => e.IdAgencia).HasColumnName("idAgencia");
            entity.Property(e => e.IdCctransf).HasColumnName("idCCTransf");
            entity.Property(e => e.NmCc)
                .HasMaxLength(254)
                .IsUnicode(false)
                .HasColumnName("nmCC");
            entity.Property(e => e.NrCc)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrCC");
            entity.Property(e => e.NrCnpjcpf)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrCNPJCPF");
            entity.Property(e => e.NrDv)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nrDv");
            entity.Property(e => e.VlTranferencia)
                .HasColumnType("money")
                .HasColumnName("vlTranferencia");
        });

        modelBuilder.Entity<TbFinNumeraRealizavelDeposito>(entity =>
        {
            entity.HasKey(e => e.IdNumeracao);

            entity.ToTable("tbFinNumeraRealizavelDeposito");

            entity.HasIndex(e => new { e.IdEmpresa, e.TpNumeracao, e.NrAnoNumeracao, e.NmObjeto }, "IX_IdEmpresa_tpNumeracao");

            entity.HasIndex(e => new { e.NmObjeto, e.IdObjeto }, "IX_nmObjeto");

            entity.HasIndex(e => new { e.TpNumeracao, e.NrAnoNumeracao, e.NmObjeto }, "IX_tbFinNumeraRealizavelDeposito_tpNumeracao_nrAnoNumeracao_nmObjeto_inc_nrNumeracao");

            entity.HasIndex(e => new { e.IdEmpresa, e.TpNumeracao, e.NrAnoNumeracao, e.NmObjeto, e.DtNumeracao }, "IX_tpNumeracao");

            entity.Property(e => e.IdNumeracao).HasColumnName("idNumeracao");
            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(19)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.DtNumeracao)
                .HasColumnType("datetime")
                .HasColumnName("dtNumeracao");
            entity.Property(e => e.IdObjeto).HasColumnName("idObjeto");
            entity.Property(e => e.IdTipoMovimento).HasColumnName("idTipoMovimento");
            entity.Property(e => e.NmObjeto)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("nmObjeto");
            entity.Property(e => e.NrAnoNumeracao).HasColumnName("nrAnoNumeracao");
            entity.Property(e => e.NrNumeracao).HasColumnName("nrNumeracao");
            entity.Property(e => e.TpNumeracao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpNumeracao");

            entity.HasOne(d => d.IdTipoMovimentoNavigation).WithMany(p => p.TbFinNumeraRealizavelDepositos)
                .HasForeignKey(d => d.IdTipoMovimento)
                .HasConstraintName("FK_tbFinNumeraRealizavelDeposito_tbFinTipoMovtoNumeraRealizavelDeposito");
        });

        modelBuilder.Entity<TbFinNumeracoesBalancetesContabil>(entity =>
        {
            entity.HasKey(e => e.IdLanctoNumerado);

            entity.ToTable("tbFinNumeracoesBalancetesContabil");

            entity.Property(e => e.IdLanctoNumerado).HasColumnName("idLanctoNumerado");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdOrgaoSaldo)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgaoSaldo");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.CdUnidadeSaldo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidadeSaldo");
            entity.Property(e => e.DtLancamento)
                .HasColumnType("datetime")
                .HasColumnName("dtLancamento");
            entity.Property(e => e.IdCc).HasColumnName("IdCC");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrLancamento).HasColumnName("nrLancamento");
            entity.Property(e => e.TpLancamento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpLancamento");
            entity.Property(e => e.VlLancamento)
                .HasColumnType("money")
                .HasColumnName("vlLancamento");
        });

        modelBuilder.Entity<TbFinOrdemCreditoMovimento>(entity =>
        {
            entity.HasKey(e => e.IdMovimento);

            entity.ToTable("tbFinOrdemCreditoMovimento");

            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObjeto)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.FlSituacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("flSituacao");
            entity.Property(e => e.IdObjeto).HasColumnName("idObjeto");
        });

        modelBuilder.Entity<TbFinOrdensCredito>(entity =>
        {
            entity.HasKey(e => e.IdOrdemCredito);

            entity.ToTable("tbFinOrdensCreditos");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdOrgaoTranferencia)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgaoTranferencia");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.CdUnidadeTranferencia)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidadeTranferencia");
            entity.Property(e => e.DsFonte)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("dsFonte");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginRpt)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginRPT");
            entity.Property(e => e.DsObservacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsObservacao");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipo");
            entity.Property(e => e.DsTipoTransferencia)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipoTransferencia");
            entity.Property(e => e.Dsjustificativa)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsjustificativa");
            entity.Property(e => e.DsloginExclusao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsloginExclusao");
            entity.Property(e => e.DtExclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtExclusao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtInclusaoRpt)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusaoRPT");
            entity.Property(e => e.DtOrdemCredito)
                .HasColumnType("datetime")
                .HasColumnName("dtOrdemCredito");
            entity.Property(e => e.DtReferencia)
                .HasColumnType("datetime")
                .HasColumnName("dtReferencia");
            entity.Property(e => e.IdCcarrecadadora).HasColumnName("IdCCArrecadadora");
            entity.Property(e => e.IdCcempresa).HasColumnName("IdCCEmpresa");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrSeqExclusao).HasColumnName("nrSeqExclusao");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.NrSequenciaRe).HasColumnName("nrSequenciaRE");
            entity.Property(e => e.NrSequenciaRpt).HasColumnName("nrSequenciaRPT");
            entity.Property(e => e.VlOrdemCredito)
                .HasColumnType("money")
                .HasColumnName("vlOrdemCredito");
            entity.Property(e => e.VlRetencoes)
                .HasColumnType("money")
                .HasColumnName("vlRetencoes");

            entity.HasOne(d => d.IdCcempresaNavigation).WithMany(p => p.TbFinOrdensCreditos)
                .HasForeignKey(d => d.IdCcempresa)
                .HasConstraintName("FK_tbFinOrdensCreditos_tbGerContasCorrente");
        });

        modelBuilder.Entity<TbFinOrdensCreditoNaoProcessada>(entity =>
        {
            entity.HasKey(e => e.IdDetalhe);

            entity.ToTable("tbFinOrdensCreditoNaoProcessadas");

            entity.Property(e => e.IdDetalhe).ValueGeneratedNever();
            entity.Property(e => e.FlGera)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flGera");
        });

        modelBuilder.Entity<TbFinOrdensCreditosDetalhe>(entity =>
        {
            entity.HasKey(e => e.IdDetalhe);

            entity.ToTable("tbFinOrdensCreditosDetalhes");

            entity.HasIndex(e => new { e.IdLiquidacaoDocto, e.IdOrdemCredito, e.IdConsignacao, e.VlDetalhe }, "IX_tbFinOrdensCreditosDetalhes")
                .IsDescending(false, true, false, false)
                .HasFillFactor(90);

            entity.HasIndex(e => new { e.IdOrdemPagamento, e.DsSituacao }, "IX_tbFinOrdensCreditosDetalhes_IdOrdemPagamento_dsSituacao");

            entity.Property(e => e.CdFormaLancamento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFormaLancamento");
            entity.Property(e => e.CdOcorrencia)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdOcorrencia");
            entity.Property(e => e.CdTipoServico)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdTipoServico");
            entity.Property(e => e.DsOcorrencia)
                .IsUnicode(false)
                .HasColumnName("dsOcorrencia");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.Dsjustificativa)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsjustificativa");
            entity.Property(e => e.DsloginExclusao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsloginExclusao");
            entity.Property(e => e.DtExclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtExclusao");
            entity.Property(e => e.IdCcdestino).HasColumnName("IdCCDestino");
            entity.Property(e => e.IdTipoIndicadorPagamento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NrIndicadorPagamento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nrIndicadorPagamento");
            entity.Property(e => e.NrOrdemBancaria).HasColumnName("nrOrdemBancaria");
            entity.Property(e => e.NrSeqExclusao).HasColumnName("nrSeqExclusao");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlDetalhe)
                .HasColumnType("money")
                .HasColumnName("vlDetalhe");
            entity.Property(e => e.VlRetencoes)
                .HasColumnType("money")
                .HasColumnName("vlRetencoes");

            entity.HasOne(d => d.IdCcdestinoNavigation).WithMany(p => p.TbFinOrdensCreditosDetalhes)
                .HasForeignKey(d => d.IdCcdestino)
                .HasConstraintName("FK_tbFinOrdensCreditosDetalhes_tbGerContasCorrente");

            entity.HasOne(d => d.IdOrdemCreditoNavigation).WithMany(p => p.TbFinOrdensCreditosDetalhes)
                .HasForeignKey(d => d.IdOrdemCredito)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbFinOrdensCreditosDetalhes_tbFinOrdensCreditos");

            entity.HasOne(d => d.IdOrdemPagamentoNavigation).WithMany(p => p.TbFinOrdensCreditosDetalhes)
                .HasForeignKey(d => d.IdOrdemPagamento)
                .HasConstraintName("FK_tbFinOrdensCreditosDetalhes_tbDspOrdensPagamento");
        });

        modelBuilder.Entity<TbFinOrgaosConfiguracaoRepass>(entity =>
        {
            entity.HasKey(e => e.IdRepasse);

            entity.ToTable("tbFinOrgaosConfiguracaoRepasses");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdContaContabilFavorecido)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilFavorecido");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<TbFinPadraoContaCorrente>(entity =>
        {
            entity.HasKey(e => e.IdPadraoContaCorrente).HasName("PK_tbFinPadraoContaCorrenteContaContabil");

            entity.ToTable("tbFinPadraoContaCorrente");

            entity.Property(e => e.CdPadraoContaCorrente)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdPadraoContaCorrente");
            entity.Property(e => e.DsComposicao)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("dsComposicao");
            entity.Property(e => e.DsPadraoContaCorrente)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("dsPadraoContaCorrente");
        });

        modelBuilder.Entity<TbFinPadraoContaCorrenteContaContabil>(entity =>
        {
            entity.HasKey(e => e.IdPadraoContaContabil).HasName("PK_tbFinPadraoContaCorrenteContaContabil_1");

            entity.ToTable("tbFinPadraoContaCorrenteContaContabil");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.DtIncluscao)
                .HasColumnType("datetime")
                .HasColumnName("dtIncluscao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<TbFinRealizavelLancamentoPessoa>(entity =>
        {
            entity.HasKey(e => new { e.IdLancamento, e.IdPessoa });

            entity.ToTable("tbFinRealizavelLancamentoPessoa");
        });

        modelBuilder.Entity<TbFinRegularizacaoDiarioTesourarium>(entity =>
        {
            entity.HasKey(e => e.IdRegularizacaoDiario);

            entity.ToTable("tbFinRegularizacaoDiarioTesouraria");

            entity.HasIndex(e => e.IdLancamentoDiario, "IX_tbFinRegularizacaoDiarioTesouraria");

            entity.HasIndex(e => e.DtRegularizacao, "IX_tbFinRegularizacaoDiarioTesouraria_1");

            entity.HasIndex(e => new { e.NrAnoRegularizacao, e.DtRegularizacao }, "IX_tbFinRegularizacaoDiarioTesouraria_nrAnoReg_dtReg_inc_IdLancDiario_nrReg");

            entity.HasIndex(e => new { e.NrAnoRegularizacao, e.IdCccredor, e.IdTipoDocFinanceiro }, "IX_tbFinRegularizacaoDiarioTesouraria_nrAnoRegularizacao_IdCCCredor_inc_idRegDiario_IdLancDiario");

            entity.HasIndex(e => new { e.NrRegularizacao, e.NrAnoRegularizacao }, "IX_tbFinRegularizacaoDiarioTesouraria_nrRegularizacao_nrAnoRegularizacao");

            entity.Property(e => e.IdRegularizacaoDiario).HasColumnName("idRegularizacaoDiario");
            entity.Property(e => e.DtDocumento)
                .HasColumnType("datetime")
                .HasColumnName("dtDocumento");
            entity.Property(e => e.DtRegularizacao)
                .HasColumnType("datetime")
                .HasColumnName("dtRegularizacao");
            entity.Property(e => e.IdCc).HasColumnName("IdCC");
            entity.Property(e => e.IdCccredor).HasColumnName("IdCCCredor");
            entity.Property(e => e.NrAnoRegularizacao).HasColumnName("nrAnoRegularizacao");
            entity.Property(e => e.NrDocFinanceiro)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocFinanceiro");
            entity.Property(e => e.NrRegularizacao).HasColumnName("nrRegularizacao");

            entity.HasOne(d => d.IdLancamentoDiarioNavigation).WithMany(p => p.TbFinRegularizacaoDiarioTesouraria)
                .HasForeignKey(d => d.IdLancamentoDiario)
                .HasConstraintName("FK_tbFinRegularizacaoDiarioTesouraria_tbFinDiarioTesouraria");
        });

        modelBuilder.Entity<TbFinRemessaGp>(entity =>
        {
            entity.HasKey(e => e.IdRemssa);

            entity.ToTable("tbFinRemessaGPS");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdCc).HasColumnName("IdCC");
            entity.Property(e => e.NmArquivo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmArquivo");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMesComp).HasColumnName("nrMesComp");
            entity.Property(e => e.NrRemessa).HasColumnName("nrRemessa");
            entity.Property(e => e.VlRemessa)
                .HasColumnType("money")
                .HasColumnName("vlRemessa");
        });

        modelBuilder.Entity<TbFinSaldoInicialContaDeposito>(entity =>
        {
            entity.HasKey(e => e.IdSaldoContaDeposito);

            entity.ToTable("tbFinSaldoInicialContaDeposito");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlSaldoInicial)
                .HasColumnType("money")
                .HasColumnName("vlSaldoInicial");
        });

        modelBuilder.Entity<TbFinSaldoInicialPadraoContaCorrente>(entity =>
        {
            entity.HasKey(e => e.IdSaldoInicial);

            entity.ToTable("tbFinSaldoInicialPadraoContaCorrente");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.DtSaldoInicial)
                .HasColumnType("datetime")
                .HasColumnName("dtSaldoInicial");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlSaldoInicial)
                .HasColumnType("money")
                .HasColumnName("vlSaldoInicial");
        });

        modelBuilder.Entity<TbFinSaldosMensaisContasContabei>(entity =>
        {
            entity.HasKey(e => e.IdSaldoContaContabil).HasName("PK_tbFinSaldosMensaisContasContabeis_1");

            entity.ToTable("tbFinSaldosMensaisContasContabeis");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlCreditos)
                .HasColumnType("money")
                .HasColumnName("vlCreditos");
            entity.Property(e => e.VlCreditosSemEstornos)
                .HasColumnType("money")
                .HasColumnName("vlCreditosSemEstornos");
            entity.Property(e => e.VlDebitos)
                .HasColumnType("money")
                .HasColumnName("vlDebitos");
            entity.Property(e => e.VlDebitosSemEstornos)
                .HasColumnType("money")
                .HasColumnName("vlDebitosSemEstornos");
            entity.Property(e => e.VlSaldoInicial)
                .HasColumnType("money")
                .HasColumnName("vlSaldoInicial");
        });

        modelBuilder.Entity<TbFinSaldosMensaisContasCorrente>(entity =>
        {
            entity.HasKey(e => e.IdSaldoBancario);

            entity.ToTable("tbFinSaldosMensaisContasCorrente");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.NrMes, e.IdCc }, "IX_tbFinSaldosMensaisContasCorrente_IdEmpresa_nrAno_nrMes_IdCC");

            entity.HasIndex(e => new { e.NrAno, e.NrMes, e.IdCc }, "IX_tbFinSaldosMensaisContasCorrente_nrAno_nrMes_IdCC");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdCc).HasColumnName("IdCC");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlAplicado)
                .HasColumnType("money")
                .HasColumnName("vlAplicado");
            entity.Property(e => e.VlSaldoBancario)
                .HasColumnType("money")
                .HasColumnName("vlSaldoBancario");

            entity.HasOne(d => d.IdCcNavigation).WithMany(p => p.TbFinSaldosMensaisContasCorrentes)
                .HasForeignKey(d => d.IdCc)
                .HasConstraintName("FK_tbFinSaldosMensaisContasCorrente_tbGerContasCorrente");
        });

        modelBuilder.Entity<TbFinTipoContaPassivoPermanente>(entity =>
        {
            entity.HasKey(e => e.CdTipoConta).HasName("PK_tbConTipoContaPassivoPermanente");

            entity.ToTable("tbFinTipoContaPassivoPermanente");

            entity.Property(e => e.CdTipoConta).HasColumnName("cdTipoConta");
            entity.Property(e => e.DsTipoConta)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTipoConta");
        });

        modelBuilder.Entity<TbFinTipoContrapartidaOpCredito>(entity =>
        {
            entity.HasKey(e => e.IdTipoContraPartidaOpCredito);

            entity.ToTable("tbFinTipoContrapartidaOpCredito");

            entity.Property(e => e.IdTipoContraPartidaOpCredito)
                .ValueGeneratedNever()
                .HasColumnName("idTipoContraPartidaOpCredito");
            entity.Property(e => e.DsTipoContraPartidaOpCredito)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("dsTipoContraPartidaOpCredito");
        });

        modelBuilder.Entity<TbFinTipoFinanceiroPatrimonial>(entity =>
        {
            entity.HasKey(e => e.IdTipoFinanceiroPatrimonial);

            entity.ToTable("tbFinTipoFinanceiroPatrimonial");

            entity.Property(e => e.IdTipoFinanceiroPatrimonial)
                .ValueGeneratedNever()
                .HasColumnName("idTipoFinanceiroPatrimonial");
            entity.Property(e => e.DsTipoFinanceiroPatrimonial)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoFinanceiroPatrimonial");
        });

        modelBuilder.Entity<TbFinTipoMovimentoContabil>(entity =>
        {
            entity.HasKey(e => e.IdTipoMovimento);

            entity.ToTable("tbFinTipoMovimentoContabil");

            entity.Property(e => e.IdTipoMovimento)
                .ValueGeneratedNever()
                .HasColumnName("idTipoMovimento");
            entity.Property(e => e.DsTipoMovimento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoMovimento");
        });

        modelBuilder.Entity<TbFinTipoMovtoNumeraRealizavelDeposito>(entity =>
        {
            entity.HasKey(e => e.IdTipoMovimento);

            entity.ToTable("tbFinTipoMovtoNumeraRealizavelDeposito");

            entity.Property(e => e.IdTipoMovimento)
                .ValueGeneratedNever()
                .HasColumnName("idTipoMovimento");
            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.DsTipoMovimento)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTipoMovimento");
            entity.Property(e => e.FlInscricao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flInscricao");
            entity.Property(e => e.TpRegistro)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpRegistro");
        });

        modelBuilder.Entity<TbFinTipoOperacaoProgramacaoFinanceira>(entity =>
        {
            entity.HasKey(e => e.IdTipoOperacao);

            entity.ToTable("tbFinTipoOperacaoProgramacaoFinanceira");

            entity.Property(e => e.IdTipoOperacao)
                .ValueGeneratedNever()
                .HasColumnName("idTipoOperacao");
            entity.Property(e => e.DsTipoOperacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoOperacao");
        });

        modelBuilder.Entity<TbFinTipoPermutaStatusDividum>(entity =>
        {
            entity.HasKey(e => e.IdTipoPermuta);

            entity.ToTable("tbFinTipoPermutaStatusDivida");

            entity.Property(e => e.IdTipoPermuta)
                .ValueGeneratedNever()
                .HasColumnName("idTipoPermuta");
            entity.Property(e => e.DsTipoPermuta)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTipoPermuta");
        });

        modelBuilder.Entity<TbFinTipoVariacaoQualitativa>(entity =>
        {
            entity.HasKey(e => e.IdTipoVariacao);

            entity.ToTable("tbFinTipoVariacaoQualitativa");

            entity.Property(e => e.IdTipoVariacao)
                .ValueGeneratedNever()
                .HasColumnName("idTipoVariacao");
            entity.Property(e => e.DsTipoVariacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoVariacao");
        });

        modelBuilder.Entity<TbFinTiposConciliacao>(entity =>
        {
            entity.HasKey(e => e.IdTipoConciliacao);

            entity.ToTable("tbFinTiposConciliacao");

            entity.Property(e => e.IdTipoConciliacao).ValueGeneratedNever();
            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.DsExtratoLancamento)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsExtratoLancamento");
            entity.Property(e => e.DsTipoConciliacao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTipoConciliacao");
            entity.Property(e => e.DsTipoOperacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoOperacao");
            entity.Property(e => e.FlAtivo).HasColumnName("flAtivo");
            entity.Property(e => e.FlManual).HasColumnName("flManual");
        });

        modelBuilder.Entity<TbFinTiposContasContabeisDividaFundadum>(entity =>
        {
            entity.HasKey(e => e.IdTipoContaContabil);

            entity.ToTable("tbFinTiposContasContabeisDividaFundada");

            entity.Property(e => e.DsTipoContaContabil)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsTipoContaContabil");
            entity.Property(e => e.FlAtivo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flAtivo");
            entity.Property(e => e.VlParametro)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("vlParametro");
        });

        modelBuilder.Entity<TbFinTiposDocumentoFinanceiro>(entity =>
        {
            entity.HasKey(e => e.IdTipoDocFinanceiro);

            entity.ToTable("tbFinTiposDocumentoFinanceiro");

            entity.Property(e => e.CdTipoTc).HasColumnName("cdTipoTC");
            entity.Property(e => e.FlAtivo).HasColumnName("flAtivo");
            entity.Property(e => e.FlEntradaSaida)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flEntradaSaida");
            entity.Property(e => e.NmTipoDocFinanceiro)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("nmTipoDocFinanceiro");
        });

        modelBuilder.Entity<TbFinTiposOperacoesFinanceira>(entity =>
        {
            entity.HasKey(e => e.IdTipoOperacaoFinanceira);

            entity.ToTable("tbFinTiposOperacoesFinanceiras");

            entity.Property(e => e.IdTipoOperacaoFinanceira)
                .ValueGeneratedNever()
                .HasColumnName("idTipoOperacaoFinanceira");
            entity.Property(e => e.DsTipoOperacaoFinanceira)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTipoOperacaoFinanceira");
            entity.Property(e => e.FlExigeIdContaContabilContrapartida)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flExigeIdContaContabilContrapartida");
            entity.Property(e => e.FlExigeIdContaTransferencia)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flExigeIdContaTransferencia");
            entity.Property(e => e.FlExigeIdOrigemDestino)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flExigeIdOrigemDestino");
            entity.Property(e => e.FlLancaManual)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flLancaManual");

            entity.HasMany(d => d.IdTipoDocFinanceiros).WithMany(p => p.IdTipoOperacaoFinanceiras)
                .UsingEntity<Dictionary<string, object>>(
                    "TbFinOperacoesDocumentosFinanceiro",
                    r => r.HasOne<TbFinTiposDocumentoFinanceiro>().WithMany()
                        .HasForeignKey("IdTipoDocFinanceiro")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbFinOperacoesDocumentosFinanceiros_tbFinTiposDocumentoFinanceiro"),
                    l => l.HasOne<TbFinTiposOperacoesFinanceira>().WithMany()
                        .HasForeignKey("IdTipoOperacaoFinanceira")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbFinOperacoesDocumentosFinanceiros_tbFinTiposOperacoesFinanceiras"),
                    j =>
                    {
                        j.HasKey("IdTipoOperacaoFinanceira", "IdTipoDocFinanceiro");
                        j.ToTable("tbFinOperacoesDocumentosFinanceiros");
                        j.IndexerProperty<short>("IdTipoOperacaoFinanceira").HasColumnName("idTipoOperacaoFinanceira");
                    });
        });

        modelBuilder.Entity<TbFinTiposServico>(entity =>
        {
            entity.HasKey(e => e.IdTipoServico);

            entity.ToTable("tbFinTiposServicos");

            entity.Property(e => e.CdTipoServico)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdTipoServico");
            entity.Property(e => e.DsTipoServico)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("dsTipoServico");
            entity.Property(e => e.FlusaRemessa).HasColumnName("flusaRemessa");
        });

        modelBuilder.Entity<TbFpgGrupoPessoalNatureza>(entity =>
        {
            entity.HasKey(e => e.IdGrupoNaturezas).HasName("PK_tbFpgGrupoPessoalNaturezas_1");

            entity.ToTable("tbFpgGrupoPessoalNaturezas");

            entity.Property(e => e.CdNatDespesa)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("cdNatDespesa");
            entity.Property(e => e.FlComputa13).HasColumnName("flComputa13");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");

            entity.HasOne(d => d.IdGrupoNavigation).WithMany(p => p.TbFpgGrupoPessoalNaturezas)
                .HasForeignKey(d => d.IdGrupo)
                .HasConstraintName("FK_tbFpgGrupoPessoalNaturezas_tbFpgGruposPessoal");
        });

        modelBuilder.Entity<TbFpgGruposPessoal>(entity =>
        {
            entity.HasKey(e => e.IdGrupo).HasName("PK_tbFpgGruposPessoal_1");

            entity.ToTable("tbFpgGruposPessoal");

            entity.Property(e => e.DsGrupo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsGrupo");
        });

        modelBuilder.Entity<TbFpgProvento>(entity =>
        {
            entity.HasKey(e => e.IdProvento);

            entity.ToTable("tbFpgProventos");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrCompAno, e.NrCompMes, e.IdDespesa, e.IdEmpenho, e.IdProvento }, "IX_IdEmpresa_nrCompentencia")
                .IsDescending(false, true, true, false, false, false)
                .HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.NrCompAno, e.NrCompMes, e.IdRecurso }, "IX_tbFpgProventos_IdEmpresa_nrCompAno_nrCompMes_IdRecurso_inc_IdProvento_IdDotacao");

            entity.HasIndex(e => new { e.CdProvento, e.IdProvento }, "IX_tbFpgProventos_cdProvento_IdProvento");

            entity.Property(e => e.CdProvento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdProvento");
            entity.Property(e => e.DsAlerta)
                .IsUnicode(false)
                .HasColumnName("dsAlerta");
            entity.Property(e => e.DsCentroCusto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsCentroCusto");
            entity.Property(e => e.DsClassificacaoDotacao)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("dsClassificacaoDotacao");
            entity.Property(e => e.DsContaCredito)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsContaCredito");
            entity.Property(e => e.DsContaDebito)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsContaDebito");
            entity.Property(e => e.DsErro)
                .IsUnicode(false)
                .HasColumnName("dsErro");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsProvento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsProvento");
            entity.Property(e => e.DsTipoDespesa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("dsTipoDespesa");
            entity.Property(e => e.DsTipoProvento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoProvento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrCnpjcpf)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrCNPJCPF");
            entity.Property(e => e.NrCnpjempresa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrCNPJEmpresa");
            entity.Property(e => e.NrCompAno).HasColumnName("nrCompAno");
            entity.Property(e => e.NrCompMes).HasColumnName("nrCompMes");
            entity.Property(e => e.VlProvento)
                .HasColumnType("money")
                .HasColumnName("vlProvento");
        });

        modelBuilder.Entity<TbFpgProventosDesconto>(entity =>
        {
            entity.HasKey(e => e.IdDesconto);

            entity.ToTable("tbFpgProventosDescontos");

            entity.HasIndex(e => e.IdCcorigem, "IX_tbFpgProventosDescontos_IdCCOrigem_inc_IdProvento");

            entity.HasIndex(e => new { e.IdProvento, e.IdCcorigem }, "IX_tbFpgProventosDescontos_IdProvento_IdCCOrigem");

            entity.Property(e => e.DsContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsContaContabil");
            entity.Property(e => e.DsDesconto)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("dsDesconto");
            entity.Property(e => e.DsErro)
                .IsUnicode(false)
                .HasColumnName("dsErro");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdCcorigem).HasColumnName("IdCCOrigem");
            entity.Property(e => e.NrCnpjcpffavorecido)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrCNPJCPFFavorecido");
            entity.Property(e => e.VlDesconto)
                .HasColumnType("money")
                .HasColumnName("vlDesconto");

            entity.HasOne(d => d.IdProventoNavigation).WithMany(p => p.TbFpgProventosDescontos)
                .HasForeignKey(d => d.IdProvento)
                .HasConstraintName("FK_tbFpgProventosDescontos_tbFpgProventos");
        });

        modelBuilder.Entity<TbGerAgencia>(entity =>
        {
            entity.HasKey(e => e.IdAgencia);

            entity.ToTable("tbGerAgencias");

            entity.HasIndex(e => new { e.IdAgencia, e.CdBanco }, "IX_tbGerAgencias_IdAgencia_cdBanco").HasFillFactor(90);

            entity.HasIndex(e => e.IdAgencia, "IX_tbGerAgencias_IdAgencia_nrAgencia_nrDV_cdBanco");

            entity.HasIndex(e => e.CdBanco, "IX_tbGerAgencias_cdBanco_inc_IdAgencia_nrAgencia_nmAgencia");

            entity.Property(e => e.CdAgenciaTc)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdAgenciaTC");
            entity.Property(e => e.CdBanco)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdBanco");
            entity.Property(e => e.NmAgencia)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmAgencia");
            entity.Property(e => e.NrAgencia)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nrAgencia");
            entity.Property(e => e.NrDv)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nrDV");

            entity.HasOne(d => d.CdBancoNavigation).WithMany(p => p.TbGerAgencia)
                .HasForeignKey(d => d.CdBanco)
                .HasConstraintName("FK_tbGerAgencias_tbGerBancos");

            entity.HasOne(d => d.IdCidadeNavigation).WithMany(p => p.TbGerAgencia)
                .HasForeignKey(d => d.IdCidade)
                .HasConstraintName("FK_tbGerAgencias_tbGerCidades");
        });

        modelBuilder.Entity<TbGerAtributosDinamico>(entity =>
        {
            entity.HasKey(e => new { e.IdAtributo, e.NmTabela }).HasName("PK_tb");

            entity.ToTable("tbGerAtributosDinamicos");

            entity.Property(e => e.IdAtributo)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.NmTabela)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmTabela");
            entity.Property(e => e.NmAtributo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmAtributo");
            entity.Property(e => e.NrOrdem).HasColumnName("nrOrdem");
            entity.Property(e => e.TpAtributo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("tpAtributo");
        });

        modelBuilder.Entity<TbGerBairro>(entity =>
        {
            entity.HasKey(e => e.Idbairro);

            entity.ToTable("tbGerBairros");

            entity.Property(e => e.Idbairro).HasColumnName("IDBairro");
            entity.Property(e => e.NmBairro)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmBairro");
        });

        modelBuilder.Entity<TbGerBanco>(entity =>
        {
            entity.HasKey(e => e.CdBanco);

            entity.ToTable("tbGerBancos");

            entity.Property(e => e.CdBanco)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdBanco");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.NmBanco)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmBanco");
            entity.Property(e => e.NrDv)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nrDV");
        });

        modelBuilder.Entity<TbGerCargo>(entity =>
        {
            entity.HasKey(e => e.IdCargo).HasName("PK_tbOrcCargos");

            entity.ToTable("tbGerCargos");

            entity.Property(e => e.DsCargo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsCargo");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
        });

        modelBuilder.Entity<TbGerCargosOrdenadore>(entity =>
        {
            entity.HasKey(e => e.IdCargoOrdenador);

            entity.ToTable("tbGerCargosOrdenadores");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivo)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DtFimAtividade)
                .HasColumnType("datetime")
                .HasColumnName("dtFimAtividade");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtInicioAtividade)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioAtividade");
        });

        modelBuilder.Entity<TbGerCargosServidore>(entity =>
        {
            entity.HasKey(e => e.IdCargoServidor).HasName("PK_tbOrcCargoServidor");

            entity.ToTable("tbGerCargosServidores");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginAlteracao)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("dsLoginAlteracao");
            entity.Property(e => e.DsMotivoBaixa)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMotivoBaixa");
            entity.Property(e => e.DtAlteracao)
                .HasColumnType("datetime")
                .HasColumnName("dtAlteracao");
            entity.Property(e => e.DtFimAtividade)
                .HasColumnType("datetime")
                .HasColumnName("dtFimAtividade");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtInicioAtividade)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioAtividade");
            entity.Property(e => e.FlOrdenadorDespesa)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flOrdenadorDespesa");
            entity.Property(e => e.IdLeiAtoBaixa).HasColumnName("idLeiAtoBaixa");
            entity.Property(e => e.IdLeiAtoNomeacao).HasColumnName("idLeiAtoNomeacao");
            entity.Property(e => e.ImAssinatura)
                .HasColumnType("image")
                .HasColumnName("imAssinatura");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");

            entity.HasOne(d => d.IdCargoNavigation).WithMany(p => p.TbGerCargosServidores)
                .HasForeignKey(d => d.IdCargo)
                .HasConstraintName("FK_tbGerCargosServidores_tbGerCargos");

            entity.HasOne(d => d.IdEmpresaNavigation).WithMany(p => p.TbGerCargosServidores)
                .HasForeignKey(d => d.IdEmpresa)
                .HasConstraintName("FK_tbGerCargosServidores_tbGerEmpresasGoverno");

            entity.HasOne(d => d.IdServidorNavigation).WithMany(p => p.TbGerCargosServidores)
                .HasForeignKey(d => d.IdServidor)
                .HasConstraintName("FK_tbGerCargosServidores_tbGerServidores");

            entity.HasOne(d => d.TbOrcOrgao).WithMany(p => p.TbGerCargosServidores)
                .HasForeignKey(d => new { d.IdEmpresa, d.NrAno, d.CdOrgao })
                .HasConstraintName("FK_tbGerCargosServidores_tbOrcOrgaos");
        });

        modelBuilder.Entity<TbGerCategoriasPessoa>(entity =>
        {
            entity.HasKey(e => e.IdCategoria).HasName("PK_tbGerPessoasCategorias");

            entity.ToTable("tbGerCategoriasPessoas");

            entity.Property(e => e.IdCategoria).HasColumnName("idCategoria");
            entity.Property(e => e.NmCategoria)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nmCategoria");

            entity.HasMany(d => d.IdDocCrcfs).WithMany(p => p.IdCategoria)
                .UsingEntity<Dictionary<string, object>>(
                    "TbLicDoctosCategoria",
                    r => r.HasOne<TbLicDoctosCrcf>().WithMany()
                        .HasForeignKey("IdDocCrcf")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tblicDoctosCategorias_tbLicDoctosCRCF"),
                    l => l.HasOne<TbGerCategoriasPessoa>().WithMany()
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tblicDoctosCategorias_tbGerCategoriasPessoas"),
                    j =>
                    {
                        j.HasKey("IdCategoria", "IdDocCrcf").HasName("PK_tblicDocumentosCategoria");
                        j.ToTable("tbLicDoctosCategorias");
                        j.IndexerProperty<short>("IdDocCrcf").HasColumnName("IdDocCRCF");
                    });
        });

        modelBuilder.Entity<TbGerCidade>(entity =>
        {
            entity.HasKey(e => e.Idcidade);

            entity.ToTable("tbGerCidades");

            entity.Property(e => e.Idcidade).HasColumnName("IDCidade");
            entity.Property(e => e.CdIbge).HasColumnName("cdIBGE");
            entity.Property(e => e.DsUf)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("dsUF");
            entity.Property(e => e.Idpais).HasColumnName("IDPais");
            entity.Property(e => e.NmCidade)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmCidade");

            entity.HasOne(d => d.IdpaisNavigation).WithMany(p => p.TbGerCidades)
                .HasForeignKey(d => d.Idpais)
                .HasConstraintName("FK_tbGerCidades_tbGerPais");
        });

        modelBuilder.Entity<TbGerCidadesCdIbge>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbGerCidades_cdIBGE");

            entity.Property(e => e.CdIbge).HasColumnName("cdIBGE");
            entity.Property(e => e.DsUf)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("dsUF");
            entity.Property(e => e.NmCidade)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmCidade");
        });

        modelBuilder.Entity<TbGerCondicoesPagamento>(entity =>
        {
            entity.HasKey(e => e.IdCondicaoPgto);

            entity.ToTable("tbGerCondicoesPagamento");

            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.DsCondicaoPgto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsCondicaoPgto");
            entity.Property(e => e.FlAtivo).HasColumnName("flAtivo");
        });

        modelBuilder.Entity<TbGerConsorciosMunicipio>(entity =>
        {
            entity.HasKey(e => e.IdConsorcio);

            entity.ToTable("tbGerConsorciosMunicipios");

            entity.Property(e => e.IdConsorcio).HasColumnName("idConsorcio");
            entity.Property(e => e.CdOperacao).HasColumnName("cdOperacao");
            entity.Property(e => e.DsMotivo)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DtBaixa)
                .HasColumnType("datetime")
                .HasColumnName("dtBaixa");
            entity.Property(e => e.DtBaseTce)
                .HasColumnType("datetime")
                .HasColumnName("dtBaseTCE");
            entity.Property(e => e.DtInicioVinculo)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioVinculo");
            entity.Property(e => e.IdLeiAto).HasColumnName("idLeiAto");
            entity.Property(e => e.IdLeiAtoBaixa).HasColumnName("idLeiAtoBaixa");
            entity.Property(e => e.IdTipoAreaConsorcio).HasColumnName("idTipoAreaConsorcio");
            entity.Property(e => e.IdTipoNaturezaJuridica).HasColumnName("idTipoNaturezaJuridica");

            entity.HasOne(d => d.IdTipoAreaConsorcioNavigation).WithMany(p => p.TbGerConsorciosMunicipios)
                .HasForeignKey(d => d.IdTipoAreaConsorcio)
                .HasConstraintName("FK_tbGerConsorciosMunicipios_tbGerTiposAreaConsorcio");

            entity.HasOne(d => d.IdTipoNaturezaJuridicaNavigation).WithMany(p => p.TbGerConsorciosMunicipios)
                .HasForeignKey(d => d.IdTipoNaturezaJuridica)
                .HasConstraintName("FK_tbGerConsorciosMunicipios_tbGerTiposNaturezaJuridicaConsorcio");
        });

        modelBuilder.Entity<TbGerContaCorrenteFonte>(entity =>
        {
            entity.HasKey(e => e.IdCcfonte);

            entity.ToTable("tbGerContaCorrenteFontes");

            entity.Property(e => e.IdCcfonte).HasColumnName("IdCCFonte");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdCcempresa).HasColumnName("IdCCEmpresa");
        });

        modelBuilder.Entity<TbGerContaCorrenteGp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbGerContaCorrenteGPS");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsTipoEmpresa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoEmpresa");
            entity.Property(e => e.IdCc).HasColumnName("IdCC");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<TbGerContasCorrOrgaosUnidade>(entity =>
        {
            entity.HasKey(e => e.IdContaCorrOrgaoUnidade);

            entity.ToTable("tbGerContasCorrOrgaosUnidades");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.CdOrgao, e.CdUnidade, e.IdCc }, "IX_tbGerContasCorrOrgaosUnidades").HasFillFactor(90);

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.IdCc).HasColumnName("IdCC");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");

            entity.HasOne(d => d.IdCcNavigation).WithMany(p => p.TbGerContasCorrOrgaosUnidades)
                .HasForeignKey(d => d.IdCc)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbGerContasCorrOrgaosUnidades_tbGerContasCorrente");
        });

        modelBuilder.Entity<TbGerContasCorrente>(entity =>
        {
            entity.HasKey(e => e.IdCc);

            entity.ToTable("tbGerContasCorrente");

            entity.HasIndex(e => new { e.NrCc, e.IdAgencia, e.IdEmpresa, e.IdPessoa }, "IX_nrCC_IdAgencia_IdEmpresa_IdPessoa").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdCc, e.IdAgencia }, "IX_tbGerContasCorrente_IdCC_IdAgencia");

            entity.HasIndex(e => new { e.IdCc, e.IdAgencia, e.NmCc }, "IX_tbGerContasCorrente_IdCC_IdAgencia_nmCC");

            entity.HasIndex(e => new { e.IdCc, e.NmCc }, "IX_tbGerContasCorrente_IdCC_nmCC");

            entity.HasIndex(e => new { e.IdEmpresa, e.IdAgencia, e.IdCc }, "IX_tbGerContasCorrente_IdEmpresa_IdAgencia_IdCC").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.DtDesativacao }, "IX_tbGerContasCorrente_IdEmpresa_dtDesativacao_inc_IdCC_nrCC_IdAgencia_nmCC");

            entity.HasIndex(e => new { e.IdEmpresa, e.DtDesativacao }, "IX_tbGerContasCorrente_IdEmpresa_dtDesativacao_inc_IdCC_nrCC_IdAgencia_nmCC_dtCadastro");

            entity.HasIndex(e => new { e.IdEmpresa, e.DtDesativacao }, "IX_tbGerContasCorrente_IdEmpresa_dtDesativacao_inc_IdCC_nrCC_nrDv_IdAgencia");

            entity.HasIndex(e => new { e.IdEmpresa, e.DtDesativacao }, "IX_tbGerContasCorrente_IdEmpresa_inc_IdCC_nrCC_IdAgencia_nmCC_dtCadastro");

            entity.HasIndex(e => new { e.IdPessoa, e.DtDesativacao }, "IX_tbGerContasCorrente_IdPessoa_dtDesativacao");

            entity.HasIndex(e => new { e.IdPessoa, e.DtDesativacao }, "IX_tbGerContasCorrente_IdPessoa_dtDesativacao_inc_IdCC_IdAgencia");

            entity.HasIndex(e => new { e.IdPessoa, e.DtDesativacao }, "IX_tbGerContasCorrente_IdPessoa_dtDesativacao_inc_IdCC_nrCC_nrDv_IdAg_nmCC_dtCad");

            entity.Property(e => e.IdCc).HasColumnName("IdCC");
            entity.Property(e => e.CdConvenio)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdConvenio");
            entity.Property(e => e.CdConvenioOc)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdConvenioOC");
            entity.Property(e => e.DsMotivoDesativacao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMotivoDesativacao");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.DtDesativacao)
                .HasColumnType("datetime")
                .HasColumnName("dtDesativacao");
            entity.Property(e => e.FlContaConvenio)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flContaConvenio");
            entity.Property(e => e.FlContaPadraoPag)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flContaPadraoPag");
            entity.Property(e => e.FlTipoOrdemBancaria)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flTipoOrdemBancaria");
            entity.Property(e => e.FlTransferencia)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flTransferencia");
            entity.Property(e => e.FlTransferenciaDiversa)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flTransferenciaDiversa");
            entity.Property(e => e.FlVinculada)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flVinculada");
            entity.Property(e => e.IdContaBacen).HasColumnName("IdContaBACEN");
            entity.Property(e => e.IdTipoContaBancaria).HasColumnName("idTipoContaBancaria");
            entity.Property(e => e.NmCc)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("nmCC");
            entity.Property(e => e.NrCc)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrCC");
            entity.Property(e => e.NrCctc)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrCCTc");
            entity.Property(e => e.NrCpfFavorecido)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrCpfFavorecido");
            entity.Property(e => e.NrDv)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nrDv");

            entity.HasOne(d => d.IdAgenciaNavigation).WithMany(p => p.TbGerContasCorrentes)
                .HasForeignKey(d => d.IdAgencia)
                .HasConstraintName("FK_tbGerContasCorrente_tbGerAgencias");

            entity.HasOne(d => d.IdTipoContaBancariaNavigation).WithMany(p => p.TbGerContasCorrentes)
                .HasForeignKey(d => d.IdTipoContaBancaria)
                .HasConstraintName("FK_tbGerContasCorrente_tbGerTiposContaBancaria");
        });

        modelBuilder.Entity<TbGerContasCorrenteBaixa>(entity =>
        {
            entity.HasKey(e => e.IdBaixa);

            entity.ToTable("tbGerContasCorrenteBaixas");

            entity.Property(e => e.IdBaixa).HasColumnName("idBaixa");
            entity.Property(e => e.DsMotivoDesativacao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMotivoDesativacao");
            entity.Property(e => e.DsMotivoReversao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMotivoReversao");
            entity.Property(e => e.DtDesativacao)
                .HasColumnType("datetime")
                .HasColumnName("dtDesativacao");
            entity.Property(e => e.DtReversao)
                .HasColumnType("datetime")
                .HasColumnName("dtReversao");
            entity.Property(e => e.IdCc).HasColumnName("IdCC");

            entity.HasOne(d => d.IdCcNavigation).WithMany(p => p.TbGerContasCorrenteBaixas)
                .HasForeignKey(d => d.IdCc)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbGerContasCorrenteBaixas_tbGerContasCorrente");
        });

        modelBuilder.Entity<TbGerContasCorrenteTransfDiversa>(entity =>
        {
            entity.HasKey(e => e.IdCctransfDiversas);

            entity.ToTable("tbGerContasCorrenteTransfDiversas");

            entity.Property(e => e.IdCctransfDiversas).HasColumnName("IdCCTransfDiversas");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.IdCc).HasColumnName("IdCC");
        });

        modelBuilder.Entity<TbGerContasCorrentesResponsavei>(entity =>
        {
            entity.HasKey(e => e.IdResponsavel);

            entity.ToTable("tbGerContasCorrentesResponsaveis");

            entity.Property(e => e.IdResponsavel).HasColumnName("idResponsavel");
            entity.Property(e => e.DsMotivo)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DtBaixa)
                .HasColumnType("datetime")
                .HasColumnName("dtBaixa");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.IdCc).HasColumnName("IdCC");
            entity.Property(e => e.IdTipoBaixa).HasColumnName("idTipoBaixa");

            entity.HasOne(d => d.IdCcNavigation).WithMany(p => p.TbGerContasCorrentesResponsaveis)
                .HasForeignKey(d => d.IdCc)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbGerContasCorrentesResponsaveis_tbGerContasCorrente");

            entity.HasOne(d => d.IdTipoBaixaNavigation).WithMany(p => p.TbGerContasCorrentesResponsaveis)
                .HasForeignKey(d => d.IdTipoBaixa)
                .HasConstraintName("FK_tbGerContasCorrentesResponsaveis_tbGerTiposBaixaResponsavel");
        });

        modelBuilder.Entity<TbGerContasCorrentesVinculo>(entity =>
        {
            entity.HasKey(e => new { e.IdCc, e.IdCcvinculada }).HasName("PK_tbGerContasCorrentesVinculos_1");

            entity.ToTable("tbGerContasCorrentesVinculos");

            entity.Property(e => e.IdCc).HasColumnName("IdCC");
            entity.Property(e => e.IdCcvinculada).HasColumnName("IdCCVinculada");

            entity.HasOne(d => d.IdCcNavigation).WithMany(p => p.TbGerContasCorrentesVinculos)
                .HasForeignKey(d => d.IdCc)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbGerContasCorrentesVinculos_tbGerContasCorrente");
        });

        modelBuilder.Entity<TbGerEmpresasGovAnosContabil>(entity =>
        {
            entity.HasKey(e => new { e.Idempresa, e.NrAnoContabil });

            entity.ToTable("tbGerEmpresasGovAnosContabil");

            entity.Property(e => e.Idempresa).HasColumnName("IDEmpresa");
            entity.Property(e => e.NrAnoContabil).HasColumnName("nrAnoContabil");
            entity.Property(e => e.DsAberturaEncerramento)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsAberturaEncerramento");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMovimentoContabil)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMovimentoContabil");
            entity.Property(e => e.DsMovimentoDespesa)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMovimentoDespesa");
            entity.Property(e => e.DsMovimentoReceita)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMovimentoReceita");
            entity.Property(e => e.DtAberturaAnoContabil)
                .HasColumnType("datetime")
                .HasColumnName("dtAberturaAnoContabil");
            entity.Property(e => e.DtAberturaOrcamento)
                .HasColumnType("datetime")
                .HasColumnName("dtAberturaOrcamento");
            entity.Property(e => e.DtLeiLdo)
                .HasColumnType("datetime")
                .HasColumnName("dtLeiLDO");
            entity.Property(e => e.DtLeiLoa)
                .HasColumnType("datetime")
                .HasColumnName("dtLeiLOA");
            entity.Property(e => e.DtLeiPpa)
                .HasColumnType("datetime")
                .HasColumnName("dtLeiPPA");
            entity.Property(e => e.DtPublicacaoLeiLdo)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoLeiLDO");
            entity.Property(e => e.DtPublicacaoLeiLoa)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoLeiLOA");
            entity.Property(e => e.DtPublicacaoLeiPpa)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoLeiPPA");
            entity.Property(e => e.DtPublicacaoQdd)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoQDD");
            entity.Property(e => e.IdLeiAtoLoa).HasColumnName("idLeiAtoLoa");
            entity.Property(e => e.NrAnoLdo).HasColumnName("nrAnoLDO");
            entity.Property(e => e.NrAnoLeiLoa).HasColumnName("nrAnoLeiLOA");
            entity.Property(e => e.NrAnoPpa).HasColumnName("nrAnoPPA");
            entity.Property(e => e.NrBimestreFechado).HasColumnName("nrBimestreFechado");
            entity.Property(e => e.NrDecretoQdd)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("nrDecretoQDD");
            entity.Property(e => e.NrLeiLdo).HasColumnName("nrLeiLDO");
            entity.Property(e => e.NrLeiLoa).HasColumnName("nrLeiLOA");
            entity.Property(e => e.NrLeiPpa).HasColumnName("nrLeiPPA");
            entity.Property(e => e.NrMesContabilFechado).HasColumnName("nrMesContabilFechado");
            entity.Property(e => e.NrMesDespesaFechada).HasColumnName("nrMesDespesaFechada");
            entity.Property(e => e.NrMesReceitaFechada).HasColumnName("nrMesReceitaFechada");

            entity.HasOne(d => d.IdempresaNavigation).WithMany(p => p.TbGerEmpresasGovAnosContabils)
                .HasForeignKey(d => d.Idempresa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbGerEmpresasGovAnosContabil_tbGerEmpresasGoverno");
        });

        modelBuilder.Entity<TbGerEmpresasGoverno>(entity =>
        {
            entity.HasKey(e => e.Idempresa);

            entity.ToTable("tbGerEmpresasGoverno");

            entity.HasIndex(e => new { e.Idempresa, e.DsTipoEmpresa }, "IX_tbGerEmpresasGoverno_IDEmpresa_dsTipoEmpresa");

            entity.Property(e => e.Idempresa).HasColumnName("IDEmpresa");
            entity.Property(e => e.CdIbge)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdIBGE");
            entity.Property(e => e.CdTce).HasColumnName("cdTCE");
            entity.Property(e => e.DsComplEndereco)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("dsComplEndereco");
            entity.Property(e => e.DsEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsEmail");
            entity.Property(e => e.DsExtensaoLogo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsExtensaoLogo");
            entity.Property(e => e.DsFone)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsFone");
            entity.Property(e => e.DsNomeLogo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsNomeLogo");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
            entity.Property(e => e.DsSite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsSite");
            entity.Property(e => e.DsTipoAdm)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipoAdm");
            entity.Property(e => e.DsTipoEmpresa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("Se é Prefeitura/Câmara/Autarquia/Previência")
                .HasColumnName("dsTipoEmpresa");
            entity.Property(e => e.FlCamaraCentralizada)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flCamaraCentralizada");
            entity.Property(e => e.Idendereco).HasColumnName("IDEndereco");
            entity.Property(e => e.ImLogo)
                .HasColumnType("image")
                .HasColumnName("imLogo");
            entity.Property(e => e.ImMarcaDagua)
                .HasColumnType("image")
                .HasColumnName("imMarcaDagua");
            entity.Property(e => e.NmRazaoSocial)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmRazaoSocial");
            entity.Property(e => e.NrCnpj)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrCNPJ");
            entity.Property(e => e.NrFax)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrFax");
            entity.Property(e => e.NrHabitantes).HasColumnName("nrHabitantes");
            entity.Property(e => e.NrPredial).HasColumnName("nrPredial");

            entity.HasOne(d => d.IdenderecoNavigation).WithMany(p => p.TbGerEmpresasGovernos)
                .HasForeignKey(d => d.Idendereco)
                .HasConstraintName("FK_tbGerEmpresasGoverno_tbGerEnderecos");
        });

        modelBuilder.Entity<TbGerEmpresasGovernosOrgaosUnidade>(entity =>
        {
            entity.HasKey(e => e.IdEmpresaGovernoOrgaoUnidade);

            entity.ToTable("tbGerEmpresasGovernosOrgaosUnidades");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<TbGerEndereco>(entity =>
        {
            entity.HasKey(e => e.Idendereco);

            entity.ToTable("tbGerEnderecos");

            entity.HasIndex(e => new { e.DsCep, e.Idendereco }, "IX_dsCEP_IDEndereco").HasFillFactor(90);

            entity.Property(e => e.Idendereco).HasColumnName("IDEndereco");
            entity.Property(e => e.DsCep)
                .HasMaxLength(9)
                .IsUnicode(false)
                .HasColumnName("dsCEP");
            entity.Property(e => e.Idbairro).HasColumnName("IDBairro");
            entity.Property(e => e.Idcidade).HasColumnName("IDCidade");
            entity.Property(e => e.Idlogradouro).HasColumnName("IDLogradouro");

            entity.HasOne(d => d.IdbairroNavigation).WithMany(p => p.TbGerEnderecos)
                .HasForeignKey(d => d.Idbairro)
                .HasConstraintName("FK_tbGerEnderecos_tbGerBairro");

            entity.HasOne(d => d.IdcidadeNavigation).WithMany(p => p.TbGerEnderecos)
                .HasForeignKey(d => d.Idcidade)
                .HasConstraintName("FK_tbGerEnderecos_tbGerCidade");

            entity.HasOne(d => d.IdlogradouroNavigation).WithMany(p => p.TbGerEnderecos)
                .HasForeignKey(d => d.Idlogradouro)
                .HasConstraintName("FK_tbGerEnderecos_tbGerLogradouro");
        });

        modelBuilder.Entity<TbGerFormataCampo>(entity =>
        {
            entity.HasKey(e => new { e.NrAno, e.DsTipo, e.DsCampo });

            entity.ToTable("tbGerFormataCampos");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.DsCampo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsCampo");
            entity.Property(e => e.NrInicio).HasColumnName("nrInicio");
            entity.Property(e => e.NrTamanho).HasColumnName("nrTamanho");
        });

        modelBuilder.Entity<TbGerFormataControleLeiAto>(entity =>
        {
            entity.HasKey(e => new { e.DsTipoObjeto, e.NmFormulario });

            entity.ToTable("tbGerFormataControleLeiAto");

            entity.Property(e => e.DsTipoObjeto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoObjeto");
            entity.Property(e => e.NmFormulario)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmFormulario");
            entity.Property(e => e.IdArray)
                .HasMaxLength(250)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TbGerFusaoCisaoExtincaoEmpresa>(entity =>
        {
            entity.HasKey(e => e.IdFusaoCisaoExtincao);

            entity.ToTable("tbGerFusaoCisaoExtincaoEmpresas");

            entity.Property(e => e.IdFusaoCisaoExtincao).HasColumnName("idFusaoCisaoExtincao");
            entity.Property(e => e.DsOperacao)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("dsOperacao");
            entity.Property(e => e.DtOperacao)
                .HasColumnType("datetime")
                .HasColumnName("dtOperacao");
            entity.Property(e => e.FlLiberadoLancto).HasColumnName("flLiberadoLancto");
            entity.Property(e => e.IdEmpresaDestino).HasColumnName("idEmpresaDestino");
            entity.Property(e => e.IdEmpresaOrigem).HasColumnName("idEmpresaOrigem");
            entity.Property(e => e.TpOperacao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpOperacao");
        });

        modelBuilder.Entity<TbGerLogradouro>(entity =>
        {
            entity.HasKey(e => e.Idlogradouro);

            entity.ToTable("tbGerLogradouros");

            entity.HasIndex(e => new { e.DsTipo, e.NmLogradouro, e.Idlogradouro }, "IX_tbGerLogradouros_dsTipo_nmLogradouro");

            entity.Property(e => e.Idlogradouro).HasColumnName("IDLogradouro");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.NmLogradouro)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmLogradouro");
        });

        modelBuilder.Entity<TbGerOrgaoOficialPublicacao>(entity =>
        {
            entity.HasKey(e => e.IdOrgaoOficial);

            entity.ToTable("tbGerOrgaoOficialPublicacao");

            entity.Property(e => e.DsMotivoBaixa)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMotivoBaixa");
            entity.Property(e => e.DsObservacao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsObservacao");
            entity.Property(e => e.DtFinal)
                .HasColumnType("datetime")
                .HasColumnName("dtFinal");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtReferenciaTce)
                .HasColumnType("datetime")
                .HasColumnName("dtReferenciaTCE");
            entity.Property(e => e.IdLeiAto).HasColumnName("idLeiAto");
            entity.Property(e => e.IdTipoOrgaoOficial).HasColumnName("idTipoOrgaoOficial");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbGerOrgaoOficialPublicacaos)
                .HasForeignKey(d => d.IdLicitacao)
                .HasConstraintName("FK_tbGerOrgaoOficialPublicacao_tbLicLicitacoes");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbGerOrgaoOficialPublicacaos)
                .HasForeignKey(d => d.IdPessoa)
                .HasConstraintName("FK_tbGerOrgaoOficialPublicacao_tbGerPessoas");

            entity.HasOne(d => d.IdVeiculoPublicacaoNavigation).WithMany(p => p.TbGerOrgaoOficialPublicacaos)
                .HasForeignKey(d => d.IdVeiculoPublicacao)
                .HasConstraintName("FK_tbGerOrgaoOficialPublicacao_tbLicVeiculosPublicacoes");
        });

        modelBuilder.Entity<TbGerPaise>(entity =>
        {
            entity.HasKey(e => e.Idpais);

            entity.ToTable("tbGerPaises");

            entity.Property(e => e.Idpais).HasColumnName("IDPais");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSigla");
            entity.Property(e => e.NmPais)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmPais");
        });

        modelBuilder.Entity<TbGerPessoa>(entity =>
        {
            entity.HasKey(e => e.IdPessoa);

            entity.ToTable("tbGerPessoas");

            entity.HasIndex(e => new { e.IdPessoa, e.NmPessoa, e.NrCnpjcpf }, "IX_IdPessoa_nmPessoa_nrCNPJCPF").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdPessoa, e.NrCnpjcpf, e.NmPessoa }, "IX_IdPessoa_nrCNPJCPF_nmPessoa").HasFillFactor(90);

            entity.HasIndex(e => new { e.DsTipoPessoa, e.IdPessoa, e.NrCnpjcpf, e.NmPessoa }, "IX_dsTipoPessoa_IdPessoa_nrCNPJCPF_nmPessoa");

            entity.HasIndex(e => new { e.NrCnpjcpf, e.IdPessoa }, "IX_nrCNPJCPF_IdPessoa").HasFillFactor(90);

            entity.HasIndex(e => new { e.NrCnpjcpf, e.NmPessoa, e.IdEndereco }, "IX_nrCNPJCPF_nmPessoa_IdEndereco").HasFillFactor(90);

            entity.HasIndex(e => e.IdPessoa, "IX_tbGerPessoas_IdPessoa");

            entity.HasIndex(e => e.DsTipoPessoa, "IX_tbGerPessoas_dsTipoPessoa_inc_IdPess_nmPess_nmFant_nrCNPJCPF_nrTel_dsEmail_dtInc");

            entity.HasIndex(e => e.DsTipoPessoa, "IX_tbGerPessoas_dsTipoPessoa_inc_IdPessoa_nmPessoa_nrCNPJCPF_IdEndereco_nrPredial");

            entity.Property(e => e.DsAtividade)
                .IsUnicode(false)
                .HasColumnName("dsAtividade");
            entity.Property(e => e.DsCategoriaCadastramento)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsCategoriaCadastramento");
            entity.Property(e => e.DsComplEndereco)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsComplEndereco");
            entity.Property(e => e.DsEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsEmail");
            entity.Property(e => e.DsEntidadeProfissional)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsEntidadeProfissional");
            entity.Property(e => e.DsObjetoContratual)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsObjetoContratual");
            entity.Property(e => e.DsObservacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsObservacao");
            entity.Property(e => e.DsOrgaoExp)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsOrgaoExp");
            entity.Property(e => e.DsOrigemCadastro)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("dsOrigemCadastro");
            entity.Property(e => e.DsSite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsSite");
            entity.Property(e => e.DsTipoPessoa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoPessoa");
            entity.Property(e => e.DsufExp)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsufExp");
            entity.Property(e => e.DtAlteracao)
                .HasColumnType("datetime")
                .HasColumnName("dtAlteracao");
            entity.Property(e => e.DtBaseTce)
                .HasColumnType("datetime")
                .HasColumnName("dtBaseTCE");
            entity.Property(e => e.DtEmissaoRg)
                .HasColumnType("datetime")
                .HasColumnName("dtEmissaoRG");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtNascimento)
                .HasColumnType("datetime")
                .HasColumnName("dtNascimento");
            entity.Property(e => e.DtRegistroJuntaComercial)
                .HasColumnType("datetime")
                .HasColumnName("dtRegistroJuntaComercial");
            entity.Property(e => e.FlMicroEmpresa)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flMicroEmpresa");
            entity.Property(e => e.FlTratamentoDiferenciado)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flTratamentoDiferenciado");
            entity.Property(e => e.NmFantasia)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmFantasia");
            entity.Property(e => e.NmPessoa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmPessoa");
            entity.Property(e => e.NrCnpjcpf)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrCNPJCPF");
            entity.Property(e => e.NrFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nrFax");
            entity.Property(e => e.NrIlcorrente)
                .HasColumnType("money")
                .HasColumnName("nrILCorrente");
            entity.Property(e => e.NrIlglobal)
                .HasColumnType("money")
                .HasColumnName("nrILGlobal");
            entity.Property(e => e.NrPredial)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("nrPredial");
            entity.Property(e => e.NrRegistroJuntaComercial)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrRegistroJuntaComercial");
            entity.Property(e => e.NrRgIe)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrRg_IE");
            entity.Property(e => e.NrSolvenciaGeral)
                .HasColumnType("money")
                .HasColumnName("nrSolvenciaGeral");
            entity.Property(e => e.NrTelefones)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nrTelefones");
            entity.Property(e => e.VlCapitalSocial)
                .HasColumnType("money")
                .HasColumnName("vlCapitalSocial");
            entity.Property(e => e.VlPatrimonioLiquido)
                .HasColumnType("money")
                .HasColumnName("vlPatrimonioLiquido");

            entity.HasOne(d => d.IdEnderecoNavigation).WithMany(p => p.TbGerPessoas)
                .HasForeignKey(d => d.IdEndereco)
                .HasConstraintName("FK_tbGerPessoas_tbGerEnderecos");
        });

        modelBuilder.Entity<TbGerPessoasAlteraco>(entity =>
        {
            entity.HasKey(e => e.IdPessoaAlteracao);

            entity.ToTable("tbGerPessoasAlteracoes");

            entity.Property(e => e.DsMotivo)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.Dslogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dslogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtInicioVigencia)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioVigencia");
            entity.Property(e => e.NmFantasia)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmFantasia");
            entity.Property(e => e.NmFantasiaAnterior)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmFantasiaAnterior");
            entity.Property(e => e.NmRazaoSocial)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmRazaoSocial");
            entity.Property(e => e.NmRazaoSocialAnterior)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmRazaoSocialAnterior");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbGerPessoasAlteracos)
                .HasForeignKey(d => d.IdPessoa)
                .HasConstraintName("FK_tbGerPessoasAlteracoes_tbGerPessoas");
        });

        modelBuilder.Entity<TbGerPessoasAtributo>(entity =>
        {
            entity.HasKey(e => new { e.IdPessoa, e.IdAtributo });

            entity.ToTable("tbGerPessoasAtributos");

            entity.Property(e => e.IdAtributo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("idAtributo");
            entity.Property(e => e.VlAtributo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("vlAtributo");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbGerPessoasAtributos)
                .HasForeignKey(d => d.IdPessoa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbGerPessoasAtributos_tbGerPessoas");
        });

        modelBuilder.Entity<TbGerPessoasCategoria>(entity =>
        {
            entity.HasKey(e => e.IdCategoriaPessoa).HasName("PK_TbGerPessoasCategorias_1");

            entity.ToTable("tbGerPessoasCategorias");

            entity.HasOne(d => d.IdCategoriaNavigation).WithMany(p => p.TbGerPessoasCategoria)
                .HasForeignKey(d => d.IdCategoria)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TbGerPessoasCategorias_tbGerCategoriasPessoas");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbGerPessoasCategoria)
                .HasForeignKey(d => d.IdPessoa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TbGerPessoasCategorias_tbGerPessoas");
        });

        modelBuilder.Entity<TbGerPessoasEnviadasTce>(entity =>
        {
            entity.HasKey(e => e.IdEnvio);

            entity.ToTable("tbGerPessoasEnviadasTCE");

            entity.HasIndex(e => new { e.IdEmpresa, e.DtEnvio, e.IdPessoa }, "IX_tbGerPessoasEnviadasTCE_idEmpresa_dtEnvio_IdPessoa");

            entity.Property(e => e.IdEnvio).HasColumnName("idEnvio");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("date")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.IdEmpresa).HasColumnName("idEmpresa");
        });

        modelBuilder.Entity<TbGerPessoasResponsavel>(entity =>
        {
            entity.HasKey(e => e.IdPessoaResponsavel);

            entity.ToTable("tbGerPessoasResponsavel");

            entity.HasIndex(e => e.IdPessoa, "IX_tbGerPessoasResponsavel_IdPessoa");

            entity.Property(e => e.DsCargo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsCargo");
            entity.Property(e => e.DsProfissao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsProfissao");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtRegContrato)
                .HasColumnType("datetime")
                .HasColumnName("dtRegContrato");
            entity.Property(e => e.IdTipoCargo).HasColumnName("idTipoCargo");
            entity.Property(e => e.IdTipoRegistro).HasColumnName("idTipoRegistro");
            entity.Property(e => e.NrRegContrato)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrRegContrato");
            entity.Property(e => e.NrRegistroProfissional)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrRegistroProfissional");
        });

        modelBuilder.Entity<TbGerPrazosEntrega>(entity =>
        {
            entity.HasKey(e => e.IdPrazoEntrega);

            entity.ToTable("tbGerPrazosEntrega");

            entity.Property(e => e.DsPrazoEntrega)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsPrazoEntrega");
            entity.Property(e => e.NrDias).HasColumnName("nrDias");
        });

        modelBuilder.Entity<TbGerServidore>(entity =>
        {
            entity.HasKey(e => e.IdServidor).HasName("PK_tbOrcServidores");

            entity.ToTable("tbGerServidores");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMatricula)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsMatricula");
            entity.Property(e => e.DsTipoDoc)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("dsTipoDoc");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.DtDesativacao)
                .HasColumnType("datetime")
                .HasColumnName("dtDesativacao");
            entity.Property(e => e.NmServidor)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmServidor");
            entity.Property(e => e.NrRegProfissional)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrRegProfissional");
            entity.Property(e => e.NrRgCpf)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrRG_CPF");
        });

        modelBuilder.Entity<TbGerServidoresContaContabil>(entity =>
        {
            entity.HasKey(e => e.IdServidorContaContabil);

            entity.ToTable("tbGerServidoresContaContabil");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLoginAlteracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginAlteracao");
            entity.Property(e => e.DsLoginInclusao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginInclusao");
            entity.Property(e => e.DtAlteracao)
                .HasColumnType("datetime")
                .HasColumnName("dtAlteracao");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
        });

        modelBuilder.Entity<TbGerTipoInvestimento>(entity =>
        {
            entity.HasKey(e => e.IdTipoInvestimento);

            entity.ToTable("tbGerTipoInvestimentos");

            entity.Property(e => e.IdTipoInvestimento).ValueGeneratedNever();
            entity.Property(e => e.DsTipoInvstimento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoInvstimento");
            entity.Property(e => e.FlPrevidencia)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPrevidencia");
        });

        modelBuilder.Entity<TbGerTiposAreaConsorcio>(entity =>
        {
            entity.HasKey(e => e.IdTipoAreaConsorcio);

            entity.ToTable("tbGerTiposAreaConsorcio");

            entity.Property(e => e.IdTipoAreaConsorcio)
                .ValueGeneratedNever()
                .HasColumnName("idTipoAreaConsorcio");
            entity.Property(e => e.DsTipoAreaConsorcio)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoAreaConsorcio");
        });

        modelBuilder.Entity<TbGerTiposBaixaResponsavel>(entity =>
        {
            entity.HasKey(e => e.IdTipoBaixa);

            entity.ToTable("tbGerTiposBaixaResponsavel");

            entity.Property(e => e.IdTipoBaixa)
                .ValueGeneratedNever()
                .HasColumnName("idTipoBaixa");
            entity.Property(e => e.DsTipoBaixa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoBaixa");
        });

        modelBuilder.Entity<TbGerTiposCargoFuncao>(entity =>
        {
            entity.HasKey(e => e.IdTipoCargoFuncao);

            entity.ToTable("tbGerTiposCargoFuncao");

            entity.Property(e => e.IdTipoCargoFuncao)
                .ValueGeneratedNever()
                .HasColumnName("idTipoCargoFuncao");
            entity.Property(e => e.DsTipoCargoFuncao)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("dsTipoCargoFuncao");
        });

        modelBuilder.Entity<TbGerTiposContaBancarium>(entity =>
        {
            entity.HasKey(e => e.IdTipoContaBancaria);

            entity.ToTable("tbGerTiposContaBancaria");

            entity.Property(e => e.IdTipoContaBancaria)
                .ValueGeneratedNever()
                .HasColumnName("idTipoContaBancaria");
            entity.Property(e => e.DsTipoContaBancaria)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoContaBancaria");
        });

        modelBuilder.Entity<TbGerTiposNaturezaJuridicaConsorcio>(entity =>
        {
            entity.HasKey(e => e.IdTipoNaturezaJuridica);

            entity.ToTable("tbGerTiposNaturezaJuridicaConsorcio");

            entity.Property(e => e.IdTipoNaturezaJuridica)
                .ValueGeneratedNever()
                .HasColumnName("idTipoNaturezaJuridica");
            entity.Property(e => e.DsTipoNaturezaJuridica)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoNaturezaJuridica");
        });

        modelBuilder.Entity<TbGerTiposOrgaoOficial>(entity =>
        {
            entity.HasKey(e => e.IdTipoOrgaoOficial).HasName("PK__tbGerTip__0FAB72812E3E39D8");

            entity.ToTable("tbGerTiposOrgaoOficial");

            entity.Property(e => e.IdTipoOrgaoOficial)
                .ValueGeneratedNever()
                .HasColumnName("idTipoOrgaoOficial");
            entity.Property(e => e.DsTipoOrgaoOficial)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoOrgaoOficial");
        });

        modelBuilder.Entity<TbGerTiposRegistroQuadroSocietarioEmpresa>(entity =>
        {
            entity.HasKey(e => e.IdTipoRegistroQuadroSocietarioEmpresa);

            entity.ToTable("tbGerTiposRegistroQuadroSocietarioEmpresas");

            entity.Property(e => e.IdTipoRegistroQuadroSocietarioEmpresa)
                .ValueGeneratedNever()
                .HasColumnName("idTipoRegistroQuadroSocietarioEmpresa");
            entity.Property(e => e.DsTipoRegistroQuadroSocietarioEmpresa)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("dsTipoRegistroQuadroSocietarioEmpresa");
        });

        modelBuilder.Entity<TbIntIntegracaoTributario>(entity =>
        {
            entity.HasKey(e => e.IdLancamento);

            entity.ToTable("tbIntIntegracaoTributario");

            entity.Property(e => e.IdLancamento).HasColumnName("idLancamento");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdReceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsCredito)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsCredito");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtLancamento)
                .HasColumnType("date")
                .HasColumnName("dtLancamento");
            entity.Property(e => e.TpCredito)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpCredito");
            entity.Property(e => e.TpLancamento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpLancamento");
            entity.Property(e => e.VlLancamento)
                .HasColumnType("money")
                .HasColumnName("vlLancamento");
        });

        modelBuilder.Entity<TbIntObjetosPatrimonio>(entity =>
        {
            entity.HasKey(e => new { e.NmObjeto, e.IdObjeto });

            entity.ToTable("tbIntObjetosPatrimonio");

            entity.Property(e => e.NmObjeto)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nmObjeto");
            entity.Property(e => e.IdObjeto).HasColumnName("idObjeto");
            entity.Property(e => e.DtIntegracao)
                .HasColumnType("datetime")
                .HasColumnName("dtIntegracao");
            entity.Property(e => e.IdEmpresa).HasColumnName("idEmpresa");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<TbIntPatrimonioMovimentaco>(entity =>
        {
            entity.HasKey(e => e.IdMovimento);

            entity.ToTable("tbIntPatrimonioMovimentacoes");

            entity.Property(e => e.IdMovimento).HasColumnName("idMovimento");
            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdNaturezaItem)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdNaturezaItem");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.IdBem).HasColumnName("idBem");
            entity.Property(e => e.IdLancPatrimonio).HasColumnName("idLancPatrimonio");
            entity.Property(e => e.TpBem)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpBem");
            entity.Property(e => e.TpOperacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("tpOperacao");
            entity.Property(e => e.VlMovimento)
                .HasColumnType("money")
                .HasColumnName("vlMovimento");
        });

        modelBuilder.Entity<TbIpmContribuico>(entity =>
        {
            entity.HasKey(e => e.IdGuia);

            entity.ToTable("tbIpmContribuicoes");

            entity.Property(e => e.IdGuia).ValueGeneratedNever();
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.DtContribuicao)
                .HasColumnType("datetime")
                .HasColumnName("dtContribuicao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdCcarrecadadora).HasColumnName("IdCCArrecadadora");
            entity.Property(e => e.IdCcfavorecido).HasColumnName("IdCCFavorecido");
            entity.Property(e => e.IdCcgrafica).HasColumnName("IdCCGrafica");
            entity.Property(e => e.VlContribuicao)
                .HasColumnType("money")
                .HasColumnName("vlContribuicao");
        });

        modelBuilder.Entity<TbIpmEventoRubrica>(entity =>
        {
            entity.HasKey(e => e.IdMovimento);

            entity.ToTable("tbIpmEventoRubrica");

            entity.Property(e => e.DsTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipo");
            entity.Property(e => e.DsTipoCalculo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoCalculo");
            entity.Property(e => e.FlProporcionaliza)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flProporcionaliza");
            entity.Property(e => e.FlRemessaContribuinte)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flRemessaContribuinte");
            entity.Property(e => e.FlRemessaEfetivo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flRemessaEfetivo");
            entity.Property(e => e.IdEnvento)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.NmEvento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmEvento");
            entity.Property(e => e.NrLei).HasColumnName("nrLei");
        });

        modelBuilder.Entity<TbIpmFinanceiroFolha>(entity =>
        {
            entity.HasKey(e => e.IdMovimento);

            entity.ToTable("tbIpmFinanceiroFolha");

            entity.Property(e => e.DsReferencia)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsReferencia");
            entity.Property(e => e.DsReferenciaTotal)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsReferenciaTotal");
            entity.Property(e => e.IdEvento)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.NrTotal)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nrTotal");
            entity.Property(e => e.VlEvento)
                .HasColumnType("money")
                .HasColumnName("vlEvento");
        });

        modelBuilder.Entity<TbIpmGuiaRecolhimento>(entity =>
        {
            entity.HasKey(e => e.IdGuiaRecolhimento);

            entity.ToTable("tbIpmGuiaRecolhimento");

            entity.Property(e => e.CdGuia)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("cdGuia");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsJustificativa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsJustificativa");
            entity.Property(e => e.DsLoginAnulacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginAnulacao");
            entity.Property(e => e.DsLoginAutorizacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginAutorizacao");
            entity.Property(e => e.DsObservacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsObservacao");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.DsTipoPlano)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoPlano");
            entity.Property(e => e.DsTipoReceita)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoReceita");
            entity.Property(e => e.DtAnulacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulacao");
            entity.Property(e => e.DtAutorizacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAutorizacao");
            entity.Property(e => e.IdCc).HasColumnName("IdCC");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.NrQtdeServidores).HasColumnName("nrQtdeServidores");
            entity.Property(e => e.VlBaseCalculo)
                .HasColumnType("money")
                .HasColumnName("vlBaseCalculo");
            entity.Property(e => e.VlDeclarado)
                .HasColumnType("money")
                .HasColumnName("vlDeclarado");
            entity.Property(e => e.VlDeclaradoAlterado)
                .HasColumnType("money")
                .HasColumnName("vlDeclaradoAlterado");
            entity.Property(e => e.VlPago)
                .HasColumnType("money")
                .HasColumnName("vlPago");
        });

        modelBuilder.Entity<TbIpmOrgaoFolha>(entity =>
        {
            entity.HasKey(e => e.IdOrgao);

            entity.ToTable("tbIpmOrgaoFolha");

            entity.Property(e => e.IdOrgao).ValueGeneratedNever();
            entity.Property(e => e.DsBairro)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("dsBairro");
            entity.Property(e => e.DsCep)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("dsCep");
            entity.Property(e => e.DsEmail)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsEmail");
            entity.Property(e => e.DsEmailResponsavel)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsEmailResponsavel");
            entity.Property(e => e.DsEndereco)
                .HasMaxLength(75)
                .IsUnicode(false)
                .HasColumnName("dsEndereco");
            entity.Property(e => e.NmOrgao)
                .HasMaxLength(75)
                .IsUnicode(false)
                .HasColumnName("nmOrgao");
            entity.Property(e => e.NmResponsavel)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nmResponsavel");
            entity.Property(e => e.NrCnpj)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrCNPJ");
            entity.Property(e => e.NrFax)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrFax");
            entity.Property(e => e.NrFaxResponsavel)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrFaxResponsavel");
            entity.Property(e => e.NrPoder).HasColumnName("nrPoder");
            entity.Property(e => e.NrTelefone)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("nrTelefone");
            entity.Property(e => e.NrTelefoneResponsavel)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("nrTelefoneResponsavel");
        });

        modelBuilder.Entity<TbIpmPessoaFolha>(entity =>
        {
            entity.HasKey(e => e.IdPessoa);

            entity.ToTable("tbIpmPessoaFolha");

            entity.Property(e => e.IdPessoa).ValueGeneratedNever();
            entity.Property(e => e.DsBairro)
                .HasMaxLength(75)
                .IsUnicode(false)
                .HasColumnName("dsBairro");
            entity.Property(e => e.DsCidade)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsCidade");
            entity.Property(e => e.DsEmail)
                .HasMaxLength(75)
                .IsUnicode(false)
                .HasColumnName("dsEmail");
            entity.Property(e => e.DsEstadoCivil).HasColumnName("dsEstadoCivil");
            entity.Property(e => e.DsLocalExpedidorCtps)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("dsLocalExpedidorCTPS");
            entity.Property(e => e.DsLogradouro)
                .HasMaxLength(75)
                .IsUnicode(false)
                .HasColumnName("dsLogradouro");
            entity.Property(e => e.DsNaturalidade)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsNaturalidade");
            entity.Property(e => e.DsOrgaoExpedidorRg)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("dsOrgaoExpedidorRG");
            entity.Property(e => e.DsUf)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsUF");
            entity.Property(e => e.DsUfctps)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsUFCTPS");
            entity.Property(e => e.DsUfnatural)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsUFNatural");
            entity.Property(e => e.DtEmissaoCtps)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dtEmissaoCTPS");
            entity.Property(e => e.DtEmissaoRg)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dtEmissaoRG");
            entity.Property(e => e.DtNascimento)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dtNascimento");
            entity.Property(e => e.FlSexo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("flSexo");
            entity.Property(e => e.NmMae)
                .HasMaxLength(75)
                .IsUnicode(false)
                .HasColumnName("nmMae");
            entity.Property(e => e.NmPai)
                .HasMaxLength(75)
                .IsUnicode(false)
                .HasColumnName("nmPai");
            entity.Property(e => e.NmPessoa)
                .HasMaxLength(75)
                .IsUnicode(false)
                .HasColumnName("nmPessoa");
            entity.Property(e => e.NrCep)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("nrCep");
            entity.Property(e => e.NrCpf)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrCPF");
            entity.Property(e => e.NrCtps)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrCTPS");
            entity.Property(e => e.NrFoneCelular)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrFoneCelular");
            entity.Property(e => e.NrFoneComercial)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrFoneComercial");
            entity.Property(e => e.NrFoneResidencial)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrFoneResidencial");
            entity.Property(e => e.NrPis)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrPIS");
            entity.Property(e => e.NrPredial)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("nrPredial");
            entity.Property(e => e.NrRg)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrRG");
            entity.Property(e => e.NrSecao)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("nrSecao");
            entity.Property(e => e.NrSerieCtps)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("nrSerieCTPS");
            entity.Property(e => e.NrTitulo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrTitulo");
            entity.Property(e => e.NrZona)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("nrZona");
        });

        modelBuilder.Entity<TbIpmSeguradoFolha>(entity =>
        {
            entity.HasKey(e => e.IdSegurado);

            entity.ToTable("tbIpmSeguradoFolha");

            entity.Property(e => e.IdSegurado).ValueGeneratedNever();
            entity.Property(e => e.CdMatricula)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("cdMatricula");
            entity.Property(e => e.DsCategoria).HasColumnName("dsCategoria");
            entity.Property(e => e.DsMotivoExclusao)
                .HasMaxLength(75)
                .IsUnicode(false)
                .HasColumnName("dsMotivoExclusao");
            entity.Property(e => e.DsSituacao).HasColumnName("dsSituacao");
            entity.Property(e => e.DtAdmissao)
                .HasColumnType("datetime")
                .HasColumnName("dtAdmissao");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.DtExclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtExclusao");
            entity.Property(e => e.DtSituacao)
                .HasColumnType("datetime")
                .HasColumnName("dtSituacao");
            entity.Property(e => e.Excluido)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdCargo)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.IdFonte)
                .HasMaxLength(30)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TbIpmTipoConsignacao>(entity =>
        {
            entity.HasKey(e => e.IdTipoConsignacao);

            entity.ToTable("tbIpmTipoConsignacao");

            entity.Property(e => e.IdTipoConsignacao).ValueGeneratedNever();
            entity.Property(e => e.DsTipoPlano)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoPlano");
            entity.Property(e => e.FlRepercuteGuia)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flRepercuteGuia");
        });

        modelBuilder.Entity<TbIpmUnidadeFolha>(entity =>
        {
            entity.HasKey(e => e.IdUnidade);

            entity.ToTable("tbIpmUnidadeFolha");

            entity.Property(e => e.IdUnidade).ValueGeneratedNever();
            entity.Property(e => e.NmUnidade)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmUnidade");
        });

        modelBuilder.Entity<TbIpmUnidadeGiiG>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbIpmUnidadeGiiG");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
            entity.Property(e => e.NmUnidade)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmUnidade");
        });

        modelBuilder.Entity<TbLdoCompMetasAtuaisExercAnterior>(entity =>
        {
            entity.HasKey(e => e.IdCompMetasAtuais);

            entity.ToTable("tbLdoCompMetasAtuaisExercAnterior");

            entity.Property(e => e.NrAnoLdo).HasColumnName("nrAnoLDO");
            entity.Property(e => e.NrAnoReferencia).HasColumnName("nrAnoReferencia");
            entity.Property(e => e.VlDespPrimConstante)
                .HasColumnType("money")
                .HasColumnName("vlDespPrimConstante");
            entity.Property(e => e.VlDespPrimCorrente)
                .HasColumnType("money")
                .HasColumnName("vlDespPrimCorrente");
            entity.Property(e => e.VlDespTotalConstante)
                .HasColumnType("money")
                .HasColumnName("vlDespTotalConstante");
            entity.Property(e => e.VlDespTotalCorrente)
                .HasColumnType("money")
                .HasColumnName("vlDespTotalCorrente");
            entity.Property(e => e.VlDivConsLiqConstante)
                .HasColumnType("money")
                .HasColumnName("vlDivConsLiqConstante");
            entity.Property(e => e.VlDivConsLiqCorrente)
                .HasColumnType("money")
                .HasColumnName("vlDivConsLiqCorrente");
            entity.Property(e => e.VlDivPublicaConstante)
                .HasColumnType("money")
                .HasColumnName("vlDivPublicaConstante");
            entity.Property(e => e.VlDivPublicaCorrente)
                .HasColumnType("money")
                .HasColumnName("vlDivPublicaCorrente");
            entity.Property(e => e.VlRecPrimConstante)
                .HasColumnType("money")
                .HasColumnName("vlRecPrimConstante");
            entity.Property(e => e.VlRecPrimCorrente)
                .HasColumnType("money")
                .HasColumnName("vlRecPrimCorrente");
            entity.Property(e => e.VlRecTotalConstante)
                .HasColumnType("money")
                .HasColumnName("vlRecTotalConstante");
            entity.Property(e => e.VlRecTotalCorrente)
                .HasColumnType("money")
                .HasColumnName("vlRecTotalCorrente");
            entity.Property(e => e.VlResNomConstante)
                .HasColumnType("money")
                .HasColumnName("vlResNomConstante");
            entity.Property(e => e.VlResNomCorrente)
                .HasColumnType("money")
                .HasColumnName("vlResNomCorrente");
        });

        modelBuilder.Entity<TbLdoCronogFinContingencium>(entity =>
        {
            entity.HasKey(e => e.IdCronogFinReserva);

            entity.ToTable("tbLdoCronogFinContingencia");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrBimestreLrf).HasColumnName("nrBimestreLRF");
            entity.Property(e => e.VlReservaContingencia)
                .HasColumnType("money")
                .HasColumnName("vlReservaContingencia");
        });

        modelBuilder.Entity<TbLdoCronogFinGrupoFonte>(entity =>
        {
            entity.HasKey(e => e.IdCronogFinGrupFonte).HasName("PK_tbLdoCronogFinanceiroPorGrupoFonte");

            entity.ToTable("tbLdoCronogFinGrupoFonte");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrBimestreLrf).HasColumnName("nrBimestreLrf");
            entity.Property(e => e.VlDespCapital)
                .HasColumnType("money")
                .HasColumnName("vlDespCapital");
            entity.Property(e => e.VlDespCapitalIntra)
                .HasColumnType("money")
                .HasColumnName("vlDespCapitalIntra");
            entity.Property(e => e.VlDespConsignacoes)
                .HasColumnType("money")
                .HasColumnName("vlDespConsignacoes");
            entity.Property(e => e.VlDespCorrentes)
                .HasColumnType("money")
                .HasColumnName("vlDespCorrentes");
            entity.Property(e => e.VlDespCorrentesIntra)
                .HasColumnType("money")
                .HasColumnName("vlDespCorrentesIntra");
            entity.Property(e => e.VlDespEgressos)
                .HasColumnType("money")
                .HasColumnName("vlDespEgressos");
            entity.Property(e => e.VlDespRap)
                .HasColumnType("money")
                .HasColumnName("vlDespRap");
            entity.Property(e => e.VlRecCapital)
                .HasColumnType("money")
                .HasColumnName("vlRecCapital");
            entity.Property(e => e.VlRecCapitalIntra)
                .HasColumnType("money")
                .HasColumnName("vlRecCapitalIntra");
            entity.Property(e => e.VlRecCorrentes)
                .HasColumnType("money")
                .HasColumnName("vlRecCorrentes");
            entity.Property(e => e.VlRecCorrentesIntra)
                .HasColumnType("money")
                .HasColumnName("vlRecCorrentesIntra");
            entity.Property(e => e.VlRecDisponibilidade)
                .HasColumnType("money")
                .HasColumnName("vlRecDisponibilidade");
            entity.Property(e => e.VlRecIngressos)
                .HasColumnType("money")
                .HasColumnName("vlRecIngressos");
        });

        modelBuilder.Entity<TbLdoDemCumpMetasExercAnterior>(entity =>
        {
            entity.HasKey(e => e.IdMetasExercAnterior);

            entity.ToTable("tbLdoDemCumpMetasExercAnterior");

            entity.Property(e => e.NrAnoLdo).HasColumnName("nrAnoLDO");
            entity.Property(e => e.NrAnoReferencia).HasColumnName("nrAnoReferencia");
            entity.Property(e => e.VlDesPrimPrevista)
                .HasColumnType("money")
                .HasColumnName("vlDesPrimPrevista");
            entity.Property(e => e.VlDesPrimPrevistaPercPib)
                .HasColumnType("money")
                .HasColumnName("vlDesPrimPrevistaPercPIB");
            entity.Property(e => e.VlDesPrimRealizadaPercPib)
                .HasColumnType("money")
                .HasColumnName("vlDesPrimRealizadaPercPIB");
            entity.Property(e => e.VlDesTotalPrevista)
                .HasColumnType("money")
                .HasColumnName("vlDesTotalPrevista");
            entity.Property(e => e.VlDesTotalPrevistaPercPib)
                .HasColumnType("money")
                .HasColumnName("vlDesTotalPrevistaPercPIB");
            entity.Property(e => e.VlDesTotalRealizadaPercPib)
                .HasColumnType("money")
                .HasColumnName("vlDesTotalRealizadaPercPIB");
            entity.Property(e => e.VlDespPrimRealizada)
                .HasColumnType("money")
                .HasColumnName("vlDespPrimRealizada");
            entity.Property(e => e.VlDespesaTotalRealizada)
                .HasColumnType("money")
                .HasColumnName("vlDespesaTotalRealizada");
            entity.Property(e => e.VlDivConsLiqPrevista)
                .HasColumnType("money")
                .HasColumnName("vlDivConsLiqPrevista");
            entity.Property(e => e.VlDivConsLiqPrevistaPercPib)
                .HasColumnType("money")
                .HasColumnName("vlDivConsLiqPrevistaPercPIB");
            entity.Property(e => e.VlDivConsLiqRealizada)
                .HasColumnType("money")
                .HasColumnName("vlDivConsLiqRealizada");
            entity.Property(e => e.VlDivConsLiqRealizadaPercPib)
                .HasColumnType("money")
                .HasColumnName("vlDivConsLiqRealizadaPercPIB");
            entity.Property(e => e.VlDivConsPrevista)
                .HasColumnType("money")
                .HasColumnName("vlDivConsPrevista");
            entity.Property(e => e.VlDivConsPrevistaPercPib)
                .HasColumnType("money")
                .HasColumnName("vlDivConsPrevistaPercPIB");
            entity.Property(e => e.VlDivConsRealizada)
                .HasColumnType("money")
                .HasColumnName("vlDivConsRealizada");
            entity.Property(e => e.VlDivConsRealizadaPercPib)
                .HasColumnType("money")
                .HasColumnName("vlDivConsRealizadaPercPIB");
            entity.Property(e => e.VlRecPrimPrevista)
                .HasColumnType("money")
                .HasColumnName("vlRecPrimPrevista");
            entity.Property(e => e.VlRecPrimPrevistaPercPib)
                .HasColumnType("money")
                .HasColumnName("vlRecPrimPrevistaPercPIB");
            entity.Property(e => e.VlRecPrimRealizada)
                .HasColumnType("money")
                .HasColumnName("vlRecPrimRealizada");
            entity.Property(e => e.VlRecPrimRealizadaPercPib)
                .HasColumnType("money")
                .HasColumnName("vlRecPrimRealizadaPercPIB");
            entity.Property(e => e.VlRecTotalPrevista)
                .HasColumnType("money")
                .HasColumnName("vlRecTotalPrevista");
            entity.Property(e => e.VlRecTotalPrevistaPercPib)
                .HasColumnType("money")
                .HasColumnName("vlRecTotalPrevistaPercPIB");
            entity.Property(e => e.VlRecTotalRealizada)
                .HasColumnType("money")
                .HasColumnName("vlRecTotalRealizada");
            entity.Property(e => e.VlRecTotalRealizadaPercPib)
                .HasColumnType("money")
                .HasColumnName("vlRecTotalRealizadaPercPIB");
            entity.Property(e => e.VlResNomPrevisto)
                .HasColumnType("money")
                .HasColumnName("vlResNomPrevisto");
            entity.Property(e => e.VlResNomPrevistoPercPib)
                .HasColumnType("money")
                .HasColumnName("vlResNomPrevistoPercPIB");
            entity.Property(e => e.VlResNomRealizado)
                .HasColumnType("money")
                .HasColumnName("vlResNomRealizado");
            entity.Property(e => e.VlResNomRealizadoPercPib)
                .HasColumnType("money")
                .HasColumnName("vlResNomRealizadoPercPIB");
        });

        modelBuilder.Entity<TbLdoDemEvolucaoPatrimonioLiquido>(entity =>
        {
            entity.HasKey(e => e.IdPatrimonio);

            entity.ToTable("tbLdoDemEvolucaoPatrimonioLiquido");

            entity.Property(e => e.NrAnoLdo).HasColumnName("nrAnoLDO");
            entity.Property(e => e.NrAnoReferencia).HasColumnName("nrAnoReferencia");
            entity.Property(e => e.VlPatrimonioCapital)
                .HasColumnType("money")
                .HasColumnName("vlPatrimonioCapital");
            entity.Property(e => e.VlPatrimonioRegPrev)
                .HasColumnType("money")
                .HasColumnName("vlPatrimonioRegPrev");
            entity.Property(e => e.VlReservas)
                .HasColumnType("money")
                .HasColumnName("vlReservas");
            entity.Property(e => e.VlReservasRegPrev)
                .HasColumnType("money")
                .HasColumnName("vlReservasRegPrev");
            entity.Property(e => e.VlResultAcumulado)
                .HasColumnType("money")
                .HasColumnName("vlResultAcumulado");
            entity.Property(e => e.VlResultAcumuladoRegPrev)
                .HasColumnType("money")
                .HasColumnName("vlResultAcumuladoRegPrev");
        });

        modelBuilder.Entity<TbLdoDemEvolucaoReceitum>(entity =>
        {
            entity.HasKey(e => e.IdDemEvoReceita).HasName("PK_tbLdoDemEvolReceita");

            entity.ToTable("tbLdoDemEvolucaoReceita");

            entity.Property(e => e.DsMetodCalculo)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("dsMetodCalculo");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrAnoLdo).HasColumnName("nrAnoLdo");
            entity.Property(e => e.VlEstimAno1)
                .HasColumnType("money")
                .HasColumnName("vlEstimAno1");
            entity.Property(e => e.VlProjAno1)
                .HasColumnType("money")
                .HasColumnName("vlProjAno1");
            entity.Property(e => e.VlProjAno2)
                .HasColumnType("money")
                .HasColumnName("vlProjAno2");
            entity.Property(e => e.VlProjAnoRef)
                .HasColumnType("money")
                .HasColumnName("vlProjAnoRef");
            entity.Property(e => e.VlRealizAno2)
                .HasColumnType("money")
                .HasColumnName("vlRealizAno2");
            entity.Property(e => e.VlRealizAno3)
                .HasColumnType("money")
                .HasColumnName("vlRealizAno3");
        });

        modelBuilder.Entity<TbLdoDemExpansaoDespContinuada>(entity =>
        {
            entity.HasKey(e => e.IdExpContinuada);

            entity.ToTable("tbLdoDemExpansaoDespContinuadas");

            entity.Property(e => e.IdVersao).HasColumnName("idVersao");
            entity.Property(e => e.NrAnoLdo).HasColumnName("nrAnoLdo");
            entity.Property(e => e.VlAumentoReceita)
                .HasColumnType("money")
                .HasColumnName("vlAumentoReceita");
            entity.Property(e => e.VlNovasDocGeradasPpp)
                .HasColumnType("money")
                .HasColumnName("vlNovasDocGeradasPpp");
            entity.Property(e => e.VlNovasDocc)
                .HasColumnType("money")
                .HasColumnName("vlNovasDocc");
            entity.Property(e => e.VlRedPermDespesa)
                .HasColumnType("money")
                .HasColumnName("vlRedPermDespesa");
            entity.Property(e => e.VlTransfConstitucionais)
                .HasColumnType("money")
                .HasColumnName("vlTransfConstitucionais");
            entity.Property(e => e.VlTransfFundeb)
                .HasColumnType("money")
                .HasColumnName("vlTransfFundeb");
        });

        modelBuilder.Entity<TbLdoDemMetasAnuai>(entity =>
        {
            entity.HasKey(e => e.IdDemMetasAnuais);

            entity.ToTable("tbLdoDemMetasAnuais");

            entity.Property(e => e.IdVersao).HasColumnName("idVersao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrAnoLdo).HasColumnName("nrAnoLDO");
            entity.Property(e => e.NrAnoReferencia).HasColumnName("nrAnoReferencia");
            entity.Property(e => e.VlDespPrimConstante)
                .HasColumnType("money")
                .HasColumnName("vlDespPrimConstante");
            entity.Property(e => e.VlDespPrimCorrente)
                .HasColumnType("money")
                .HasColumnName("vlDespPrimCorrente");
            entity.Property(e => e.VlDespPrimPercPib)
                .HasColumnType("money")
                .HasColumnName("vlDespPrimPercPIB");
            entity.Property(e => e.VlDespPrimPppconstante)
                .HasColumnType("money")
                .HasColumnName("vlDespPrimPPPConstante");
            entity.Property(e => e.VlDespPrimPppcorrente)
                .HasColumnType("money")
                .HasColumnName("vlDespPrimPPPCorrente");
            entity.Property(e => e.VlDespPrimPpppercPib)
                .HasColumnType("money")
                .HasColumnName("vlDespPrimPPPpercPIB");
            entity.Property(e => e.VlDespTotalConstante)
                .HasColumnType("money")
                .HasColumnName("vlDespTotalConstante");
            entity.Property(e => e.VlDespTotalCorrente)
                .HasColumnType("money")
                .HasColumnName("vlDespTotalCorrente");
            entity.Property(e => e.VlDespTotalPercPib)
                .HasColumnType("money")
                .HasColumnName("vlDespTotalPercPIB");
            entity.Property(e => e.VlDivConsLiqConstante)
                .HasColumnType("money")
                .HasColumnName("vlDivConsLiqConstante");
            entity.Property(e => e.VlDivConsLiqCorrente)
                .HasColumnType("money")
                .HasColumnName("vlDivConsLiqCorrente");
            entity.Property(e => e.VlDivConsLiqPercPib)
                .HasColumnType("money")
                .HasColumnName("vlDivConsLiqPercPIB");
            entity.Property(e => e.VlDivPublicaConstante)
                .HasColumnType("money")
                .HasColumnName("vlDivPublicaConstante");
            entity.Property(e => e.VlDivPublicaCorrente)
                .HasColumnType("money")
                .HasColumnName("vlDivPublicaCorrente");
            entity.Property(e => e.VlDivPublicaPercPib)
                .HasColumnType("money")
                .HasColumnName("vlDivPublicaPercPIB");
            entity.Property(e => e.VlReTotalCorrente)
                .HasColumnType("money")
                .HasColumnName("vlReTotalCorrente");
            entity.Property(e => e.VlRecPrimConstante)
                .HasColumnType("money")
                .HasColumnName("vlRecPrimConstante");
            entity.Property(e => e.VlRecPrimCorrente)
                .HasColumnType("money")
                .HasColumnName("vlRecPrimCorrente");
            entity.Property(e => e.VlRecPrimPercPib)
                .HasColumnType("money")
                .HasColumnName("vlRecPrimPercPIB");
            entity.Property(e => e.VlRecPrimPppconstante)
                .HasColumnType("money")
                .HasColumnName("vlRecPrimPPPConstante");
            entity.Property(e => e.VlRecPrimPppcorrente)
                .HasColumnType("money")
                .HasColumnName("vlRecPrimPPPCorrente");
            entity.Property(e => e.VlRecPrimPpppercPib)
                .HasColumnType("money")
                .HasColumnName("vlRecPrimPPPpercPIB");
            entity.Property(e => e.VlRecTotalConstante)
                .HasColumnType("money")
                .HasColumnName("vlRecTotalConstante");
            entity.Property(e => e.VlRecTotalPercPib)
                .HasColumnType("money")
                .HasColumnName("vlRecTotalPercPIB");
            entity.Property(e => e.VlResNomConstante)
                .HasColumnType("money")
                .HasColumnName("vlResNomConstante");
            entity.Property(e => e.VlResNomCorrente)
                .HasColumnType("money")
                .HasColumnName("vlResNomCorrente");
            entity.Property(e => e.VlResNomPercPib)
                .HasColumnType("money")
                .HasColumnName("vlResNomPercPIB");
        });

        modelBuilder.Entity<TbLdoDemOrigAplicRecAlienacaoBen>(entity =>
        {
            entity.HasKey(e => e.IdAplicacao);

            entity.ToTable("tbLdoDemOrigAplicRecAlienacaoBens");

            entity.Property(e => e.NrAnoLdo).HasColumnName("nrAnoLDO");
            entity.Property(e => e.NrAnoReferencia).HasColumnName("nrAnoReferencia");
            entity.Property(e => e.VlDespAmortizacaoDivida)
                .HasColumnType("money")
                .HasColumnName("vlDespAmortizacaoDivida");
            entity.Property(e => e.VlDespInversoesFinanceiras)
                .HasColumnType("money")
                .HasColumnName("vlDespInversoesFinanceiras");
            entity.Property(e => e.VlDespInvestimetos)
                .HasColumnType("money")
                .HasColumnName("vlDespInvestimetos");
            entity.Property(e => e.VlDespRegProprioPrev)
                .HasColumnType("money")
                .HasColumnName("vlDespRegProprioPrev");
            entity.Property(e => e.VlRecAlienBensImoveis)
                .HasColumnType("money")
                .HasColumnName("vlRecAlienBensImoveis");
            entity.Property(e => e.VlRecAlienBensMoveis)
                .HasColumnType("money")
                .HasColumnName("vlRecAlienBensMoveis");
        });

        modelBuilder.Entity<TbLdoDemRenunciaReceitum>(entity =>
        {
            entity.HasKey(e => e.IdRenunciaReceita);

            entity.ToTable("tbLdoDemRenunciaReceita");

            entity.Property(e => e.DsCompensacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsCompensacao");
            entity.Property(e => e.DsSetorBeneficiario)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsSetorBeneficiario");
            entity.Property(e => e.IdTipoCredito).HasColumnName("idTipoCredito");
            entity.Property(e => e.IdTipoRenuncia).HasColumnName("idTipoRenuncia");
            entity.Property(e => e.IdVersao).HasColumnName("idVersao");
            entity.Property(e => e.NrAnoLdo).HasColumnName("nrAnoLDO");
            entity.Property(e => e.NrAnoReferencia).HasColumnName("nrAnoReferencia");
            entity.Property(e => e.VlRenuncia)
                .HasColumnType("money")
                .HasColumnName("vlRenuncia");

            entity.HasOne(d => d.IdTipoRenunciaNavigation).WithMany(p => p.TbLdoDemRenunciaReceita)
                .HasForeignKey(d => d.IdTipoRenuncia)
                .HasConstraintName("FK_tbLdoDemRenunciaReceita_tbLdoTiposRenuncia");
        });

        modelBuilder.Entity<TbLdoDemRiscosFiscai>(entity =>
        {
            entity.HasKey(e => e.IdDemRiscosFiscais).HasName("PK_tbldoDemonsRiscosFiscais");

            entity.ToTable("tbLdoDemRiscosFiscais");

            entity.Property(e => e.DsProvidencia)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsProvidencia");
            entity.Property(e => e.IdVersaoRisco).HasColumnName("idVersaoRisco");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrProvidencia).HasColumnName("nrProvidencia");
            entity.Property(e => e.VlEstimadoProvidencia)
                .HasColumnType("money")
                .HasColumnName("vlEstimadoProvidencia");
            entity.Property(e => e.VlEstimadoRisco)
                .HasColumnType("money")
                .HasColumnName("vlEstimadoRisco");

            entity.HasOne(d => d.IdRiscoNavigation).WithMany(p => p.TbLdoDemRiscosFiscais)
                .HasForeignKey(d => d.IdRisco)
                .HasConstraintName("FK_tbLdoDemonsRiscosFiscais_tbLdoTiposPassivosRiscos");
        });

        modelBuilder.Entity<TbLdoLimitesAnual>(entity =>
        {
            entity.HasKey(e => e.IdLimite).HasName("PK_TbLdoLimitesAnual");

            entity.ToTable("tbLdoLimitesAnual");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlLimite)
                .HasColumnType("money")
                .HasColumnName("vlLimite");

            entity.HasOne(d => d.IdEmpresaNavigation).WithMany(p => p.TbLdoLimitesAnuals)
                .HasForeignKey(d => d.IdEmpresa)
                .HasConstraintName("FK_TbLdoLimitesAnual_tbGerEmpresasGoverno");

            entity.HasOne(d => d.IdFonteNavigation).WithMany(p => p.TbLdoLimitesAnuals)
                .HasForeignKey(d => d.IdFonte)
                .HasConstraintName("FK_TbLdoLimitesAnual_tbOrcFontes");
        });

        modelBuilder.Entity<TbLdoMetasProgramasAcoesPpa>(entity =>
        {
            entity.HasKey(e => e.IdAcaoLdo);

            entity.ToTable("tbLdoMetasProgramasAcoesPpa");

            entity.Property(e => e.IdAcaoLdo).HasColumnName("IdAcaoLDO");
            entity.Property(e => e.DsLdoAcaoNotaExplicativa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsLdoAcaoNotaExplicativa");
            entity.Property(e => e.DsMotivoCancelamento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsMotivoCancelamento");
            entity.Property(e => e.DsTpComando)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTpComando");
            entity.Property(e => e.DtCancelamento)
                .HasColumnType("datetime")
                .HasColumnName("dtCancelamento");
            entity.Property(e => e.NrAnoLdo).HasColumnName("nrAnoLDO");
            entity.Property(e => e.NrLdoMetaFisica)
                .HasColumnType("numeric(16, 2)")
                .HasColumnName("nrLdoMetaFisica");
            entity.Property(e => e.VlLdoTotalOrdinario)
                .HasColumnType("money")
                .HasColumnName("vlLdoTotalOrdinario");
            entity.Property(e => e.VlLdoTotalVinculado)
                .HasColumnType("money")
                .HasColumnName("vlLdoTotalVinculado");

            entity.HasOne(d => d.IdAcaoNavigation).WithMany(p => p.TbLdoMetasProgramasAcoesPpas)
                .HasForeignKey(d => d.IdAcao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLdoMetasProgramasAcoesPpa_tbPpaProgramasAcoes");
        });

        modelBuilder.Entity<TbLdoModalidadeRenuncium>(entity =>
        {
            entity.HasKey(e => e.IdModalidade);

            entity.ToTable("tbLdoModalidadeRenuncia");

            entity.Property(e => e.CdModalidade)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdModalidade");
            entity.Property(e => e.DsModalidade)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("dsModalidade");
        });

        modelBuilder.Entity<TbLdoProjAtuarialRpp>(entity =>
        {
            entity.HasKey(e => e.IdProjAtuarial);

            entity.ToTable("tbLdoProjAtuarialRPPS");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrAnoLdo).HasColumnName("nrAnoLDO");
            entity.Property(e => e.VlDespesasPrev)
                .HasColumnType("money")
                .HasColumnName("vlDespesasPrev");
            entity.Property(e => e.VlReceitasPrev)
                .HasColumnType("money")
                .HasColumnName("vlReceitasPrev");
            entity.Property(e => e.VlSaldoFinExercicio)
                .HasColumnType("money")
                .HasColumnName("vlSaldoFinExercicio");
        });

        modelBuilder.Entity<TbLdoProjetosAndamento>(entity =>
        {
            entity.HasKey(e => e.IdProjeto);

            entity.ToTable("tbLdoProjetosAndamento");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrAnoLdo).HasColumnName("nrAnoLDO");
            entity.Property(e => e.NrExecOrcQte)
                .HasColumnType("money")
                .HasColumnName("nrExecOrcQte");
            entity.Property(e => e.NrSaldoExecQte)
                .HasColumnType("money")
                .HasColumnName("nrSaldoExecQte");
            entity.Property(e => e.VlExecOrcValor)
                .HasColumnType("money")
                .HasColumnName("vlExecOrcValor");
            entity.Property(e => e.VlPrevOrcQte)
                .HasColumnType("money")
                .HasColumnName("vlPrevOrcQte");
            entity.Property(e => e.VlPrevOrcValor)
                .HasColumnType("money")
                .HasColumnName("vlPrevOrcValor");
            entity.Property(e => e.VlSaldoExecValor)
                .HasColumnType("money")
                .HasColumnName("vlSaldoExecValor");
        });

        modelBuilder.Entity<TbLdoReceitasDespesasRpp>(entity =>
        {
            entity.HasKey(e => e.IdRecDspPrevidenciaria);

            entity.ToTable("tbLdoReceitasDespesasRPPS");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrAnoLdo).HasColumnName("nrAnoLDO");
            entity.Property(e => e.VlAlienacao)
                .HasColumnType("money")
                .HasColumnName("vlAlienacao");
            entity.Property(e => e.VlAmortizacao)
                .HasColumnType("money")
                .HasColumnName("vlAmortizacao");
            entity.Property(e => e.VlAporteCobInsufic)
                .HasColumnType("money")
                .HasColumnName("vlAporteCobInsufic");
            entity.Property(e => e.VlAporteDeficAtuarial)
                .HasColumnType("money")
                .HasColumnName("vlAporteDeficAtuarial");
            entity.Property(e => e.VlAporteDeficit)
                .HasColumnType("money")
                .HasColumnName("vlAporteDeficit");
            entity.Property(e => e.VlAporteReserva)
                .HasColumnType("money")
                .HasColumnName("vlAporteReserva");
            entity.Property(e => e.VlBensDireitos)
                .HasColumnType("money")
                .HasColumnName("vlBensDireitos");
            entity.Property(e => e.VlDeducaoReceita)
                .HasColumnType("money")
                .HasColumnName("vlDeducaoReceita");
            entity.Property(e => e.VlDeducoesReceita)
                .HasColumnType("money")
                .HasColumnName("vlDeducoesReceita");
            entity.Property(e => e.VlDemaisDespPrevid)
                .HasColumnType("money")
                .HasColumnName("vlDemaisDespPrevid");
            entity.Property(e => e.VlDemaisDespPrevidIntra)
                .HasColumnType("money")
                .HasColumnName("vlDemaisDespPrevidIntra");
            entity.Property(e => e.VlDemaisRecCorrentes)
                .HasColumnType("money")
                .HasColumnName("vlDemaisRecCorrentes");
            entity.Property(e => e.VlDespCapital)
                .HasColumnType("money")
                .HasColumnName("vlDespCapital");
            entity.Property(e => e.VlDespCorrente)
                .HasColumnType("money")
                .HasColumnName("vlDespCorrente");
            entity.Property(e => e.VlDespCorrentes)
                .HasColumnType("money")
                .HasColumnName("vlDespCorrentes");
            entity.Property(e => e.VlDespPessoalCivil)
                .HasColumnType("money")
                .HasColumnName("vlDespPessoalCivil");
            entity.Property(e => e.VlDespPessoalMilitar)
                .HasColumnType("money")
                .HasColumnName("vlDespPessoalMilitar");
            entity.Property(e => e.VlDespSegCompPrevid)
                .HasColumnType("money")
                .HasColumnName("vlDespSegCompPrevid");
            entity.Property(e => e.VlOutrasRecCapital)
                .HasColumnType("money")
                .HasColumnName("vlOutrasRecCapital");
            entity.Property(e => e.VlOutrasRecCorrentes)
                .HasColumnType("money")
                .HasColumnName("vlOutrasRecCorrentes");
            entity.Property(e => e.VlOutrosAportes)
                .HasColumnType("money")
                .HasColumnName("vlOutrosAportes");
            entity.Property(e => e.VlOutrosAportesFinanc)
                .HasColumnType("money")
                .HasColumnName("vlOutrosAportesFinanc");
            entity.Property(e => e.VlRecCapital)
                .HasColumnType("money")
                .HasColumnName("vlRecCapital");
            entity.Property(e => e.VlRecCompPrevid)
                .HasColumnType("money")
                .HasColumnName("vlRecCompPrevid");
            entity.Property(e => e.VlRecDeficit)
                .HasColumnType("money")
                .HasColumnName("vlRecDeficit");
            entity.Property(e => e.VlRecParc)
                .HasColumnType("money")
                .HasColumnName("vlRecParc");
            entity.Property(e => e.VlRecPatrCivil)
                .HasColumnType("money")
                .HasColumnName("vlRecPatrCivil");
            entity.Property(e => e.VlRecPatrMilitar)
                .HasColumnType("money")
                .HasColumnName("vlRecPatrMilitar");
            entity.Property(e => e.VlRecPatrimonial)
                .HasColumnType("money")
                .HasColumnName("vlRecPatrimonial");
            entity.Property(e => e.VlRecPatrimonialIntra)
                .HasColumnType("money")
                .HasColumnName("vlRecPatrimonialIntra");
            entity.Property(e => e.VlRecSegCivil)
                .HasColumnType("money")
                .HasColumnName("vlRecSegCivil");
            entity.Property(e => e.VlRecSegMilitar)
                .HasColumnType("money")
                .HasColumnName("vlRecSegMilitar");
            entity.Property(e => e.VlRecSegOutrasContrib)
                .HasColumnType("money")
                .HasColumnName("vlRecSegOutrasContrib");
            entity.Property(e => e.VlRecServicos)
                .HasColumnType("money")
                .HasColumnName("vlRecServicos");
            entity.Property(e => e.VlRecServicosIntra)
                .HasColumnType("money")
                .HasColumnName("vlRecServicosIntra");
            entity.Property(e => e.VlReservaRpps)
                .HasColumnType("money")
                .HasColumnName("VlReservaRPPS");
        });

        modelBuilder.Entity<TbLdoReceitasProjecao>(entity =>
        {
            entity.HasKey(e => e.IdReceita);

            entity.ToTable("tbLdoReceitasProjecao");

            entity.Property(e => e.CdReceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.DsReceita)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsReceita");
            entity.Property(e => e.FlTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flTipo");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<TbLdoTiposPassivosRisco>(entity =>
        {
            entity.HasKey(e => e.IdRisco);

            entity.ToTable("tbLdoTiposPassivosRiscos");

            entity.Property(e => e.IdRisco).ValueGeneratedNever();
            entity.Property(e => e.DsRisco)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsRisco");
        });

        modelBuilder.Entity<TbLdoTiposRenuncium>(entity =>
        {
            entity.HasKey(e => e.IdTipoRenuncia);

            entity.ToTable("tbLdoTiposRenuncia");

            entity.Property(e => e.IdTipoRenuncia)
                .ValueGeneratedNever()
                .HasColumnName("idTipoRenuncia");
            entity.Property(e => e.DsTipoRenuncia)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("dsTipoRenuncia");
        });

        modelBuilder.Entity<TbLicAtosNomeacaoComissao>(entity =>
        {
            entity.HasKey(e => e.IdAtoNomeacao);

            entity.ToTable("tbLicAtosNomeacaoComissao");

            entity.Property(e => e.CdComissao).HasColumnName("cdComissao");
            entity.Property(e => e.DtFimVigencia)
                .HasColumnType("datetime")
                .HasColumnName("dtFimVigencia");
            entity.Property(e => e.DtInicioVigencia)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioVigencia");
            entity.Property(e => e.DtPublicacaoAto)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoAto");
            entity.Property(e => e.IdLeiAto).HasColumnName("idLeiAto");
            entity.Property(e => e.IdTipoComissao).HasColumnName("idTipoComissao");
            entity.Property(e => e.NrAnoAto).HasColumnName("nrAnoAto");
            entity.Property(e => e.NrAtoNomeacao).HasColumnName("nrAtoNomeacao");

            entity.HasOne(d => d.IdTipoComissaoNavigation).WithMany(p => p.TbLicAtosNomeacaoComissaos)
                .HasForeignKey(d => d.IdTipoComissao)
                .HasConstraintName("FK_tbLicAtosNomeacaoComissao_tbLicTpComissao");
        });

        modelBuilder.Entity<TbLicAtosNomeacaoComissaoPessoa>(entity =>
        {
            entity.HasKey(e => e.IdAtoNomeacaoPessoa);

            entity.ToTable("tbLicAtosNomeacaoComissaoPessoas");

            entity.Property(e => e.DsCargo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("dsCargo");

            entity.HasOne(d => d.IdAtoNomeacaoNavigation).WithMany(p => p.TbLicAtosNomeacaoComissaoPessoas)
                .HasForeignKey(d => d.IdAtoNomeacao)
                .HasConstraintName("FK_tbLicAtosNomeacaoComissaoPessoas_tbLicAtosNomeacaoComissao");

            entity.HasOne(d => d.IdNaturezaCargoServidorNavigation).WithMany(p => p.TbLicAtosNomeacaoComissaoPessoas)
                .HasForeignKey(d => d.IdNaturezaCargoServidor)
                .HasConstraintName("FK_tbLicAtosNomeacaoComissaoPessoas_tbLicNaturezasCargosServidores");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbLicAtosNomeacaoComissaoPessoas)
                .HasForeignKey(d => d.IdPessoa)
                .HasConstraintName("FK_tbLicAtosNomeacaoComissaoPessoas_tbGerPessoas");

            entity.HasOne(d => d.IdTipoAtribuicaoComissaoNavigation).WithMany(p => p.TbLicAtosNomeacaoComissaoPessoas)
                .HasForeignKey(d => d.IdTipoAtribuicaoComissao)
                .HasConstraintName("FK_tbLicAtosNomeacaoComissaoPessoas_tbLicTiposAtribuicaoComissoes");
        });

        modelBuilder.Entity<TbLicClassificacoesObjeto>(entity =>
        {
            entity.HasKey(e => e.IdClassificacaoObjeto).HasName("PK_tbLicClassificacaoObjetos");

            entity.ToTable("tbLicClassificacoesObjetos");

            entity.Property(e => e.IdClassificacaoObjeto).ValueGeneratedNever();
            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.DsClassificacaoObjeto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsClassificacaoObjeto");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSigla");
            entity.Property(e => e.FlAtivo).HasColumnName("flAtivo");
            entity.Property(e => e.FlPadraoTce)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPadraoTCE");
            entity.Property(e => e.FlUsaEmpenho)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flUsaEmpenho");

            entity.HasMany(d => d.IdRegimeExecucaos).WithMany(p => p.IdClassificacaoObjetos)
                .UsingEntity<Dictionary<string, object>>(
                    "TbLicClassificacaoRegimeExecucao",
                    r => r.HasOne<TbLicRegimesExecuco>().WithMany()
                        .HasForeignKey("IdRegimeExecucao")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbLicClassificacaoRegimeExecucao_tbLicRegimesExecucoes"),
                    l => l.HasOne<TbLicClassificacoesObjeto>().WithMany()
                        .HasForeignKey("IdClassificacaoObjeto")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbLicClassificacaoRegimeExecucao_tbLicClassificacoesObjetos"),
                    j =>
                    {
                        j.HasKey("IdClassificacaoObjeto", "IdRegimeExecucao");
                        j.ToTable("tbLicClassificacaoRegimeExecucao");
                    });
        });

        modelBuilder.Entity<TbLicClausula>(entity =>
        {
            entity.HasKey(e => e.IdClausula);

            entity.ToTable("tbLicClausulas");

            entity.Property(e => e.DsClausula)
                .IsUnicode(false)
                .HasColumnName("dsClausula");
            entity.Property(e => e.FlExibiLinhasTitulo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flExibiLinhasTitulo");
            entity.Property(e => e.FlExibiTitulo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flExibiTitulo");
            entity.Property(e => e.NmClausula)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmClausula");
            entity.Property(e => e.NrOrdem).HasColumnName("nrOrdem");

            entity.HasOne(d => d.IdModeloNavigation).WithMany(p => p.TbLicClausulas)
                .HasForeignKey(d => d.IdModelo)
                .HasConstraintName("FK_tbLicClausulas_tbLicModelosDoctos");
        });

        modelBuilder.Entity<TbLicComposicoesComissao>(entity =>
        {
            entity.HasKey(e => e.IdComposicaoComissao).HasName("PK_tbLicComposicaoComissao");

            entity.ToTable("tbLicComposicoesComissao");

            entity.HasIndex(e => e.IdLicitacao, "IX_tbLicComposicoesComissao_IdLicitacao");

            entity.Property(e => e.DsCargo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsCargo");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");

            entity.HasOne(d => d.IdAtoNomeacaoPessoaNavigation).WithMany(p => p.TbLicComposicoesComissaos)
                .HasForeignKey(d => d.IdAtoNomeacaoPessoa)
                .HasConstraintName("FK_tbLicComposicaoComissao_tbLicAtoNomeacaoComissaoPessoas");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbLicComposicoesComissaos)
                .HasForeignKey(d => d.IdLicitacao)
                .HasConstraintName("FK_tbLicComposicaoComissao_tbLicLicitacoes");

            entity.HasOne(d => d.IdNaturezaCargoServidorNavigation).WithMany(p => p.TbLicComposicoesComissaos)
                .HasForeignKey(d => d.IdNaturezaCargoServidor)
                .HasConstraintName("FK_tbLicComposicaoComissao_tbLicNaturezaCargoServidores");

            entity.HasOne(d => d.IdTipoAtribuicaoComissaoNavigation).WithMany(p => p.TbLicComposicoesComissaos)
                .HasForeignKey(d => d.IdTipoAtribuicaoComissao)
                .HasConstraintName("FK_tbLicComposicaoComissao_tbLicTpAtribuicaoComissoes");
        });

        modelBuilder.Entity<TbLicContratoOrgaoOficialPublicacao>(entity =>
        {
            entity.HasKey(e => e.IdContratoPublicacao);

            entity.ToTable("tbLicContratoOrgaoOficialPublicacao");

            entity.Property(e => e.DtFinal)
                .HasColumnType("datetime")
                .HasColumnName("dtFinal");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.Observacao).IsUnicode(false);

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbLicContratoOrgaoOficialPublicacaos)
                .HasForeignKey(d => d.IdLicitacao)
                .HasConstraintName("FK_tbLicContratoOrgaoOficialPublicacao_tbLicLicitacoes");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbLicContratoOrgaoOficialPublicacaos)
                .HasForeignKey(d => d.IdPessoa)
                .HasConstraintName("FK_tbLicContratoOrgaoOficialPublicacao_tbGerPessoas");

            entity.HasOne(d => d.IdVeiculoPublicacaoNavigation).WithMany(p => p.TbLicContratoOrgaoOficialPublicacaos)
                .HasForeignKey(d => d.IdVeiculoPublicacao)
                .HasConstraintName("FK_tbLicContratoOrgaoOficialPublicacao_tbLicVeiculosPublicacoes");
        });

        modelBuilder.Entity<TbLicCotacaoIten>(entity =>
        {
            entity.HasKey(e => e.IdCotacao);

            entity.ToTable("tbLicCotacaoItens");

            entity.HasIndex(e => new { e.IdItem, e.IdLicitacao, e.IdPessoa, e.FlVencedor, e.FlCotacao, e.IdCotacao }, "IX_IdItem_IdLicitacao_IdPessoa_flVencedor").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdLicitacao, e.FlVencedor, e.IdItem, e.IdCotacao, e.NrLote, e.NrQuantidade }, "IX_IdLicitacao_flVencedor_IdItem_IdCotacao_nrLote_nrQuantidade").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdPessoa, e.IdLicitacao, e.FlCotacao }, "IX_IdPessoa_IdLicitacao_flCotacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.FlVencedor, e.IdLicitacao, e.NrLote }, "IX_flVencedor_IdLicitacao_nrLote").HasFillFactor(90);

            entity.HasIndex(e => new { e.FlVencedor, e.FlCotacao, e.IdLicitacao, e.IdCotacao, e.IdItem, e.IdPessoa, e.NrLote, e.VlUnitario, e.VlTotalNegociado }, "IX_flVencedor_flCotacao_IdLicitacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdItem, e.IdLicitacao }, "IX_tbLicCotacaoItens_IdItem_IdLicitacao_inc_IdCotacao");

            entity.Property(e => e.DsDetalhamento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsDetalhamento");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMarca)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsMarca");
            entity.Property(e => e.DtCotacao)
                .HasColumnType("datetime")
                .HasColumnName("dtCotacao");
            entity.Property(e => e.DtHomologacao)
                .HasColumnType("datetime")
                .HasColumnName("dtHomologacao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtPrazoEntrega)
                .HasColumnType("datetime")
                .HasColumnName("dtPrazoEntrega");
            entity.Property(e => e.DtUltAlteracao)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAlteracao");
            entity.Property(e => e.DtVencimentoProposta)
                .HasColumnType("datetime")
                .HasColumnName("dtVencimentoProposta");
            entity.Property(e => e.FlCotacao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flCotacao");
            entity.Property(e => e.FlVencedor)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flVencedor");
            entity.Property(e => e.NrClassificacao).HasColumnName("nrClassificacao");
            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.NrQuantidade)
                .HasColumnType("money")
                .HasColumnName("nrQuantidade");
            entity.Property(e => e.VlDesconto)
                .HasColumnType("money")
                .HasColumnName("vlDesconto");
            entity.Property(e => e.VlTotal)
                .HasColumnType("money")
                .HasColumnName("vlTotal");
            entity.Property(e => e.VlTotalNegociado)
                .HasColumnType("money")
                .HasColumnName("vlTotalNegociado");
            entity.Property(e => e.VlUnitario)
                .HasColumnType("money")
                .HasColumnName("vlUnitario");

            entity.HasOne(d => d.IdCondicaoPgtoNavigation).WithMany(p => p.TbLicCotacaoItens)
                .HasForeignKey(d => d.IdCondicaoPgto)
                .HasConstraintName("FK_tbLicCotacaoItens_tbGerCondicoesPgto");

            entity.HasOne(d => d.IdItemNavigation).WithMany(p => p.TbLicCotacaoItens)
                .HasForeignKey(d => d.IdItem)
                .HasConstraintName("FK_tbLicCotacaoItens_tbDspItens");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbLicCotacaoItens)
                .HasForeignKey(d => d.IdLicitacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicCotacaoItens_tbLicLicitacoes");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbLicCotacaoItens)
                .HasForeignKey(d => d.IdPessoa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicCotacaoItens_tbGerPessoas");

            entity.HasOne(d => d.IdPrazoEntregaNavigation).WithMany(p => p.TbLicCotacaoItens)
                .HasForeignKey(d => d.IdPrazoEntrega)
                .HasConstraintName("FK_tbLicCotacaoItens_tbGerPrazoEntrega");
        });

        modelBuilder.Entity<TbLicCotacaoItensVencedorCancelado>(entity =>
        {
            entity.HasKey(e => e.IdCancelamento);

            entity.ToTable("tbLicCotacaoItensVencedorCancelados");

            entity.Property(e => e.IdCancelamento).HasColumnName("idCancelamento");
            entity.Property(e => e.DsMotivo)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DtCancelamento)
                .HasColumnType("datetime")
                .HasColumnName("dtCancelamento");
            entity.Property(e => e.NrQuantidade)
                .HasColumnType("money")
                .HasColumnName("nrQuantidade");
            entity.Property(e => e.VlCancelado)
                .HasColumnType("money")
                .HasColumnName("vlCancelado");

            entity.HasOne(d => d.IdCotacaoNavigation).WithMany(p => p.TbLicCotacaoItensVencedorCancelados)
                .HasForeignKey(d => d.IdCotacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicCotacaoItensVencedorCancelados_tbLicCotacaoItens");
        });

        modelBuilder.Entity<TbLicCotacaoSimple>(entity =>
        {
            entity.HasKey(e => e.IdCotacaoSimples);

            entity.ToTable("tbLicCotacaoSimples");

            entity.HasIndex(e => new { e.IdPessoa, e.IdItem, e.DtCotacao }, "IX_IdPessoa_IdItem_dtCotacao")
                .IsDescending(false, false, true)
                .HasFillFactor(90);

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMarca)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsMarca");
            entity.Property(e => e.DsObservacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsObservacao");
            entity.Property(e => e.DtCotacao)
                .HasColumnType("datetime")
                .HasColumnName("dtCotacao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrQtde)
                .HasColumnType("money")
                .HasColumnName("nrQtde");
            entity.Property(e => e.VlTotal)
                .HasColumnType("money")
                .HasColumnName("vlTotal");
            entity.Property(e => e.VlUnitario)
                .HasColumnType("money")
                .HasColumnName("vlUnitario");

            entity.HasOne(d => d.IdItemNavigation).WithMany(p => p.TbLicCotacaoSimples)
                .HasForeignKey(d => d.IdItem)
                .HasConstraintName("FK_tbLicCotacaoSimples_tbDspItens");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbLicCotacaoSimples)
                .HasForeignKey(d => d.IdPessoa)
                .HasConstraintName("FK_tbLicCotacaoSimples_tbGerPessoas");
        });

        modelBuilder.Entity<TbLicCrcf>(entity =>
        {
            entity.HasKey(e => e.IdCrcf);

            entity.ToTable("tbLicCRCF");

            entity.HasIndex(e => e.IdPessoa, "IX_tbLicCRCF").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdTipoCrcf, e.DtEmissao }, "IX_tbLicCRCF_1").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.IdTipoCrcf }, "IX_tbLicCRCF_IdEmpresa_idTipoCRCF_inc_nrCRCF_dtEmissao");

            entity.HasIndex(e => new { e.IdPessoa, e.DtValidade }, "IX_tbLicCRCF_IdPessoa_dtValidade");

            entity.Property(e => e.IdCrcf).HasColumnName("IdCRCF");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObservacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsObservacao");
            entity.Property(e => e.DsTexto)
                .IsUnicode(false)
                .HasColumnName("dsTexto");
            entity.Property(e => e.DtEmissao)
                .HasColumnType("datetime")
                .HasColumnName("dtEmissao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtValidade)
                .HasColumnType("datetime")
                .HasColumnName("dtValidade");
            entity.Property(e => e.IdTipoCrcf).HasColumnName("idTipoCRCF");
            entity.Property(e => e.NrCrcf).HasColumnName("nrCRCF");
            entity.Property(e => e.NrProcesso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrProcesso");
        });

        modelBuilder.Entity<TbLicDoctosApresentado>(entity =>
        {
            entity.HasKey(e => e.IdDocApresentado);

            entity.ToTable("tbLicDoctosApresentados");

            entity.HasIndex(e => new { e.IdEmpresa, e.IdPessoa }, "IX_tbLicDoctosApresentados_IdEmpresa_IdPessoa");

            entity.HasIndex(e => new { e.IdEmpresa, e.IdPessoa, e.DtValidade }, "IX_tbLicDoctosApresentados_IdEmpresa_IdPessoa_dtValidade");

            entity.HasIndex(e => new { e.IdPessoa, e.DtValidade }, "IX_tbLicDoctosApresentados_IdPessoa");

            entity.Property(e => e.CdTipoCertidaoSit)
                .HasMaxLength(50)
                .HasColumnName("cdTipoCertidaoSit");
            entity.Property(e => e.DsExtesaoImagem)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsExtesaoImagem");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsNomeImagem)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsNomeImagem");
            entity.Property(e => e.DsObservacoes)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsObservacoes");
            entity.Property(e => e.DtApresentacao)
                .HasColumnType("datetime")
                .HasColumnName("dtApresentacao");
            entity.Property(e => e.DtEmissao)
                .HasColumnType("datetime")
                .HasColumnName("dtEmissao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtPublicacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacao");
            entity.Property(e => e.DtValidade)
                .HasColumnType("datetime")
                .HasColumnName("dtValidade");
            entity.Property(e => e.IdDocCrcf).HasColumnName("IdDocCRCF");
            entity.Property(e => e.ImDocumento)
                .HasColumnType("image")
                .HasColumnName("imDocumento");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");

            entity.HasOne(d => d.IdDocCrcfNavigation).WithMany(p => p.TbLicDoctosApresentados)
                .HasForeignKey(d => d.IdDocCrcf)
                .HasConstraintName("FK_tbLicDoctosApresentados_tbLicDoctosCRCF");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbLicDoctosApresentados)
                .HasForeignKey(d => d.IdPessoa)
                .HasConstraintName("FK_tbLicDoctosApresentados_tbGerPessoas");

            entity.HasMany(d => d.IdCrcfs).WithMany(p => p.IdDocApresentados)
                .UsingEntity<Dictionary<string, object>>(
                    "TbLicDoctosApresentadosCrcf",
                    r => r.HasOne<TbLicCrcf>().WithMany()
                        .HasForeignKey("IdCrcf")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbLicDoctosApresentadosCRCF_tbLicCRCF"),
                    l => l.HasOne<TbLicDoctosApresentado>().WithMany()
                        .HasForeignKey("IdDocApresentado")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbLicDoctosApresentadosCRCF_tbLicDoctosApresentados"),
                    j =>
                    {
                        j.HasKey("IdDocApresentado", "IdCrcf");
                        j.ToTable("tbLicDoctosApresentadosCRCF");
                        j.IndexerProperty<int>("IdDocApresentado").HasColumnName("idDocApresentado");
                        j.IndexerProperty<int>("IdCrcf").HasColumnName("idCRCF");
                    });
        });

        modelBuilder.Entity<TbLicDoctosCrcf>(entity =>
        {
            entity.HasKey(e => e.IdDocCrcf);

            entity.ToTable("tbLicDoctosCRCF");

            entity.Property(e => e.IdDocCrcf).HasColumnName("IdDocCRCF");
            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.DsCategoria)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsCategoria");
            entity.Property(e => e.DsTipoDocumento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoDocumento");
            entity.Property(e => e.FlDocInibeEmissaoCrcf)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flDocInibeEmissaoCRCF");
            entity.Property(e => e.NmDocCrcf)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmDocCRCF");
        });

        modelBuilder.Entity<TbLicDotaco>(entity =>
        {
            entity.HasKey(e => new { e.IdLicitacao, e.IdDotacao });

            entity.ToTable("tbLicDotacoes");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtVinculacao)
                .HasColumnType("datetime")
                .HasColumnName("dtVinculacao");

            entity.HasOne(d => d.IdDotacaoNavigation).WithMany(p => p.TbLicDotacos)
                .HasForeignKey(d => d.IdDotacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicDotacoes_tbOrcDotacoes");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbLicDotacos)
                .HasForeignKey(d => d.IdLicitacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicDotacoes_tbLicLicitacoes");
        });

        modelBuilder.Entity<TbLicEspeciesBensServico>(entity =>
        {
            entity.HasKey(e => e.IdBemServico).HasName("PK_tbLicEspecieBemServicos");

            entity.ToTable("tbLicEspeciesBensServicos");

            entity.Property(e => e.CdBemServico)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdBemServico");
            entity.Property(e => e.DsBemServico)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsBemServico");
            entity.Property(e => e.FlPermiteEmpenhoDireto)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPermiteEmpenhoDireto");
        });

        modelBuilder.Entity<TbLicFaseLance>(entity =>
        {
            entity.HasKey(e => e.IdLance);

            entity.ToTable("tbLicFaseLances");

            entity.HasIndex(e => new { e.IdLicitacao, e.IdPessoa, e.NrLote, e.IdItem, e.FlDesclassificado }, "IX_tbLicFaseLances_IdLicitacao_IdPessoa_nrLote_IdItem_flDesclassificado");

            entity.HasIndex(e => new { e.IdLicitacao, e.IdPessoa, e.NrLote, e.FlDesclassificado }, "IX_tbLicFaseLances_IdLicitacao_IdPessoa_nrLote_flDesclassificado");

            entity.HasIndex(e => new { e.IdLicitacao, e.NrLote, e.IdItem }, "IX_tbLicFaseLances_IdLicitacao_nrLote_IdItem");

            entity.HasIndex(e => new { e.IdLicitacao, e.NrLote, e.IdItem, e.FlDesclassificado }, "IX_tbLicFaseLances_IdLicitacao_nrLote_IdItem_flDesclassificado");

            entity.HasIndex(e => new { e.IdLicitacao, e.NrLote, e.IdItem, e.VlLance }, "IX_tbLicFaseLances_IdLicitacao_nrLote_IdItem_vlLance");

            entity.HasIndex(e => new { e.IdLicitacao, e.NrLote, e.FlDesclassificado }, "IX_tbLicFaseLances_IdLicitacao_nrLote_flDesclassificado");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivoDesclassificado)
                .IsUnicode(false)
                .HasColumnName("dsMotivoDesclassificado");
            entity.Property(e => e.DsOrigem)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsOrigem");
            entity.Property(e => e.DsTipoDesclassificacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoDesclassificacao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlDesclassificado)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flDesclassificado");
            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlLance)
                .HasColumnType("money")
                .HasColumnName("vlLance");

            entity.HasOne(d => d.IdItemNavigation).WithMany(p => p.TbLicFaseLances)
                .HasForeignKey(d => d.IdItem)
                .HasConstraintName("FK_tbLicFaseLances_tbDspItens");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbLicFaseLances)
                .HasForeignKey(d => d.IdLicitacao)
                .HasConstraintName("FK_tbLicFaseLances_tbLicLicitacoes");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbLicFaseLances)
                .HasForeignKey(d => d.IdPessoa)
                .HasConstraintName("FK_tbLicFaseLances_tbGerPessoas");
        });

        modelBuilder.Entity<TbLicItensOcorrencia>(entity =>
        {
            entity.HasKey(e => e.IdImpugnacao).HasName("PK_tbLicItensImpugnados");

            entity.ToTable("tbLicItensOcorrencias");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivo)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrLote).HasColumnName("nrLote");
        });

        modelBuilder.Entity<TbLicLicitacaoTecnica>(entity =>
        {
            entity.HasKey(e => new { e.IdLicitacao, e.IdTecnica });

            entity.ToTable("tbLicLicitacaoTecnicas");

            entity.Property(e => e.NrOrdem).HasColumnName("nrOrdem");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbLicLicitacaoTecnicas)
                .HasForeignKey(d => d.IdLicitacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicLicitacaoTecnicas_tbLicLicitacoes");

            entity.HasOne(d => d.IdTecnicaNavigation).WithMany(p => p.TbLicLicitacaoTecnicas)
                .HasForeignKey(d => d.IdTecnica)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicLicitacaoTecnicas_tbLicTecnicas");
        });

        modelBuilder.Entity<TbLicLicitaco>(entity =>
        {
            entity.HasKey(e => e.IdLicitacao);

            entity.ToTable("tbLicLicitacoes");

            entity.HasIndex(e => new { e.DsOrigemSaldo, e.DtEdital, e.IdModalidade, e.IdLicitacao, e.IdEmpresa, e.DsControleSaldo }, "IX_dsOrigemSaldo_dtEdital_IdModalidade_IdLicitacao_IdEmpresa_dsControleSaldo").HasFillFactor(90);

            entity.HasIndex(e => new { e.DtEdital, e.DsOrigemSaldo, e.IdModalidade, e.IdLicitacao, e.IdEmpresa, e.DsControleSaldo }, "IX_dtEdital_dsOrigemSaldo_IdModalidade_IdLicitacao_IdEmpresa_dsControleSaldo").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.IdModalidade, e.IdSetorCompra }, "IX_tbLicLicitacoes_IdEmpresa_IdModalidade_IdSetorCompra_inc_IdLic_IdNaturezaProced_nrLic_dtEdital");

            entity.HasIndex(e => new { e.IdEmpresa, e.IdModalidade }, "IX_tbLicLicitacoes_IdEmpresa_IdModalidade_inc_IdLicitacao_nrAno_nrLicitacao");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.IdModalidade, e.NrLicitacao, e.IdSetorCompra }, "IX_tbLicLicitacoes_IdEmpresa_nrAno_IdModalidade_nrLicitacao_IdSetorCompra");

            entity.HasIndex(e => e.IdLicitacao, "IX_tbLicLicitacoes_IdLicitacao_inc_dsOrigemSaldo");

            entity.HasIndex(e => e.IdLicitacao, "IX_tbLicLicitacoes_IdLicitacao_inc_nrAno_IdModalidade_nrLicitacao_nrEditalOrigem_nrAnoEditalOrigem");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdTcm)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdTCM");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsClausulaProrrogacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsClausulaProrrogacao");
            entity.Property(e => e.DsControleSaldo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsControleSaldo");
            entity.Property(e => e.DsHoraAbertura)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsHoraAbertura");
            entity.Property(e => e.DsHoraJulgamento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsHoraJulgamento");
            entity.Property(e => e.DsIndiceCorrecao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsIndiceCorrecao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObjeto)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DsOrigemSaldo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsOrigemSaldo");
            entity.Property(e => e.DtAbertura)
                .HasColumnType("datetime")
                .HasColumnName("dtAbertura");
            entity.Property(e => e.DtBaseAberturaTce)
                .HasColumnType("datetime")
                .HasColumnName("dtBaseAberturaTCE");
            entity.Property(e => e.DtBaseEditalTce)
                .HasColumnType("datetime")
                .HasColumnName("dtBaseEditalTCE");
            entity.Property(e => e.DtEdital)
                .HasColumnType("datetime")
                .HasColumnName("dtEdital");
            entity.Property(e => e.DtHomologacao)
                .HasColumnType("datetime")
                .HasColumnName("dtHomologacao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtJulgamento)
                .HasColumnType("datetime")
                .HasColumnName("dtJulgamento");
            entity.Property(e => e.DtPublicacaoDoe)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoDOE");
            entity.Property(e => e.FlProrrogacao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flProrrogacao");
            entity.Property(e => e.FlVencedorPorLote)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flVencedorPorLote");
            entity.Property(e => e.FlVencedorPorMaiorDesconto)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flVencedorPorMaiorDesconto");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrAnoEditalOrigem).HasColumnName("nrAnoEditalOrigem");
            entity.Property(e => e.NrAnoProcesso).HasColumnName("nrAnoProcesso");
            entity.Property(e => e.NrEditalOrigem)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrEditalOrigem");
            entity.Property(e => e.NrLicitacao).HasColumnName("nrLicitacao");
            entity.Property(e => e.NrPesoPreco).HasColumnName("nrPesoPreco");
            entity.Property(e => e.NrPesoTecnica).HasColumnName("nrPesoTecnica");
            entity.Property(e => e.NrPontuacaoMinima).HasColumnName("nrPontuacaoMinima");
            entity.Property(e => e.VlMaximo)
                .HasColumnType("money")
                .HasColumnName("vlMaximo");
            entity.Property(e => e.VlMinimo)
                .HasColumnType("money")
                .HasColumnName("vlMinimo");

            entity.HasOne(d => d.IdBemServicoNavigation).WithMany(p => p.TbLicLicitacos)
                .HasForeignKey(d => d.IdBemServico)
                .HasConstraintName("FK_tbLicLicitacoes_tbLicEspeciesBensServicos");

            entity.HasOne(d => d.IdCondicaoPgtoNavigation).WithMany(p => p.TbLicLicitacos)
                .HasForeignKey(d => d.IdCondicaoPgto)
                .HasConstraintName("FK_tbLicLicitacoes_tbGerCondicoesPagamento");

            entity.HasOne(d => d.IdEmpresaNavigation).WithMany(p => p.TbLicLicitacos)
                .HasForeignKey(d => d.IdEmpresa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicLicitacoes_tbGerEmpresasGoverno");

            entity.HasOne(d => d.IdLocalNavigation).WithMany(p => p.TbLicLicitacos)
                .HasForeignKey(d => d.IdLocal)
                .HasConstraintName("FK_tbLicLicitacoes_tbLicLocais");

            entity.HasOne(d => d.IdPrazoEntregaNavigation).WithMany(p => p.TbLicLicitacos)
                .HasForeignKey(d => d.IdPrazoEntrega)
                .HasConstraintName("FK_tbLicLicitacoes_tbGerPrazosEntrega");

            entity.HasOne(d => d.IdSetorCompraNavigation).WithMany(p => p.TbLicLicitacos)
                .HasForeignKey(d => d.IdSetorCompra)
                .HasConstraintName("FK_tbLicLicitacoes_tbDspSetoresCompra");

            entity.HasOne(d => d.Id).WithMany(p => p.TbLicLicitacos)
                .HasForeignKey(d => new { d.IdModalidade, d.IdNaturezaProcedimento })
                .HasConstraintName("FK_tbLicLicitacoes_tbLicNaturezasProcedimentos1");

            entity.HasMany(d => d.IdAcaos).WithMany(p => p.IdLicitacaos)
                .UsingEntity<Dictionary<string, object>>(
                    "TbLicLicitacoesAco",
                    r => r.HasOne<TbPlaAco>().WithMany()
                        .HasForeignKey("IdAcao")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbLicLicitacoesAcoes_tbPlaAcoes"),
                    l => l.HasOne<TbLicLicitaco>().WithMany()
                        .HasForeignKey("IdLicitacao")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbLicLicitacoesAcoes_tbLicLicitacoes"),
                    j =>
                    {
                        j.HasKey("IdLicitacao", "IdAcao");
                        j.ToTable("tbLicLicitacoesAcoes");
                        j.IndexerProperty<int>("IdAcao").HasColumnName("idAcao");
                    });
        });

        modelBuilder.Entity<TbLicLicitacoesAbertura>(entity =>
        {
            entity.HasKey(e => e.IdLicitacaoAbertura);

            entity.ToTable("tbLicLicitacoesAbertura");

            entity.Property(e => e.NrExercicio).HasColumnName("nrExercicio");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
        });

        modelBuilder.Entity<TbLicLicitacoesAnexo>(entity =>
        {
            entity.HasKey(e => e.IdAnexo);

            entity.ToTable("tbLicLicitacoesAnexos");

            entity.HasIndex(e => new { e.FlPublicaPortalTransparencia, e.IdContrato }, "IX_tbLicLicitacoesAnexos_flPublicaPortalTransparencia_idContrato");

            entity.HasIndex(e => e.IdContrato, "IX_tbLicLicitacoesAnexos_idContrato");

            entity.HasIndex(e => new { e.IdLicitacao, e.FlPublicaPortalTransparencia, e.DsObjeto }, "IX_tbLicLicitacoesAnexos_idLicitacao_flPublicaPortalTransparencia_dsObjeto");

            entity.Property(e => e.IdAnexo).HasColumnName("idAnexo");
            entity.Property(e => e.BnObjeto).HasColumnName("bnObjeto");
            entity.Property(e => e.DsExtencao)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("dsExtencao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginAlteracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginAlteracao");
            entity.Property(e => e.DsObjeto)
                .HasMaxLength(255)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DtAlteracao)
                .HasColumnType("datetime")
                .HasColumnName("dtAlteracao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlPublicaPortalFornecedor)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPublicaPortalFornecedor");
            entity.Property(e => e.FlPublicaPortalTransparencia)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPublicaPortalTransparencia");
            entity.Property(e => e.IdContrato).HasColumnName("idContrato");
            entity.Property(e => e.IdLicitacao).HasColumnName("idLicitacao");
            entity.Property(e => e.NmAnexo)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("nmAnexo");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbLicLicitacoesAnexos)
                .HasForeignKey(d => d.IdLicitacao)
                .HasConstraintName("FK_tbLicLicitacoesAnexos_tbLicLicitacoes");
        });

        modelBuilder.Entity<TbLicLicitacoesDocumento>(entity =>
        {
            entity.HasKey(e => e.IdLicitacaoDocumento).HasName("PK_tbLicLicitacoesDocumentos_1");

            entity.ToTable("tbLicLicitacoesDocumentos");

            entity.HasIndex(e => e.IdLicitacao, "IX_tbLicLicitacoesDocumentos_IdLicitacao");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObjeto)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DtGeracao)
                .HasColumnType("datetime")
                .HasColumnName("dtGeracao");
            entity.Property(e => e.NmDocumentoLicitacao)
                .HasMaxLength(100)
                .HasColumnName("nmDocumentoLicitacao");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbLicLicitacoesDocumentos)
                .HasForeignKey(d => d.IdLicitacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicLicitacoesDocumentos_tbLicLicitacoes");

            entity.HasOne(d => d.IdModeloNavigation).WithMany(p => p.TbLicLicitacoesDocumentos)
                .HasForeignKey(d => d.IdModelo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicLicitacoesDocumentos_tbLicModelosDoctos");
        });

        modelBuilder.Entity<TbLicLicitacoesDocumentosSalvo>(entity =>
        {
            entity.HasKey(e => e.IdDocumentoSalvo);

            entity.ToTable("tbLicLicitacoesDocumentosSalvos");

            entity.HasIndex(e => e.IdLicitacao, "IX_tbLicLicitacoesDocumentosSalvos_IdLicitacao");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObjeto)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DtGeracao)
                .HasColumnType("datetime")
                .HasColumnName("dtGeracao");
            entity.Property(e => e.NmDocumento)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmDocumento");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
        });

        modelBuilder.Entity<TbLicLicitacoesIten>(entity =>
        {
            entity.HasKey(e => e.IdLicitacaoItem).HasName("PK_tbLicItensLicitacoes");

            entity.ToTable("tbLicLicitacoesItens");

            entity.HasIndex(e => new { e.IdItem, e.IdLicitacao }, "IX_IdItem_IdLicitacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdItem, e.IdRms, e.IdLicitacao }, "IX_IdItem_IdRms_IdLicitacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdLicitacaoItem, e.IdLicitacao }, "IX_IdLicitacaoItem_IdLicitacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdLicitacao, e.IdItem, e.IdRms }, "IX_IdLicitacao_IdItem_IdRms").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdLicitacao, e.IdLicitacaoItem, e.IdItem, e.IdRms }, "IX_IdLicitacao_IdLicitacaoItem_IdItem_IdRms").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdRegistro, e.IdItem, e.IdLicitacao }, "IX_IdRegistro_Idtem").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdRms, e.IdLicitacao, e.IdItem }, "IX_IdRms_IdLicitacao_IdItem").HasFillFactor(90);

            entity.HasIndex(e => e.IdRms, "IX_tbLicLicitacoesItens_IdRms");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrPrazoLimiteEntrega).HasColumnName("nrPrazoLimiteEntrega");
            entity.Property(e => e.NrQuantidade)
                .HasColumnType("money")
                .HasColumnName("nrQuantidade");
            entity.Property(e => e.TpEntrega)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpEntrega");
            entity.Property(e => e.VlUnitarioMaximo)
                .HasColumnType("money")
                .HasColumnName("vlUnitarioMaximo");

            entity.HasOne(d => d.IdCondicaoPgtoNavigation).WithMany(p => p.TbLicLicitacoesItens)
                .HasForeignKey(d => d.IdCondicaoPgto)
                .HasConstraintName("FK_tbLicLicitacoesItens_tbGerCondicoesPagamento");

            entity.HasOne(d => d.IdItemNavigation).WithMany(p => p.TbLicLicitacoesItens)
                .HasForeignKey(d => d.IdItem)
                .HasConstraintName("FK_tbLicLicitacoesItens_tbDspItens");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbLicLicitacoesItens)
                .HasForeignKey(d => d.IdLicitacao)
                .HasConstraintName("FK_tbLicLicitacoesItens_tbLicLicitacoes");
        });

        modelBuilder.Entity<TbLicLicitacoesItensLote>(entity =>
        {
            entity.HasKey(e => new { e.NrLote, e.IdLicitacaoItem });

            entity.ToTable("tbLicLicitacoesItensLotes");

            entity.HasIndex(e => new { e.IdLicitacaoItem, e.NrLote }, "IX_IdLicitacaoItem_nrLote").HasFillFactor(90);

            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrQuantidade)
                .HasColumnType("money")
                .HasColumnName("nrQuantidade");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");

            entity.HasOne(d => d.IdLicitacaoItemNavigation).WithMany(p => p.TbLicLicitacoesItensLotes)
                .HasForeignKey(d => d.IdLicitacaoItem)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicLicitacoesItensLotes_tbLicLicitacoesItens");
        });

        modelBuilder.Entity<TbLicLicitacoesRepublicaco>(entity =>
        {
            entity.HasKey(e => e.IdRepublicacao);

            entity.ToTable("tbLicLicitacoesRepublicacoes");

            entity.HasIndex(e => e.IdLicitacao, "IX_tbLicLicitacoesRepublicacoes_IdLicitacao");

            entity.HasIndex(e => e.IdLicitacao, "IX_tbLicLicitacoesRepublicacoes_IdLicitacao_inc_IdRepublic_dtEdit_dtAbert_dtJulg_dtInc");

            entity.Property(e => e.DsHoraAbertura)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsHoraAbertura");
            entity.Property(e => e.DsHoraJulgamento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsHoraJulgamento");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsRepublicacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsRepublicacao");
            entity.Property(e => e.DtAbertura)
                .HasColumnType("datetime")
                .HasColumnName("dtAbertura");
            entity.Property(e => e.DtEdital)
                .HasColumnType("datetime")
                .HasColumnName("dtEdital");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtJulgamento)
                .HasColumnType("datetime")
                .HasColumnName("dtJulgamento");
        });

        modelBuilder.Entity<TbLicLicitacoesTce>(entity =>
        {
            entity.HasKey(e => e.IdLicitacao);

            entity.ToTable("tbLicLicitacoesTCE");

            entity.Property(e => e.DsClausulaProrrogacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsClausulaProrrogacao");
            entity.Property(e => e.DsControleSaldo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsControleSaldo");
            entity.Property(e => e.DsHoraAbertura)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsHoraAbertura");
            entity.Property(e => e.DsHoraJulgamento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsHoraJulgamento");
            entity.Property(e => e.DsIndiceCorrecao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsIndiceCorrecao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObjeto)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DsOrigemSaldo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsOrigemSaldo");
            entity.Property(e => e.DtAbertura)
                .HasColumnType("datetime")
                .HasColumnName("dtAbertura");
            entity.Property(e => e.DtEdital)
                .HasColumnType("datetime")
                .HasColumnName("dtEdital");
            entity.Property(e => e.DtHomologacao)
                .HasColumnType("datetime")
                .HasColumnName("dtHomologacao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtJulgamento)
                .HasColumnType("datetime")
                .HasColumnName("dtJulgamento");
            entity.Property(e => e.DtPublicacaoDoe)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoDOE");
            entity.Property(e => e.FlProrrogacao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flProrrogacao");
            entity.Property(e => e.FlVencedorPorLote)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flVencedorPorLote");
            entity.Property(e => e.FlVencedorPorMaiorDesconto)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flVencedorPorMaiorDesconto");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrAnoEditalOrigem).HasColumnName("nrAnoEditalOrigem");
            entity.Property(e => e.NrEditalOrigem)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrEditalOrigem");
            entity.Property(e => e.NrLicitacao).HasColumnName("nrLicitacao");
            entity.Property(e => e.NrPesoPreco).HasColumnName("nrPesoPreco");
            entity.Property(e => e.NrPesoTecnica).HasColumnName("nrPesoTecnica");
            entity.Property(e => e.NrPontuacaoMinima).HasColumnName("nrPontuacaoMinima");
            entity.Property(e => e.VlMaximo)
                .HasColumnType("money")
                .HasColumnName("vlMaximo");
            entity.Property(e => e.VlMinimo)
                .HasColumnType("money")
                .HasColumnName("vlMinimo");
        });

        modelBuilder.Entity<TbLicLicitacoesUsuario>(entity =>
        {
            entity.HasKey(e => new { e.IdLicitacao, e.DsLogin });

            entity.ToTable("tbLicLicitacoesUsuarios");

            entity.HasIndex(e => e.DsLogin, "IX_tbLicLicitacoesUsuarios_dsLogin");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginInclusao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginInclusao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbLicLicitacoesUsuarios)
                .HasForeignKey(d => d.IdLicitacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicLicitacoesUsuarios_tbLicLicitacoes");
        });

        modelBuilder.Entity<TbLicLimite>(entity =>
        {
            entity.HasKey(e => e.IdLimite);

            entity.ToTable("tbLicLimites");

            entity.Property(e => e.DsTipoLimite)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoLimite");
            entity.Property(e => e.DtDiarioOficial)
                .HasColumnType("datetime")
                .HasColumnName("dtDiarioOficial");
            entity.Property(e => e.NrPortaria)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrPortaria");
            entity.Property(e => e.VlInicial)
                .HasColumnType("money")
                .HasColumnName("vlInicial");
            entity.Property(e => e.VlLimite)
                .HasColumnType("money")
                .HasColumnName("vlLimite");

            entity.HasOne(d => d.IdClassificacaoObjetoNavigation).WithMany(p => p.TbLicLimites)
                .HasForeignKey(d => d.IdClassificacaoObjeto)
                .HasConstraintName("FK_tbLicLimites_tbLicClassificacoesObjetos");

            entity.HasOne(d => d.IdModalidadeNavigation).WithMany(p => p.TbLicLimites)
                .HasForeignKey(d => d.IdModalidade)
                .HasConstraintName("FK_tbLicLimites_tbLicModalidades");
        });

        modelBuilder.Entity<TbLicLocai>(entity =>
        {
            entity.HasKey(e => e.IdLocal);

            entity.ToTable("tbLicLocais");

            entity.Property(e => e.DsComplementoEndereco)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("dsComplementoEndereco");
            entity.Property(e => e.DsEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsEmail");
            entity.Property(e => e.DsSite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsSite");
            entity.Property(e => e.NmContato)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmContato");
            entity.Property(e => e.NmLocal)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmLocal");
            entity.Property(e => e.NmNomeSetor)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmNomeSetor");
            entity.Property(e => e.NrFone)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrFone");
            entity.Property(e => e.NrPredial).HasColumnName("nrPredial");

            entity.HasOne(d => d.IdEnderecoNavigation).WithMany(p => p.TbLicLocais)
                .HasForeignKey(d => d.IdEndereco)
                .HasConstraintName("FK_tbLicLocais_tbGerEnderecos");
        });

        modelBuilder.Entity<TbLicModalidade>(entity =>
        {
            entity.HasKey(e => e.IdModalidade);

            entity.ToTable("tbLicModalidades");

            entity.Property(e => e.DsModalidade)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsModalidade");
            entity.Property(e => e.FlNumeraPorNatureza).HasColumnName("flNumeraPorNatureza");
            entity.Property(e => e.FlPadraoTce)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPadraoTCE");
        });

        modelBuilder.Entity<TbLicModelosDocto>(entity =>
        {
            entity.HasKey(e => e.IdModelo);

            entity.ToTable("tbLicModelosDoctos");

            entity.Property(e => e.NmModelo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmModelo");

            entity.HasOne(d => d.IdTipoDocumentoNavigation).WithMany(p => p.TbLicModelosDoctos)
                .HasForeignKey(d => d.IdTipoDocumento)
                .HasConstraintName("FK_tbLicModelosDoctos_tbLicTiposDocumento");
        });

        modelBuilder.Entity<TbLicMovimentacoesParecer>(entity =>
        {
            entity.HasKey(e => e.IdMovParecer).HasName("PK_tbLictMovimentacoesParecer");

            entity.ToTable("tbLicMovimentacoesParecer");

            entity.HasIndex(e => e.IdLicitacao, "IX_tbLicMovimentacoesParecer_IdLicitacao");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsParecer)
                .IsUnicode(false)
                .HasColumnName("dsParecer");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtParecer)
                .HasColumnType("datetime")
                .HasColumnName("dtParecer");
            entity.Property(e => e.FlParecerFavoravel)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flParecerFavoravel");
            entity.Property(e => e.NrSequencial).HasColumnName("nrSequencial");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbLicMovimentacoesParecers)
                .HasForeignKey(d => d.IdLicitacao)
                .HasConstraintName("FK_tbLictMovimentacoesParecer_tbLicLicitacoes");

            entity.HasOne(d => d.IdParecerNavigation).WithMany(p => p.TbLicMovimentacoesParecers)
                .HasForeignKey(d => d.IdParecer)
                .HasConstraintName("FK_tbLictMovimentacoesParecer_tbLicPareceres");
        });

        modelBuilder.Entity<TbLicMovimentosSituaco>(entity =>
        {
            entity.HasKey(e => e.IdMovLicitacao);

            entity.ToTable("tbLicMovimentosSituacoes");

            entity.HasIndex(e => e.IdLicitacao, "IX_tbLicMovimentosSituacoes_IdLicitacao");

            entity.HasIndex(e => new { e.IdSituacao, e.IdLicitacao }, "IX_tbLicMovimentosSituacoes_IdSituacao_IdLicitacao");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsMotivacao");
            entity.Property(e => e.DtBaseTce)
                .HasColumnType("datetime")
                .HasColumnName("dtBaseTCE");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.IdLeiAto).HasColumnName("idLeiAto");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbLicMovimentosSituacos)
                .HasForeignKey(d => d.IdLicitacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicMovimentosSituacoes_tbLicLicitacoes");

            entity.HasOne(d => d.IdSituacaoNavigation).WithMany(p => p.TbLicMovimentosSituacos)
                .HasForeignKey(d => d.IdSituacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicMovimentosSituacoes_tbLicSituacoes");
        });

        modelBuilder.Entity<TbLicMovimentosSituacoesImportaAm>(entity =>
        {
            entity.HasKey(e => e.IdMovLicitacao);

            entity.ToTable("tbLicMovimentosSituacoesImportaAM");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsMotivacao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.IdLeiAto).HasColumnName("idLeiAto");
        });

        modelBuilder.Entity<TbLicNaturezasCargosServidore>(entity =>
        {
            entity.HasKey(e => e.IdNaturezaCargoServidor);

            entity.ToTable("tbLicNaturezasCargosServidores");

            entity.Property(e => e.NmNaturezaCargoServidor)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmNaturezaCargoServidor");
        });

        modelBuilder.Entity<TbLicNaturezasProcedimento>(entity =>
        {
            entity.HasKey(e => new { e.IdModalidade, e.IdNaturezaProcedimento }).HasName("PK_tbLicNaturezaProcedimentos");

            entity.ToTable("tbLicNaturezasProcedimentos");

            entity.Property(e => e.DsNaturezaProcedimento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsNaturezaProcedimento");
            entity.Property(e => e.FlDesclassificaAutomatico)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flDesclassificaAutomatico");
            entity.Property(e => e.FlPadroTce)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPadroTCE");

            entity.HasOne(d => d.IdModalidadeNavigation).WithMany(p => p.TbLicNaturezasProcedimentos)
                .HasForeignKey(d => d.IdModalidade)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicNaturezasProcedimentos_tbLicModalidades");
        });

        modelBuilder.Entity<TbLicParecere>(entity =>
        {
            entity.HasKey(e => e.IdParecer).HasName("PK_tbLicParecer");

            entity.ToTable("tbLicPareceres");

            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.DsParecer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsParecer");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSigla");
            entity.Property(e => e.FlAtivo)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("flAtivo");
            entity.Property(e => e.FlLiberaEdital)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flLiberaEdital");
            entity.Property(e => e.FlLiberaJulgamento)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flLiberaJulgamento");
        });

        modelBuilder.Entity<TbLicPareceresAnexo>(entity =>
        {
            entity.HasKey(e => e.IdAnexo);

            entity.ToTable("tbLicPareceresAnexos");

            entity.Property(e => e.IdAnexo).HasColumnName("idAnexo");
            entity.Property(e => e.BnObjeto).HasColumnName("bnObjeto");
            entity.Property(e => e.DsAnexo)
                .HasMaxLength(255)
                .HasColumnName("dsAnexo");
            entity.Property(e => e.DsExtencao)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("dsExtencao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlPublicaPortalFornecedor)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPublicaPortalFornecedor");
            entity.Property(e => e.FlPublicaPortalTransparencia)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPublicaPortalTransparencia");
            entity.Property(e => e.IdLicitacao).HasColumnName("idLicitacao");
            entity.Property(e => e.NmAnexo)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("nmAnexo");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbLicPareceresAnexos)
                .HasForeignKey(d => d.IdLicitacao)
                .HasConstraintName("FK_tbLicPareceresAnexos_tbLicLicitacoes");
        });

        modelBuilder.Entity<TbLicParticipante>(entity =>
        {
            entity.HasKey(e => e.IdParticipante);

            entity.ToTable("tbLicParticipantes");

            entity.HasIndex(e => e.IdLicitacao, "IX_tbLicParticipantes_IdLicitacao");

            entity.HasIndex(e => new { e.IdLicitacao, e.IdPessoa }, "IX_tbLicParticipantes_IdLicitacao_IdPessoa");

            entity.HasIndex(e => new { e.IdLicitacao, e.FlHabilitado }, "IX_tbLicParticipantes_IdLicitacao_flHabilitado");

            entity.HasIndex(e => e.IdPessoa, "IX_tbLicParticipantes_IdPessoa");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivoNaoHabilitacao)
                .IsUnicode(false)
                .HasColumnName("dsMotivoNaoHabilitacao");
            entity.Property(e => e.DtConvite)
                .HasColumnType("datetime")
                .HasColumnName("dtConvite");
            entity.Property(e => e.DtCredenciamento)
                .HasColumnType("datetime")
                .HasColumnName("dtCredenciamento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlConvidado)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flConvidado");
            entity.Property(e => e.FlHabilitado)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flHabilitado");
            entity.Property(e => e.IdCrcf).HasColumnName("IdCRCF");
            entity.Property(e => e.NrIdade).HasColumnName("nrIdade");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbLicParticipantes)
                .HasForeignKey(d => d.IdLicitacao)
                .HasConstraintName("FK_tbLicParticipantes_tbLicLicitacoes");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbLicParticipantes)
                .HasForeignKey(d => d.IdPessoa)
                .HasConstraintName("FK_tbLicParticipantes_tbGerPessoas");
        });

        modelBuilder.Entity<TbLicParticipanteTecnica>(entity =>
        {
            entity.HasKey(e => new { e.IdParticipante, e.IdTecnica, e.IdOpcao });

            entity.ToTable("tbLicParticipanteTecnicas");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrPontuacao)
                .HasColumnType("money")
                .HasColumnName("nrPontuacao");

            entity.HasOne(d => d.IdOpcaoNavigation).WithMany(p => p.TbLicParticipanteTecnicas)
                .HasForeignKey(d => d.IdOpcao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicParticipanteTecnicas_tbLicTecnicaOpcoes");

            entity.HasOne(d => d.IdParticipanteNavigation).WithMany(p => p.TbLicParticipanteTecnicas)
                .HasForeignKey(d => d.IdParticipante)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicParticipanteTecnicas_tbLicParticipantes");

            entity.HasOne(d => d.IdTecnicaNavigation).WithMany(p => p.TbLicParticipanteTecnicas)
                .HasForeignKey(d => d.IdTecnica)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicParticipanteTecnicas_tbLicTecnicas");
        });

        modelBuilder.Entity<TbLicParticipantesLotesCotacao>(entity =>
        {
            entity.HasKey(e => new { e.IdParticipante, e.NrLote });

            entity.ToTable("tbLicParticipantesLotesCotacao");

            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.VlCotacao)
                .HasColumnType("money")
                .HasColumnName("vlCotacao");

            entity.HasOne(d => d.IdParticipanteNavigation).WithMany(p => p.TbLicParticipantesLotesCotacaos)
                .HasForeignKey(d => d.IdParticipante)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicParticipantesLotesCotacao_tbLicParticipantes");
        });

        modelBuilder.Entity<TbLicParticipantesSituacao>(entity =>
        {
            entity.HasKey(e => e.IdParticipanteSituacao);

            entity.ToTable("tbLicParticipantesSituacao");

            entity.Property(e => e.IdParticipanteSituacao).HasColumnName("idParticipanteSituacao");
            entity.Property(e => e.DsObservacoes)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsObservacoes");
            entity.Property(e => e.DtSituacao)
                .HasColumnType("datetime")
                .HasColumnName("dtSituacao");
            entity.Property(e => e.IdTipoSituacaoParticipante).HasColumnName("idTipoSituacaoParticipante");

            entity.HasOne(d => d.IdParticipanteNavigation).WithMany(p => p.TbLicParticipantesSituacaos)
                .HasForeignKey(d => d.IdParticipante)
                .HasConstraintName("FK_tbLicParticipantesSituacao_tbLicParticipantes");

            entity.HasOne(d => d.IdTipoSituacaoParticipanteNavigation).WithMany(p => p.TbLicParticipantesSituacaos)
                .HasForeignKey(d => d.IdTipoSituacaoParticipante)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicParticipantesSituacao_tbLicTiposSituacoesParticipantes");
        });

        modelBuilder.Entity<TbLicPenalidade>(entity =>
        {
            entity.HasKey(e => e.IdPenalidade);

            entity.ToTable("tbLicPenalidades");

            entity.Property(e => e.DsPenalidade)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsPenalidade");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSigla");
        });

        modelBuilder.Entity<TbLicPesquisaCotacaoIten>(entity =>
        {
            entity.HasKey(e => e.IdPesquisa);

            entity.ToTable("tbLicPesquisaCotacaoItens");

            entity.Property(e => e.IdPesquisa).HasColumnName("idPesquisa");
            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.VlMaximoUnitarioitem)
                .HasColumnType("money")
                .HasColumnName("vlMaximoUnitarioitem");
            entity.Property(e => e.VlMinimoUnitarioItem)
                .HasColumnType("money")
                .HasColumnName("vlMinimoUnitarioItem");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbLicPesquisaCotacaoItens)
                .HasForeignKey(d => d.IdLicitacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicPesquisaCotacaoItens_tbLicLicitacoes");
        });

        modelBuilder.Entity<TbLicPessoasInidonea>(entity =>
        {
            entity.HasKey(e => e.IdInidoneos);

            entity.ToTable("tbLicPessoasInidoneas");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbLicPessoasInidoneas)
                .HasForeignKey(d => d.IdPessoa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicPessoasInidoneas_tbGerPessoas");
        });

        modelBuilder.Entity<TbLicPessoasInidoneasMovimento>(entity =>
        {
            entity.HasKey(e => e.IdInidoneosMovimento);

            entity.ToTable("tbLicPessoasInidoneasMovimento");

            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsTipoLancamento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipoLancamento");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtPublicacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacao");
            entity.Property(e => e.NrProcessoAdm)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("nrProcessoAdm");
            entity.Property(e => e.TpImpedimento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpImpedimento");
        });

        modelBuilder.Entity<TbLicProcessosAdministrativo>(entity =>
        {
            entity.HasKey(e => e.IdProcAdm);

            entity.ToTable("tbLicProcessosAdministrativos");

            entity.Property(e => e.IdProcAdm).HasColumnName("idProcAdm");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsProcAdm)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsProcAdm");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrProcAdm)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrProcAdm");

            entity.HasMany(d => d.IdEmpenhos).WithMany(p => p.IdProcAdms)
                .UsingEntity<Dictionary<string, object>>(
                    "TbLicProcessosAdmEmpenho",
                    r => r.HasOne<TbDspEmpenho>().WithMany()
                        .HasForeignKey("IdEmpenho")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbLicProcessosAdmEmpenhos_tbDspEmpenhos"),
                    l => l.HasOne<TbLicProcessosAdministrativo>().WithMany()
                        .HasForeignKey("IdProcAdm")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbLicProcessosAdmEmpenhos_tbLicProcessosAdministrativos"),
                    j =>
                    {
                        j.HasKey("IdProcAdm", "IdEmpenho");
                        j.ToTable("tbLicProcessosAdmEmpenhos");
                        j.IndexerProperty<int>("IdProcAdm").HasColumnName("idProcAdm");
                        j.IndexerProperty<int>("IdEmpenho").HasColumnName("idEmpenho");
                    });
        });

        modelBuilder.Entity<TbLicPublicaco>(entity =>
        {
            entity.HasKey(e => e.IdPublicacao);

            entity.ToTable("tbLicPublicacoes");

            entity.HasIndex(e => e.IdLicitacao, "IX_tbLicPublicacoes_IdLicitacao");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsPublicacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsPublicacao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtPublicacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacao");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbLicPublicacos)
                .HasForeignKey(d => d.IdLicitacao)
                .HasConstraintName("FK_tbLicPublicacoes_tbLicLicitacoes");

            entity.HasOne(d => d.IdVeiculoPublicacaoNavigation).WithMany(p => p.TbLicPublicacos)
                .HasForeignKey(d => d.IdVeiculoPublicacao)
                .HasConstraintName("FK_tbLicPublicacoes_tbLicVeiculosPublicacoes");
        });

        modelBuilder.Entity<TbLicRecurso>(entity =>
        {
            entity.HasKey(e => new { e.IdLicitacao, e.IdRecurso });

            entity.ToTable("tbLicRecursos");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtVinculacao)
                .HasColumnType("datetime")
                .HasColumnName("dtVinculacao");

            entity.HasOne(d => d.IdLicitacaoNavigation).WithMany(p => p.TbLicRecursos)
                .HasForeignKey(d => d.IdLicitacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicRecursos_tbLicLicitacoes");

            entity.HasOne(d => d.IdRecursoNavigation).WithMany(p => p.TbLicRecursos)
                .HasForeignKey(d => d.IdRecurso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLicRecursos_tbCapRecursos");
        });

        modelBuilder.Entity<TbLicRegimesExecuco>(entity =>
        {
            entity.HasKey(e => e.IdRegimeExecucao).HasName("PK_tbLicRegimeExecucao");

            entity.ToTable("tbLicRegimesExecucoes");

            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.DsRegimeExecucao)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("dsRegimeExecucao");
            entity.Property(e => e.FlAtivo).HasColumnName("flAtivo");
            entity.Property(e => e.FlPadraoTce)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPadraoTCE");
            entity.Property(e => e.TpObjeto)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpObjeto");
        });

        modelBuilder.Entity<TbLicSituaco>(entity =>
        {
            entity.HasKey(e => e.IdSituacao);

            entity.ToTable("tbLicSituacoes");

            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSigla");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.FlAtivo).HasColumnName("flAtivo");
        });

        modelBuilder.Entity<TbLicTecnica>(entity =>
        {
            entity.HasKey(e => e.IdTecnica);

            entity.ToTable("tbLicTecnicas");

            entity.Property(e => e.DsTecnica)
                .IsUnicode(false)
                .HasColumnName("dsTecnica");
            entity.Property(e => e.FlMultiplaEscolha)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flMultiplaEscolha");
        });

        modelBuilder.Entity<TbLicTecnicaOpco>(entity =>
        {
            entity.HasKey(e => e.IdOpcao);

            entity.ToTable("tbLicTecnicaOpcoes");

            entity.Property(e => e.DsOpcao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsOpcao");
            entity.Property(e => e.NrPontuacaoPadrao)
                .HasColumnType("money")
                .HasColumnName("nrPontuacaoPadrao");

            entity.HasOne(d => d.IdTecnicaNavigation).WithMany(p => p.TbLicTecnicaOpcos)
                .HasForeignKey(d => d.IdTecnica)
                .HasConstraintName("FK_tbLicTecnicaOpcoes_tbLicTecnicas");
        });

        modelBuilder.Entity<TbLicTipoCrcf>(entity =>
        {
            entity.HasKey(e => e.IdTipoCrcf);

            entity.ToTable("tbLicTipoCRCF");

            entity.Property(e => e.IdTipoCrcf).HasColumnName("idTipoCRCF");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
            entity.Property(e => e.FlMostrarNumDocto).HasColumnName("flMostrarNumDocto");
            entity.Property(e => e.FlNumeraAnual).HasColumnName("flNumeraAnual");
            entity.Property(e => e.FlSomenteDoctosVinculados).HasColumnName("flSomenteDoctosVinculados");
            entity.Property(e => e.IdTexto).HasColumnName("idTexto");
            entity.Property(e => e.NmRelatorio)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmRelatorio");
            entity.Property(e => e.NmTipoCrcf)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmTipoCRCF");

            entity.HasMany(d => d.IdDocCrcfs).WithMany(p => p.IdTipoCrcfs)
                .UsingEntity<Dictionary<string, object>>(
                    "TbLicTipoCrcfdocto",
                    r => r.HasOne<TbLicDoctosCrcf>().WithMany()
                        .HasForeignKey("IdDocCrcf")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbLicTipoCRCFDoctos_tbLicDoctosCRCF"),
                    l => l.HasOne<TbLicTipoCrcf>().WithMany()
                        .HasForeignKey("IdTipoCrcf")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbLicTipoCRCFDoctos_tbLicTipoCRCF"),
                    j =>
                    {
                        j.HasKey("IdTipoCrcf", "IdDocCrcf");
                        j.ToTable("tbLicTipoCRCFDoctos");
                        j.IndexerProperty<short>("IdTipoCrcf").HasColumnName("idTipoCRCF");
                        j.IndexerProperty<short>("IdDocCrcf").HasColumnName("IdDocCRCF");
                    });
        });

        modelBuilder.Entity<TbLicTiposAtribuicaoComisso>(entity =>
        {
            entity.HasKey(e => e.IdTipoAtribuicaoComissao);

            entity.ToTable("tbLicTiposAtribuicaoComissoes");

            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.NmTipoAtribuicaoComissao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmTipoAtribuicaoComissao");
        });

        modelBuilder.Entity<TbLicTiposAvaliaco>(entity =>
        {
            entity.HasKey(e => e.IdTipoAvaliacao).HasName("PK_tbLicTipoAvaliacoes");

            entity.ToTable("tbLicTiposAvaliacoes");

            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.DsTipoAvaliacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoAvaliacao");
            entity.Property(e => e.FlAtivo).HasColumnName("flAtivo");
            entity.Property(e => e.FlPadraoTce)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPadraoTCE");
        });

        modelBuilder.Entity<TbLicTiposCargoFuncao>(entity =>
        {
            entity.HasKey(e => e.IdTipoCargoFuncao);

            entity.ToTable("tbLicTiposCargoFuncao");

            entity.Property(e => e.IdTipoCargoFuncao)
                .ValueGeneratedNever()
                .HasColumnName("idTipoCargoFuncao");
            entity.Property(e => e.DsTipoCargoFuncao)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("dsTipoCargoFuncao");
        });

        modelBuilder.Entity<TbLicTiposComissao>(entity =>
        {
            entity.HasKey(e => e.IdTipoComissao);

            entity.ToTable("tbLicTiposComissao");

            entity.Property(e => e.IdTipoComissao).ValueGeneratedNever();
            entity.Property(e => e.NmTipoComissao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmTipoComissao");
        });

        modelBuilder.Entity<TbLicTiposCompra>(entity =>
        {
            entity.HasKey(e => e.IdTipoCompra);

            entity.ToTable("tbLicTiposCompras");

            entity.Property(e => e.DsObservacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsObservacao");
            entity.Property(e => e.NmTipoCompra)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmTipoCompra");
        });

        modelBuilder.Entity<TbLicTiposDocumento>(entity =>
        {
            entity.HasKey(e => e.IdTipoDocumento);

            entity.ToTable("tbLicTiposDocumento");

            entity.Property(e => e.NmTipoDocumento)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmTipoDocumento");

            entity.HasMany(d => d.IdQueries).WithMany(p => p.IdTipoDocumentos)
                .UsingEntity<Dictionary<string, object>>(
                    "TbLicTiposDocumentoQuery",
                    r => r.HasOne<TbSisQuery>().WithMany()
                        .HasForeignKey("IdQuery")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbLicTiposDocumentoQueries_tbSisQueries"),
                    l => l.HasOne<TbLicTiposDocumento>().WithMany()
                        .HasForeignKey("IdTipoDocumento")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbLicTiposDocumentoQueries_tbLicTiposDocumento"),
                    j =>
                    {
                        j.HasKey("IdTipoDocumento", "IdQuery");
                        j.ToTable("tbLicTiposDocumentoQueries");
                    });
        });

        modelBuilder.Entity<TbLicTiposEntregasProduto>(entity =>
        {
            entity.HasKey(e => e.IdTipoEntregaProduto);

            entity.ToTable("tbLicTiposEntregasProdutos");

            entity.Property(e => e.IdTipoEntregaProduto)
                .ValueGeneratedNever()
                .HasColumnName("idTipoEntregaProduto");
            entity.Property(e => e.DsTipoEntregaProduto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoEntregaProduto");
        });

        modelBuilder.Entity<TbLicTiposSituacoesParticipante>(entity =>
        {
            entity.HasKey(e => e.IdTipoSituacaoParticipante);

            entity.ToTable("tbLicTiposSituacoesParticipantes");

            entity.Property(e => e.IdTipoSituacaoParticipante)
                .ValueGeneratedNever()
                .HasColumnName("idTipoSituacaoParticipante");
            entity.Property(e => e.DsTipoSituacaoParticipante)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoSituacaoParticipante");
        });

        modelBuilder.Entity<TbLicVeiculosPublicaco>(entity =>
        {
            entity.HasKey(e => e.IdVeiculoPublicacao).HasName("PK_tbLicVeiculosPublicacao");

            entity.ToTable("tbLicVeiculosPublicacoes");

            entity.Property(e => e.DsVeiculoPublicacao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsVeiculoPublicacao");
            entity.Property(e => e.FlAtivo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flAtivo");
            entity.Property(e => e.FlExigeContrato)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flExigeContrato");
            entity.Property(e => e.FlMural)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flMural");
            entity.Property(e => e.FlOrgaoOficial)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flOrgaoOficial");
        });

        modelBuilder.Entity<TbOrcAlteracoesDotacoesTransferencium>(entity =>
        {
            entity.HasKey(e => new { e.IdAlteracao, e.IdAlteracaoTransferencia }).HasName("PK_tbOrcAlteracoesDotacoesTransferencia_1");

            entity.ToTable("tbOrcAlteracoesDotacoesTransferencia");
        });

        modelBuilder.Entity<TbOrcAlteracoesOrcExterna>(entity =>
        {
            entity.HasKey(e => e.IdAlteracao);

            entity.ToTable("tbOrcAlteracoesOrcExterna");

            entity.Property(e => e.IdAlteracao)
                .ValueGeneratedNever()
                .HasColumnName("idAlteracao");
            entity.Property(e => e.NrAnoAtoAlteracao)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nrAnoAtoAlteracao");
            entity.Property(e => e.NrAtoAlteracao).HasColumnName("nrAtoAlteracao");
        });

        modelBuilder.Entity<TbOrcAlteracoesOrcamentaria>(entity =>
        {
            entity.HasKey(e => e.IdAlteracao);

            entity.ToTable("tbOrcAlteracoesOrcamentarias");

            entity.HasIndex(e => e.Iddotacao, "IX_tbOrcAlteracoesOrcamentarias_IDDotacao");

            entity.HasIndex(e => e.IdAtoAlteracao, "IX_tbOrcAlteracoesOrcamentarias_IdAtoAlteracao");

            entity.HasIndex(e => new { e.IdAtoAlteracao, e.Iddotacao }, "IX_tbOrcAlteracoesOrcamentarias_IdAtoAlteracao_IDDotacao");

            entity.HasIndex(e => new { e.IdAtoAlteracao, e.Iddotacao, e.IdTipoRecurso }, "IX_tbOrcAlteracoesOrcamentarias_IdAtoAlteracao_IDDotacao_IdTipoRecurso");

            entity.HasIndex(e => new { e.IdAtoAlteracao, e.IdTipoRecurso, e.Iddotacao }, "IX_tbOrcAlteracoesOrcamentarias_IdAtoAlteracao_IdTipoRecurso_IDDotacao");

            entity.HasIndex(e => new { e.IdTipoAlteracao, e.Iddotacao }, "IX_tbOrcAlteracoesOrcamentarias_IdTipoAlteracao_IDDotacao");

            entity.Property(e => e.DsObservacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsObservacao");
            entity.Property(e => e.DsTipoCredito)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoCredito");
            entity.Property(e => e.FlTipoTransferencia)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flTipoTransferencia");
            entity.Property(e => e.IdTcepessoaTransf).HasColumnName("IdTCEPessoaTransf");
            entity.Property(e => e.IdTipoCreditoAdicional).HasColumnName("idTipoCreditoAdicional");
            entity.Property(e => e.IdTipoOperacaoCreditoAdicional).HasColumnName("idTipoOperacaoCreditoAdicional");
            entity.Property(e => e.Iddotacao).HasColumnName("IDDotacao");
            entity.Property(e => e.VlAlteracao)
                .HasColumnType("money")
                .HasColumnName("vlAlteracao");

            entity.HasOne(d => d.IdAtoAlteracaoNavigation).WithMany(p => p.TbOrcAlteracoesOrcamentaria)
                .HasForeignKey(d => d.IdAtoAlteracao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcAlteracoesOrcamentarias_tbOrcAtosAlteracoes");

            entity.HasOne(d => d.IdLimiteCreditoNavigation).WithMany(p => p.TbOrcAlteracoesOrcamentaria)
                .HasForeignKey(d => d.IdLimiteCredito)
                .HasConstraintName("FK_tbOrcAlteracoesOrcamentarias_tbOrcLimiteCreditoAdicional");

            entity.HasOne(d => d.IdTipoAlteracaoNavigation).WithMany(p => p.TbOrcAlteracoesOrcamentaria)
                .HasForeignKey(d => d.IdTipoAlteracao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcAlteracoesOrcamentarias_tbOrcTiposAlteracaoOrcamentaria");

            entity.HasOne(d => d.IdTipoCreditoAdicionalNavigation).WithMany(p => p.TbOrcAlteracoesOrcamentaria)
                .HasForeignKey(d => d.IdTipoCreditoAdicional)
                .HasConstraintName("FK_tbOrcAlteracoesOrcamentarias_tbOrcTipoCreditoAdicional");

            entity.HasOne(d => d.IdTipoOperacaoCreditoAdicionalNavigation).WithMany(p => p.TbOrcAlteracoesOrcamentaria)
                .HasForeignKey(d => d.IdTipoOperacaoCreditoAdicional)
                .HasConstraintName("FK_tbOrcAlteracoesOrcamentarias_tbOrcTiposOperacaoCreditoAdicional");

            entity.HasOne(d => d.IdTipoRecursoNavigation).WithMany(p => p.TbOrcAlteracoesOrcamentaria)
                .HasForeignKey(d => d.IdTipoRecurso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcAlteracoesOrcamentarias_tbOrcTiposRecursos");

            entity.HasOne(d => d.IddotacaoNavigation).WithMany(p => p.TbOrcAlteracoesOrcamentaria)
                .HasForeignKey(d => d.Iddotacao)
                .HasConstraintName("FK_tbOrcAlteracoesOrcamentarias_tbOrcDotacoes");

            entity.HasMany(d => d.IdSolicitacaoDotacaos).WithMany(p => p.IdAlteracaos)
                .UsingEntity<Dictionary<string, object>>(
                    "TbOrcAlteracoesOrcSolicSuplementacao",
                    r => r.HasOne<TbOrcSolicitacoesSuplementacaoDotaco>().WithMany()
                        .HasForeignKey("IdSolicitacaoDotacao")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbOrcAlteracoesOrcSolicSuplementacao_tbOrcSolicitacoesSuplementacaoDotacoes"),
                    l => l.HasOne<TbOrcAlteracoesOrcamentaria>().WithMany()
                        .HasForeignKey("IdAlteracao")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbOrcAlteracoesOrcSolicSuplementacao_tbOrcAlteracoesOrcamentarias"),
                    j =>
                    {
                        j.HasKey("IdAlteracao", "IdSolicitacaoDotacao");
                        j.ToTable("tbOrcAlteracoesOrcSolicSuplementacao");
                    });
        });

        modelBuilder.Entity<TbOrcArtigosCreditoAdicional>(entity =>
        {
            entity.HasKey(e => e.IdArtigo);

            entity.ToTable("tbOrcArtigosCreditoAdicional");

            entity.Property(e => e.DsArtigo)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("dsArtigo");
            entity.Property(e => e.IdLeiAto).HasColumnName("idLeiAto");
            entity.Property(e => e.NrAnoLei).HasColumnName("nrAnoLei");
            entity.Property(e => e.NrArtigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrArtigo");
            entity.Property(e => e.NrLei).HasColumnName("nrLei");
            entity.Property(e => e.TpArtigo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpArtigo");
            entity.Property(e => e.VlPercentual)
                .HasColumnType("money")
                .HasColumnName("vlPercentual");
        });

        modelBuilder.Entity<TbOrcArtigosExclusaoCreditoAdicional>(entity =>
        {
            entity.HasKey(e => e.IdArtigoExclusao);

            entity.ToTable("tbOrcArtigosExclusaoCreditoAdicional");

            entity.Property(e => e.DsArtigo)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("dsArtigo");
            entity.Property(e => e.NrAnoLei).HasColumnName("nrAnoLei");
            entity.Property(e => e.NrArtigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrArtigo");
            entity.Property(e => e.NrLei).HasColumnName("nrLei");
            entity.Property(e => e.VlPercentual)
                .HasColumnType("money")
                .HasColumnName("vlPercentual");
        });

        modelBuilder.Entity<TbOrcAtosAlteraco>(entity =>
        {
            entity.HasKey(e => e.IdAtoAlteracao);

            entity.ToTable("tbOrcAtosAlteracoes");

            entity.HasIndex(e => new { e.IdEmpresa, e.IdTipoAtoAlteracao, e.NrAtoAlteracao, e.NrAnoAtoAlteracao, e.IdAtoAlteracao, e.DsSituacao }, "IX_tbOrcAtosAlteracoes_IdEmpresa_IdTipoAtoAlt_nrAtoAlt_nrAnoAtoAlt_IdAtoAlt_dsSit");

            entity.HasIndex(e => new { e.IdLei, e.DsSituacao }, "IX_tbOrcAtosAlteracoes_idLei_dsSituacao");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMensagem)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsMensagem");
            entity.Property(e => e.DsObservacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsObservacao");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.DtAtoAlteracao)
                .HasColumnType("datetime")
                .HasColumnName("dtAtoAlteracao");
            entity.Property(e => e.DtDeferimento)
                .HasColumnType("datetime")
                .HasColumnName("dtDeferimento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtLei)
                .HasColumnType("datetime")
                .HasColumnName("dtLei");
            entity.Property(e => e.DtPublicacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacao");
            entity.Property(e => e.DtPublicacaoBelem)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoBelem");
            entity.Property(e => e.DtPublicacaoLei)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoLei");
            entity.Property(e => e.IdLei).HasColumnName("idLei");
            entity.Property(e => e.NrAnoAtoAlteracao).HasColumnName("nrAnoAtoAlteracao");
            entity.Property(e => e.NrAnoLei).HasColumnName("nrAnoLei");
            entity.Property(e => e.NrAtoAlteracao).HasColumnName("nrAtoAlteracao");
            entity.Property(e => e.NrLei).HasColumnName("nrLei");
            entity.Property(e => e.NrOrgaoOficial).HasColumnName("nrOrgaoOficial");
            entity.Property(e => e.NrPaginas)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrPaginas");
            entity.Property(e => e.TpPortaria).HasColumnName("tpPortaria");

            entity.HasOne(d => d.IdTipoAtoAlteracaoNavigation).WithMany(p => p.TbOrcAtosAlteracos)
                .HasForeignKey(d => d.IdTipoAtoAlteracao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcAtosAlteracoes_tbOrcTiposAtoAlteracao");
        });

        modelBuilder.Entity<TbOrcAtosAlteracoesErrata>(entity =>
        {
            entity.HasKey(e => e.IdErrata);

            entity.ToTable("tbOrcAtosAlteracoesErratas");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DtErrata)
                .HasColumnType("datetime")
                .HasColumnName("dtErrata");
            entity.Property(e => e.VlRevisao)
                .HasColumnType("money")
                .HasColumnName("vlRevisao");
        });

        modelBuilder.Entity<TbOrcAtualizacoesMonetOrcamentoDotaco>(entity =>
        {
            entity.HasKey(e => new { e.IdAtualizacao, e.Iddotacao });

            entity.ToTable("tbOrcAtualizacoesMonetOrcamentoDotacoes");

            entity.Property(e => e.Iddotacao).HasColumnName("IDDotacao");
            entity.Property(e => e.VlCorrecao)
                .HasColumnType("money")
                .HasColumnName("vlCorrecao");

            entity.HasOne(d => d.IdAtualizacaoNavigation).WithMany(p => p.TbOrcAtualizacoesMonetOrcamentoDotacos)
                .HasForeignKey(d => d.IdAtualizacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcAtualizacoesMonetOrcamentoDotacoes_tbOrcAtualizacoesMonetariaOrcamento");

            entity.HasOne(d => d.IddotacaoNavigation).WithMany(p => p.TbOrcAtualizacoesMonetOrcamentoDotacos)
                .HasForeignKey(d => d.Iddotacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcAtualizacoesMonetOrcamentoDotacoes_tbOrcDotacoes");
        });

        modelBuilder.Entity<TbOrcAtualizacoesMonetOrcamentoReceita>(entity =>
        {
            entity.HasKey(e => new { e.IdAtualizacao, e.IdReceita });

            entity.ToTable("tbOrcAtualizacoesMonetOrcamentoReceitas");

            entity.Property(e => e.VlCorrecao)
                .HasColumnType("money")
                .HasColumnName("vlCorrecao");

            entity.HasOne(d => d.IdAtualizacaoNavigation).WithMany(p => p.TbOrcAtualizacoesMonetOrcamentoReceita)
                .HasForeignKey(d => d.IdAtualizacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcAtualizacoesMonetOrcamentoReceitas_tbOrcAtualizacoesMonetariaOrcamento");
        });

        modelBuilder.Entity<TbOrcAtualizacoesMonetariaOrcamento>(entity =>
        {
            entity.HasKey(e => e.IdAtualizacao);

            entity.ToTable("tbOrcAtualizacoesMonetariaOrcamento");

            entity.Property(e => e.DtDecreto)
                .HasColumnType("datetime")
                .HasColumnName("dtDecreto");
            entity.Property(e => e.DtPublicacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacao");
            entity.Property(e => e.IdLeiAto).HasColumnName("idLeiAto");
            entity.Property(e => e.IdTipoAtualizacaoOrcamentariaDespesa).HasColumnName("idTipoAtualizacaoOrcamentariaDespesa");
            entity.Property(e => e.IdTipoAtualizacaoOrcamentariaReceita).HasColumnName("idTipoAtualizacaoOrcamentariaReceita");
            entity.Property(e => e.NrAnoDecreto).HasColumnName("nrAnoDecreto");
            entity.Property(e => e.NrDecreto).HasColumnName("nrDecreto");
            entity.Property(e => e.VlAtualizadoDespesas)
                .HasColumnType("money")
                .HasColumnName("vlAtualizadoDespesas");
            entity.Property(e => e.VlAtualizadoReceitas)
                .HasColumnType("money")
                .HasColumnName("vlAtualizadoReceitas");
            entity.Property(e => e.VlPercentualCorr)
                .HasColumnType("money")
                .HasColumnName("vlPercentualCorr");

            entity.HasOne(d => d.IdEmpresaNavigation).WithMany(p => p.TbOrcAtualizacoesMonetariaOrcamentos)
                .HasForeignKey(d => d.IdEmpresa)
                .HasConstraintName("FK_tbOrcAtualizacoesMonetariaOrcamento_tbGerEmpresasGoverno");

            entity.HasOne(d => d.IdTipoAtualizacaoOrcamentariaReceitaNavigation).WithMany(p => p.TbOrcAtualizacoesMonetariaOrcamentos)
                .HasForeignKey(d => d.IdTipoAtualizacaoOrcamentariaReceita)
                .HasConstraintName("FK_tbOrcAtualizacoesMonetariaOrcamento_tbOrcTipoAtualizacaoOrcamentaria");
        });

        modelBuilder.Entity<TbOrcAudienciaAnexo>(entity =>
        {
            entity.HasKey(e => e.IdAnexo);

            entity.ToTable("tbOrcAudienciaAnexos");

            entity.Property(e => e.IdAnexo).HasColumnName("idAnexo");
            entity.Property(e => e.BnObjeto).HasColumnName("bnObjeto");
            entity.Property(e => e.DsExtencao)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("dsExtencao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObjeto)
                .HasMaxLength(255)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlPublicaPortalFornecedor)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPublicaPortalFornecedor");
            entity.Property(e => e.FlPublicaPortalTransparencia)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPublicaPortalTransparencia");
            entity.Property(e => e.IdAudiencia).HasColumnName("idAudiencia");
            entity.Property(e => e.NmAnexo)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("nmAnexo");
        });

        modelBuilder.Entity<TbOrcAudienciaPublica>(entity =>
        {
            entity.HasKey(e => e.IdAudiencia);

            entity.ToTable("tbOrcAudienciaPublica");

            entity.Property(e => e.IdAudiencia).HasColumnName("idAudiencia");
            entity.Property(e => e.DsAssunto)
                .IsUnicode(false)
                .HasColumnName("dsAssunto");
            entity.Property(e => e.DsGestores)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("dsGestores");
            entity.Property(e => e.DsTitulo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTitulo");
            entity.Property(e => e.DtAudiencia)
                .HasColumnType("datetime")
                .HasColumnName("dtAudiencia");
            entity.Property(e => e.IdEmpresa).HasColumnName("idEmpresa");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<TbOrcAutorizacaoCreditoAdicional>(entity =>
        {
            entity.HasKey(e => e.IdAutorizacao);

            entity.ToTable("tbOrcAutorizacaoCreditoAdicional");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdTipoCreditoAdicional).HasColumnName("idTipoCreditoAdicional");
            entity.Property(e => e.TpBaseCalculo).HasColumnName("tpBaseCalculo");
            entity.Property(e => e.TpValor)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpValor");
            entity.Property(e => e.VlAutorizado)
                .HasColumnType("money")
                .HasColumnName("vlAutorizado");

            entity.HasOne(d => d.IdArtigoNavigation).WithMany(p => p.TbOrcAutorizacaoCreditoAdicionals)
                .HasForeignKey(d => d.IdArtigo)
                .HasConstraintName("FK_tbOrcAutorizacaoCreditoAdicional_tbOrcArtigosExclusaoCreditoAdicional");

            entity.HasOne(d => d.IdTipoCreditoAdicionalNavigation).WithMany(p => p.TbOrcAutorizacaoCreditoAdicionals)
                .HasForeignKey(d => d.IdTipoCreditoAdicional)
                .HasConstraintName("FK_tbOrcAutorizacaoCreditoAdicional_tbOrcTipoCreditoAdicional");
        });

        modelBuilder.Entity<TbOrcConsolidacaoOrcamento>(entity =>
        {
            entity.HasKey(e => e.IdConsolidacao).HasName("PK_tbOrcConsolidacaoOrcamento_1");

            entity.ToTable("tbOrcConsolidacaoOrcamento");

            entity.Property(e => e.IdOperacaoLoa).HasColumnName("IdOperacaoLOA");
            entity.Property(e => e.NrAnoLei).HasColumnName("nrAnoLei");
            entity.Property(e => e.NrAnoOrcamento).HasColumnName("nrAnoOrcamento");
            entity.Property(e => e.NrLei).HasColumnName("nrLei");
            entity.Property(e => e.TpAdministracao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpAdministracao");
            entity.Property(e => e.VlAtualizadoDespesas)
                .HasColumnType("money")
                .HasColumnName("vlAtualizadoDespesas");
            entity.Property(e => e.VlAtualizadoReceitas)
                .HasColumnType("money")
                .HasColumnName("vlAtualizadoReceitas");
            entity.Property(e => e.VlEgressos)
                .HasColumnType("money")
                .HasColumnName("vlEgressos");
            entity.Property(e => e.VlIngressos)
                .HasColumnType("money")
                .HasColumnName("vlIngressos");
            entity.Property(e => e.VlInicialDespesas)
                .HasColumnType("money")
                .HasColumnName("vlInicialDespesas");
            entity.Property(e => e.VlInicialReceitas)
                .HasColumnType("money")
                .HasColumnName("vlInicialReceitas");
        });

        modelBuilder.Entity<TbOrcDescentralizacoesCredito>(entity =>
        {
            entity.HasKey(e => e.IdDescentralizacao);

            entity.ToTable("tbOrcDescentralizacoesCreditos");

            entity.Property(e => e.DsHistorico)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtAnalise)
                .HasColumnType("datetime")
                .HasColumnName("dtAnalise");
            entity.Property(e => e.DtDescentralizacao)
                .HasColumnType("datetime")
                .HasColumnName("dtDescentralizacao");
            entity.Property(e => e.DtEvento)
                .HasColumnType("datetime")
                .HasColumnName("dtEvento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtPublicacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrConvenio)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrConvenio");
        });

        modelBuilder.Entity<TbOrcDescentralizacoesCreditosDotaco>(entity =>
        {
            entity.HasKey(e => e.IdDescentralizacaoDotacao).HasName("PK_tbOrcDescentralizacoesCreditosDotacoes_1");

            entity.ToTable("tbOrcDescentralizacoesCreditosDotacoes");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.VlOperacao)
                .HasColumnType("money")
                .HasColumnName("vlOperacao");

            entity.HasOne(d => d.IdDescentralizacaoNavigation).WithMany(p => p.TbOrcDescentralizacoesCreditosDotacos)
                .HasForeignKey(d => d.IdDescentralizacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcDescentralizacoesCreditosDotacoes_tbOrcDescentralizacoesCreditos");

            entity.HasOne(d => d.IdDotacaoNavigation).WithMany(p => p.TbOrcDescentralizacoesCreditosDotacos)
                .HasForeignKey(d => d.IdDotacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcDescentralizacoesCreditosDotacoes_tbOrcDotacoes");
        });

        modelBuilder.Entity<TbOrcDotaco>(entity =>
        {
            entity.HasKey(e => e.Iddotacao).HasName("PK_tbOrcDotacao");

            entity.ToTable("tbOrcDotacoes");

            entity.HasIndex(e => new { e.Iddotacao, e.IdAcao }, "IX_IDDotacao_IdAcao").HasFillFactor(90);

            entity.HasIndex(e => new { e.Iddotacao, e.IdFonte }, "IX_IDDotacao_IdFonte").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdAcao, e.Iddotacao }, "IX_IdAcao_IDDotacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdAcao, e.IdFonte, e.IdNatDespesa, e.Iddotacao }, "IX_IdAcao_IdFonte_IdNatDespesa_IDDotacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdFonte, e.Iddotacao }, "IX_IdFonte_IdDotacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.Iddotacao, e.IdAcao, e.IdNatDespesa, e.IdFonte }, "IX_tbOrcDotacoes_IDDotacao_IdAcao_IdNatDespesa_IdFonte");

            entity.HasIndex(e => new { e.Iddotacao, e.IdFonte, e.IdAcao }, "IX_tbOrcDotacoes_IDDotacao_IdFonte_IdAcao");

            entity.HasIndex(e => e.IdAcao, "IX_tbOrcDotacoes_IdAcao");

            entity.HasIndex(e => new { e.IdAcao, e.Iddotacao, e.IdNatDespesa }, "IX_tbOrcDotacoes_IdAcao_IDDotacao_IdNatDespesa_inc_IdFonte_vlOrcado");

            entity.HasIndex(e => new { e.IdAcao, e.IdFonte, e.Iddotacao }, "IX_tbOrcDotacoes_IdAcao_IdFonte_IDDotacao");

            entity.HasIndex(e => new { e.IdNatDespesa, e.IdAcao }, "IX_tbOrcDotacoes_IdNatDespesa_IdAcao_inc_IDDotacao_vlOrcado");

            entity.HasIndex(e => new { e.IdNatDespesa, e.IdFonte, e.IdRecurso, e.IdAcao }, "IX_tbOrcDotacoes_IdNatDespesa_IdFonte_IdRecurso_IdAcao");

            entity.Property(e => e.Iddotacao).HasColumnName("IDDotacao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsTipoCredito)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoCredito");
            entity.Property(e => e.DsTipoOrcamento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipoOrcamento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdTipoCreditoInicial).HasColumnName("idTipoCreditoInicial");
            entity.Property(e => e.VlDisponivel)
                .HasColumnType("money")
                .HasColumnName("vlDisponivel");
            entity.Property(e => e.VlOrcado)
                .HasColumnType("money")
                .HasColumnName("vlOrcado");

            entity.HasOne(d => d.IdAcaoNavigation).WithMany(p => p.TbOrcDotacos)
                .HasForeignKey(d => d.IdAcao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcDotacoes_tbOrcProgramasAcoes");

            entity.HasOne(d => d.IdFonteNavigation).WithMany(p => p.TbOrcDotacos)
                .HasForeignKey(d => d.IdFonte)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcDotacoes_tbOrcFontes");

            entity.HasOne(d => d.IdNatDespesaNavigation).WithMany(p => p.TbOrcDotacos)
                .HasForeignKey(d => d.IdNatDespesa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcDotacoes_tbOrcNaturezasDespesa");

            entity.HasOne(d => d.IdTipoCreditoInicialNavigation).WithMany(p => p.TbOrcDotacos)
                .HasForeignKey(d => d.IdTipoCreditoInicial)
                .HasConstraintName("FK_tbOrcDotacoes_tbOrcTipoCreditoInicial");
        });

        modelBuilder.Entity<TbOrcDotacoesBloqueiosManual>(entity =>
        {
            entity.HasKey(e => e.IdBloqueio);

            entity.ToTable("tbOrcDotacoesBloqueiosManual");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsHistorico)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsOperacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsOperacao");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtBloqueio)
                .HasColumnType("datetime")
                .HasColumnName("dtBloqueio");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlBloqueiaSca)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flBloqueiaSCA");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlBloqueio)
                .HasColumnType("money")
                .HasColumnName("vlBloqueio");
            entity.Property(e => e.VlPercentual)
                .HasColumnType("money")
                .HasColumnName("vlPercentual");

            entity.HasOne(d => d.IdDotacaoNavigation).WithMany(p => p.TbOrcDotacoesBloqueiosManuals)
                .HasForeignKey(d => d.IdDotacao)
                .HasConstraintName("FK_tbOrcDotacoesBloqueiosManual_tbOrcDotacoes");
        });

        modelBuilder.Entity<TbOrcDotacoesMovimentacao>(entity =>
        {
            entity.HasKey(e => e.IdMovimento);

            entity.ToTable("tbOrcDotacoesMovimentacao");

            entity.HasIndex(e => new { e.IdDotacao, e.DtMovimento, e.DsTipo }, "IX_IdDotacao_dtMovimento_dtMovimento").HasFillFactor(90);

            entity.HasIndex(e => new { e.DsTipo, e.IdDotacao }, "IX_dsTipo_IdDotacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.DsObjeto, e.DsNumObjeto }, "IX_tbOrcDotacoesMovimentacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdDotacao, e.DsTipo, e.DsObjeto }, "IX_tbOrcDotacoesMovimentacao_IdDotacao_dsTipo_dsObjeto_inc_vlMov_dsNumObj");

            entity.HasIndex(e => new { e.IdDotacao, e.DsTipo, e.DsOrigem, e.DtMovimento }, "IX_tbOrcDotacoesMovimentacao_IdDotacao_dsTipo_dsOrigem_inc_vlMovimento");

            entity.HasIndex(e => new { e.IdDotacao, e.DsTipo, e.DtObjeto }, "IX_tbOrcDotacoesMovimentacao_IdDotacao_dsTipo_dtObjeto_inc_vlMov");

            entity.HasIndex(e => new { e.IdDotacao, e.DsTipo }, "IX_tbOrcDotacoesMovimentacao_IdDotacao_dsTipo_inc_dtMov_vlMov_dtObjeto");

            entity.HasIndex(e => new { e.IdDotacao, e.DsTipo, e.DtMovimento }, "IX_tbOrcDotacoesMovimentacao_IdDotacao_dsTipo_inc_vlMovimento");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsNumObjeto)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsNumObjeto");
            entity.Property(e => e.DsObjeto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("Empenho, RMS, Solicitação Adicional, Bloqueio de Programação")
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DsOcorrencia)
                .IsUnicode(false)
                .HasColumnName("dsOcorrencia");
            entity.Property(e => e.DsOrigem)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsOrigem");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.DtObjeto)
                .HasColumnType("datetime")
                .HasColumnName("dtObjeto");
            entity.Property(e => e.VlMovimento)
                .HasColumnType("money")
                .HasColumnName("vlMovimento");

            entity.HasOne(d => d.IdDotacaoNavigation).WithMany(p => p.TbOrcDotacoesMovimentacaos)
                .HasForeignKey(d => d.IdDotacao)
                .HasConstraintName("FK_tbOrcDotacoesMovimentacao_tbOrcDotacoes");
        });

        modelBuilder.Entity<TbOrcDotacoesSubAcoesTarefa>(entity =>
        {
            entity.HasKey(e => new { e.Iddotacao, e.IdSubAcaoTarefa });

            entity.ToTable("tbOrcDotacoesSubAcoesTarefas");

            entity.Property(e => e.Iddotacao).HasColumnName("IDDotacao");
            entity.Property(e => e.VlDisponivel)
                .HasColumnType("money")
                .HasColumnName("vlDisponivel");
            entity.Property(e => e.VlOrcado)
                .HasColumnType("money")
                .HasColumnName("vlOrcado");

            entity.HasOne(d => d.IdSubAcaoTarefaNavigation).WithMany(p => p.TbOrcDotacoesSubAcoesTarefas)
                .HasForeignKey(d => d.IdSubAcaoTarefa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcDotacoesSubAcoesTarefas_tbOrcSubAcoesTarefas");

            entity.HasOne(d => d.IddotacaoNavigation).WithMany(p => p.TbOrcDotacoesSubAcoesTarefas)
                .HasForeignKey(d => d.Iddotacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcDotacoesSubAcoesTarefas_tbOrcDotacoes");
        });

        modelBuilder.Entity<TbOrcEstornosDotaco>(entity =>
        {
            entity.HasKey(e => e.IdEstorno);

            entity.ToTable("tbOrcEstornosDotacoes");

            entity.Property(e => e.IdEstorno)
                .ValueGeneratedNever()
                .HasColumnName("idEstorno");
            entity.Property(e => e.DtEstorno)
                .HasColumnType("datetime")
                .HasColumnName("dtEstorno");
            entity.Property(e => e.Iddotacao).HasColumnName("IDDotacao");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlEstorno)
                .HasColumnType("money")
                .HasColumnName("vlEstorno");
        });

        modelBuilder.Entity<TbOrcFonte>(entity =>
        {
            entity.HasKey(e => e.IdFonte);

            entity.ToTable("tbOrcFontes");

            entity.HasIndex(e => new { e.CdFonte, e.IdFonte, e.NrAno }, "IX_cdFonte_IdFonte_nrAno").HasFillFactor(90);

            entity.HasIndex(e => new { e.CdFonte, e.NrAno, e.IdEmpresa, e.IdFonte }, "IX_cdFonte_nrAno_IdEmpresa")
                .IsDescending(false, true, false, false)
                .HasFillFactor(90);

            entity.HasIndex(e => new { e.NrAno, e.CdFonte, e.IdFonte }, "IX_nrAno_cdFonte_IdFonte").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.IdFonte }, "IX_tbOrcFontes_IdEmpresa_nrAno_IdFonte");

            entity.HasIndex(e => e.IdFonte, "IX_tbOrcFontes_IdFonte");

            entity.HasIndex(e => new { e.IdFonte, e.DsTipoFonte }, "IX_tbOrcFontes_IdFonte_dsTipoFonte");

            entity.HasIndex(e => new { e.NrAno, e.IdEmpresa }, "IX_tbOrcFontes_nrAno_IdEmpresa");

            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.DsFonte)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsFonte");
            entity.Property(e => e.DsFonteRecurso)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsFonteRecurso");
            entity.Property(e => e.DsTipoFonte)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("dsTipoFonte");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.FlPadraoTce)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPadraoTCE");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlSaldoInicial)
                .HasColumnType("money")
                .HasColumnName("vlSaldoInicial");
        });

        modelBuilder.Entity<TbOrcFunco>(entity =>
        {
            entity.HasKey(e => new { e.NrAno, e.CdFuncao });

            entity.ToTable("tbOrcFuncoes");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.CdFuncao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFuncao");
            entity.Property(e => e.DsFuncao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsFuncao");
        });

        modelBuilder.Entity<TbOrcGruposQuota>(entity =>
        {
            entity.HasKey(e => e.IdGrupo);

            entity.ToTable("tbOrcGruposQuotas");

            entity.Property(e => e.DsGrupo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsGrupo");
            entity.Property(e => e.FlLimitaEmpenho).HasColumnName("flLimitaEmpenho");
            entity.Property(e => e.FlLimitaRms).HasColumnName("flLimitaRms");
            entity.Property(e => e.FlLimitaSolicitacao).HasColumnName("flLimitaSolicitacao");
        });

        modelBuilder.Entity<TbOrcGruposQuotasNatureza>(entity =>
        {
            entity.HasKey(e => new { e.IdGrupo, e.CdNatDespesa });

            entity.ToTable("tbOrcGruposQuotasNaturezas");

            entity.Property(e => e.CdNatDespesa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdNatDespesa");

            entity.HasOne(d => d.IdGrupoNavigation).WithMany(p => p.TbOrcGruposQuotasNaturezas)
                .HasForeignKey(d => d.IdGrupo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcGruposQuotasNaturezas_tbOrcGruposQuotas");
        });

        modelBuilder.Entity<TbOrcLeiCreditoAdicional>(entity =>
        {
            entity.HasKey(e => e.IdLeiCreditoAdicional);

            entity.ToTable("tbOrcLeiCreditoAdicional");

            entity.Property(e => e.IdLeiCreditoAdicional).HasColumnName("idLeiCreditoAdicional");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdTipoCreditoAdicional).HasColumnName("idTipoCreditoAdicional");
            entity.Property(e => e.VlAutorizado)
                .HasColumnType("money")
                .HasColumnName("vlAutorizado");
        });

        modelBuilder.Entity<TbOrcLeisAlteracaoOrcamentarium>(entity =>
        {
            entity.HasKey(e => e.IdLei);

            entity.ToTable("tbOrcLeisAlteracaoOrcamentaria");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMensagem)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsMensagem");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtLei)
                .HasColumnType("datetime")
                .HasColumnName("dtLei");
            entity.Property(e => e.DtPublicacaoLei)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoLei");
            entity.Property(e => e.IdEmpresaExecutor).HasColumnName("idEmpresaExecutor");
            entity.Property(e => e.IdLeiAto).HasColumnName("idLeiAto");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrLei).HasColumnName("nrLei");
            entity.Property(e => e.VlAnulacao)
                .HasColumnType("money")
                .HasColumnName("vlAnulacao");
            entity.Property(e => e.VlCreditoEspecial)
                .HasColumnType("money")
                .HasColumnName("vlCreditoEspecial");
            entity.Property(e => e.VlCreditoExtraordinario)
                .HasColumnType("money")
                .HasColumnName("vlCreditoExtraordinario");
            entity.Property(e => e.VlCreditoSuplementar)
                .HasColumnType("money")
                .HasColumnName("vlCreditoSuplementar");
            entity.Property(e => e.VlExcessoArrecadacao)
                .HasColumnType("money")
                .HasColumnName("vlExcessoArrecadacao");
            entity.Property(e => e.VlExcessoRecVinculado)
                .HasColumnType("money")
                .HasColumnName("vlExcessoRecVinculado");
            entity.Property(e => e.VlOperacoesCredito)
                .HasColumnType("money")
                .HasColumnName("vlOperacoesCredito");
            entity.Property(e => e.VlSuperavitFinanceiro)
                .HasColumnType("money")
                .HasColumnName("vlSuperavitFinanceiro");
            entity.Property(e => e.VlSuperavitRecVinculado)
                .HasColumnType("money")
                .HasColumnName("vlSuperavitRecVinculado");
        });

        modelBuilder.Entity<TbOrcLimitesCreditoAdicional>(entity =>
        {
            entity.HasKey(e => e.IdLimiteCredito);

            entity.ToTable("tbOrcLimitesCreditoAdicional");

            entity.Property(e => e.CdControle).HasColumnName("cdControle");
            entity.Property(e => e.DsDadosAdicionais)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsDadosAdicionais");
            entity.Property(e => e.FlConsideraLimite)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flConsideraLimite");
            entity.Property(e => e.IdTipoCreditoAdicional).HasColumnName("idTipoCreditoAdicional");

            entity.HasOne(d => d.IdArtigoNavigation).WithMany(p => p.TbOrcLimitesCreditoAdicionals)
                .HasForeignKey(d => d.IdArtigo)
                .HasConstraintName("FK_tbOrcLimitesCreditoAdicional_tbOrcArtigosCreditoAdicional");

            entity.HasOne(d => d.IdTipoCreditoAdicionalNavigation).WithMany(p => p.TbOrcLimitesCreditoAdicionals)
                .HasForeignKey(d => d.IdTipoCreditoAdicional)
                .HasConstraintName("FK_tbOrcLimitesCreditoAdicional_tbOrcTipoCreditoAdicional");

            entity.HasOne(d => d.IdTipoExclusaoNavigation).WithMany(p => p.TbOrcLimitesCreditoAdicionals)
                .HasForeignKey(d => d.IdTipoExclusao)
                .HasConstraintName("FK_tbOrcLimitesCreditoAdicional_tbOrcTipoExclusaoCreditoAdicional");
        });

        modelBuilder.Entity<TbOrcMetasArrecadacao>(entity =>
        {
            entity.HasKey(e => e.IdMeta).HasName("PK__tbOrcMet__C26D05DE43EE4F2C");

            entity.ToTable("tbOrcMetasArrecadacao");

            entity.Property(e => e.IdMeta).HasColumnName("idMeta");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.DsObservacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsObservacao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtLancamento)
                .HasColumnType("datetime")
                .HasColumnName("dtLancamento");
            entity.Property(e => e.IdEmpresa).HasColumnName("idEmpresa");
            entity.Property(e => e.IdOperacao).HasColumnName("idOperacao");
            entity.Property(e => e.IdTipo).HasColumnName("idTipo");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlArrecadado)
                .HasColumnType("money")
                .HasColumnName("vlArrecadado");
        });

        modelBuilder.Entity<TbOrcNaturezasDespesa>(entity =>
        {
            entity.HasKey(e => e.IdNatDespesa);

            entity.ToTable("tbOrcNaturezasDespesa");

            entity.HasIndex(e => new { e.IdNatDespesaNivelSuper, e.IdNatDespesa }, "IX_IdNatDespesaNivelSuper").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno }, "IX_IdNatDespesa_cdNatDespesa").HasFillFactor(90);

            entity.HasIndex(e => new { e.CdNatDespesa, e.NrAno, e.IdEmpresa, e.IdNatDespesa }, "IX_cdNatDespesa_nrAno_IdEmpresa_IdNatDespesa")
                .IsDescending(false, true, false, false)
                .HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.IdNatDespesa, e.IdNatDespesaNivelSuper }, "IX_tbOrcNaturezasDespesa_IdEmpresa_nrAno_IdNatDesp_IdNatDespNivSup_inc_cdNatDesp_dsNatDesp");

            entity.HasIndex(e => e.IdNatDespesa, "IX_tbOrcNaturezasDespesa_IdNatDespesa");

            entity.HasIndex(e => new { e.IdNatDespesaNivelSuper, e.IdNatDespesa, e.CdNatDespesa, e.DsNatDespesa, e.DtDesativacao }, "IX_tbOrcNaturezasDespesa_IdNatDespesaNivelSuper_idNatDespesa_cdNatDespesa_dsNatDespesa_dtDesativacao");

            entity.HasIndex(e => new { e.IdNatDespesa, e.CdNatDespesa }, "IX_tbOrcNaturezasDespesa_IdNatDespesa_cdNatDespesa");

            entity.HasIndex(e => new { e.IdNatDespesa, e.CdNatDespesa, e.DsNatDespesa }, "IX_tbOrcNaturezasDespesa_IdNatDespesa_cdNatDespesa_dsNatDespesa");

            entity.HasIndex(e => new { e.NrAno, e.IdNatDespesa, e.IdEmpresa, e.IdNatDespesaNivelSuper, e.DsNatDespesa }, "IX_tbOrcNaturezasDespesa_nrAno_IdNatDespesa_IdEmpresa_IdNatDespesaNivelSuper_dsNatDespesa").HasFillFactor(90);

            entity.Property(e => e.CdNatDespesa)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("cdNatDespesa");
            entity.Property(e => e.DsEspecificacao)
                .IsUnicode(false)
                .HasColumnName("dsEspecificacao");
            entity.Property(e => e.DsNatDespesa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsNatDespesa");
            entity.Property(e => e.DsTipoNatDespesaPadrao)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoNatDespesaPadrao");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.DtDesativacao)
                .HasColumnType("datetime")
                .HasColumnName("dtDesativacao");
            entity.Property(e => e.FlNatDespesaPadrao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flNatDespesaPadrao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");

            entity.HasOne(d => d.IdNatDespesaNivelSuperNavigation).WithMany(p => p.InverseIdNatDespesaNivelSuperNavigation)
                .HasForeignKey(d => d.IdNatDespesaNivelSuper)
                .HasConstraintName("FK_tbOrcNaturezasDespesa_tbOrcNaturezasDespesa");
        });

        modelBuilder.Entity<TbOrcOrgao>(entity =>
        {
            entity.HasKey(e => new { e.Idempresa, e.NrAno, e.CdOrgao });

            entity.ToTable("tbOrcOrgaos");

            entity.HasIndex(e => new { e.CdTipoOrgao, e.CdlOrgaoOriginal }, "IX_cdTipoOrgao_cdlOrgaoOriginal").HasFillFactor(90);

            entity.HasIndex(e => new { e.CdOrgao, e.Idempresa, e.NrAno, e.NmOrgao }, "IX_tbOrcOrgaos_cdOrgao_IDEmpresa_nrAno_nmOrgao");

            entity.HasIndex(e => new { e.NrAno, e.Idempresa, e.CdOrgao, e.CdTipoOrgao }, "IX_tbOrcOrgaos_nrAno_IDEmpresa_cdOrgao_cdTipoOrgao");

            entity.HasIndex(e => new { e.NrAno, e.Idempresa, e.CdOrgao, e.NmOrgao }, "IX_tbOrcOrgaos_nrAno_IDEmpresa_cdOrgao_nmOrgao");

            entity.Property(e => e.Idempresa).HasColumnName("IDEmpresa");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdReferenciaTce)
                .HasMaxLength(10)
                .HasColumnName("cdReferenciaTCE");
            entity.Property(e => e.CdTipoOrgao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdTipoOrgao");
            entity.Property(e => e.CdlOrgaoOriginal)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdlOrgaoOriginal");
            entity.Property(e => e.DsSiglaAcoes)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSiglaAcoes");
            entity.Property(e => e.DsTipoOrgao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoOrgao");
            entity.Property(e => e.DtExtincao)
                .HasColumnType("datetime")
                .HasColumnName("dtExtincao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdempresaExecutora).HasColumnName("IDEmpresaExecutora");
            entity.Property(e => e.NmOrgao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmOrgao");

            entity.HasOne(d => d.IdempresaNavigation).WithMany(p => p.TbOrcOrgaos)
                .HasForeignKey(d => d.Idempresa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcOrgaos_tbGerEmpresaGoverno");
        });

        modelBuilder.Entity<TbOrcPercentualRptDemoRecDsp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbOrcPercentualRptDemoRecDsp");

            entity.Property(e => e.NmRpt)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("nmRPT");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlPercentual).HasColumnName("vlPercentual");
        });

        modelBuilder.Entity<TbOrcPrograma>(entity =>
        {
            entity.HasKey(e => new { e.Idempresa, e.NrAno, e.CdPrograma });

            entity.ToTable("tbOrcProgramas");

            entity.HasIndex(e => new { e.NrAno, e.CdPrograma }, "IX_tbOrcProgramas_nrAno_cdPrograma_inc_dsPrograma");

            entity.Property(e => e.Idempresa).HasColumnName("IDEmpresa");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.CdPrograma)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdPrograma");
            entity.Property(e => e.DsDetalhamento)
                .IsUnicode(false)
                .HasColumnName("dsDetalhamento");
            entity.Property(e => e.DsPrograma)
                .IsUnicode(false)
                .HasColumnName("dsPrograma");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.FlFinalistico).HasColumnName("flFinalistico");
            entity.Property(e => e.IdPlaMovimento).HasColumnName("idPlaMovimento");
            entity.Property(e => e.IdPlaPrograma).HasColumnName("idPlaPrograma");
            entity.Property(e => e.NmPrograma)
                .IsUnicode(false)
                .HasColumnName("nmPrograma");

            entity.HasOne(d => d.IdempresaNavigation).WithMany(p => p.TbOrcProgramas)
                .HasForeignKey(d => d.Idempresa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcProgramas_tbGerEmpresasGoverno");
        });

        modelBuilder.Entity<TbOrcProgramasAco>(entity =>
        {
            entity.HasKey(e => e.IdAcao);

            entity.ToTable("tbOrcProgramasAcoes");

            entity.HasIndex(e => new { e.Idempresa, e.NrAno, e.CdOrgao, e.IdAcao, e.CdUnidade }, "IX_tbOrcProgramasAcoes_IDEmpresa_nrAno_cdOrgao_IdAcao_cdUnidade").HasFillFactor(90);

            entity.HasIndex(e => new { e.Idempresa, e.NrAno, e.CdOrgao, e.CdUnidade, e.IdAcao }, "IX_tbOrcProgramasAcoes_IDEmpresa_nrAno_cdOrgao_cdUnidade_IdAcao");

            entity.HasIndex(e => new { e.IdAcao, e.Idempresa, e.NrAno, e.CdOrgao, e.CdUnidade }, "IX_tbOrcProgramasAcoes_IdAcao_IDEmpresa_nrAno_cdOrgao_cdUnidade");

            entity.HasIndex(e => new { e.IdAcao, e.Idempresa, e.NrAno, e.CdOrgao, e.CdUnidade, e.CdSubFuncao, e.CdFuncao }, "IX_tbOrcProgramasAcoes_IdAcao_IDEmpresa_nrAno_cdOrgao_cdUnidade_cdSubFuncao_cdFuncao");

            entity.HasIndex(e => new { e.IdAcao, e.CdOrgao }, "IX_tbOrcProgramasAcoes_IdAcao_cdOrgao_inc_cdUnidade");

            entity.HasIndex(e => new { e.CdSubFuncao, e.CdUnidade, e.CdFuncao, e.NrAno, e.Idempresa, e.CdOrgao, e.IdAcao }, "IX_tbOrcProgramasAcoes_cdSubFuncao_cdUnidade_cdFuncao_nrAno_IDEmpresa_cdOrgao_IdAcao");

            entity.HasIndex(e => new { e.NrAno, e.Idempresa, e.CdOrgao, e.CdUnidade, e.CdAcao, e.CdFuncao, e.CdSubFuncao, e.IdAcao }, "IX_tbOrcProgramasAcoes_nrAno_IDEmpresa_cdOrgao_cdUnidade_cdAcao_cdFuncao_cdSubFuncao_IdAcao");

            entity.HasIndex(e => new { e.NrAno, e.Idempresa, e.CdOrgao, e.CdUnidade, e.CdAcao, e.CdFuncao, e.CdSubFuncao, e.IdAcao, e.CdPrograma, e.DsAcao }, "IX_tbOrcProgramasAcoes_nrAno_IDEmpresa_cdOrgao_cdUnidade_cdAcao_cdFuncao_cdSubFuncao_IdAcao_cdPrograma_dsAcao");

            entity.HasIndex(e => new { e.NrAno, e.CdFuncao, e.CdUnidade, e.CdOrgao, e.Idempresa, e.CdSubFuncao, e.IdAcao }, "IX_tbOrcProgramasAcoes_nrAno_cdFuncao_cdUnidade_cdOrgao_IDEmpresa_cdSubFuncao_IdAcao");

            entity.Property(e => e.CdAcao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdAcao");
            entity.Property(e => e.CdFuncao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFuncao");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdPrograma)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdPrograma");
            entity.Property(e => e.CdSubFuncao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdSubFuncao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsAcao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsAcao");
            entity.Property(e => e.DsJustifExpansao)
                .IsUnicode(false)
                .HasColumnName("dsJustifExpansao");
            entity.Property(e => e.DsJustifLimite)
                .IsUnicode(false)
                .HasColumnName("dsJustifLimite");
            entity.Property(e => e.DsLoginCancelamento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginCancelamento");
            entity.Property(e => e.DsQdd)
                .IsUnicode(false)
                .HasColumnName("dsQDD");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.DtCancelamento)
                .HasColumnType("datetime")
                .HasColumnName("dtCancelamento");
            entity.Property(e => e.DtLimite)
                .HasColumnType("datetime")
                .HasColumnName("dtLimite");
            entity.Property(e => e.FlPlanejamento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPlanejamento");
            entity.Property(e => e.IdPlaAcao).HasColumnName("idPlaAcao");
            entity.Property(e => e.IdPlaPrograma).HasColumnName("idPlaPrograma");
            entity.Property(e => e.IdPlaProjetoAtividade).HasColumnName("idPlaProjetoAtividade");
            entity.Property(e => e.Idempresa).HasColumnName("IDEmpresa");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMetaExpansao)
                .HasColumnType("decimal(16, 2)")
                .HasColumnName("nrMetaExpansao");
            entity.Property(e => e.NrMetaLimite)
                .HasColumnType("decimal(16, 2)")
                .HasColumnName("nrMetaLimite");
            entity.Property(e => e.NrPrioridade).HasColumnName("nrPrioridade");
            entity.Property(e => e.VlExpansao)
                .HasColumnType("money")
                .HasColumnName("vlExpansao");
            entity.Property(e => e.VlLimite)
                .HasColumnType("money")
                .HasColumnName("vlLimite");

            entity.HasOne(d => d.TbOrcFunco).WithMany(p => p.TbOrcProgramasAcos)
                .HasForeignKey(d => new { d.NrAno, d.CdFuncao })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcProgramasAcoes_tbOrcFuncoes");

            entity.HasOne(d => d.TbOrcSubFunco).WithMany(p => p.TbOrcProgramasAcos)
                .HasForeignKey(d => new { d.NrAno, d.CdSubFuncao })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcProgramasAcoes_tbOrcSubFuncoes");

            entity.HasOne(d => d.TbOrcPrograma).WithMany(p => p.TbOrcProgramasAcos)
                .HasForeignKey(d => new { d.Idempresa, d.NrAno, d.CdPrograma })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcProgramasAcoes_tbOrcProgramas");
        });

        modelBuilder.Entity<TbOrcProgramasAcoesLoa>(entity =>
        {
            entity.HasKey(e => e.IdAcaoLoa);

            entity.ToTable("tbOrcProgramasAcoesLOA");

            entity.Property(e => e.DsParecer)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsParecer");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.DsTipoEmenda)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipoEmenda");
            entity.Property(e => e.DsTipoFisca)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoFisca");
            entity.Property(e => e.DsTipoOrcamento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipoOrcamento");
            entity.Property(e => e.VlEmenda)
                .HasColumnType("money")
                .HasColumnName("vlEmenda");
            entity.Property(e => e.VlExpansao)
                .HasColumnType("money")
                .HasColumnName("vlExpansao");
            entity.Property(e => e.VlLimite)
                .HasColumnType("money")
                .HasColumnName("vlLimite");
        });

        modelBuilder.Entity<TbOrcProgramasAcoesLoaSubAcoesTarefa>(entity =>
        {
            entity.HasKey(e => e.IdRegistro);

            entity.ToTable("tbOrcProgramasAcoesLoaSubAcoesTarefas");

            entity.Property(e => e.VlOrcado)
                .HasColumnType("money")
                .HasColumnName("vlOrcado");

            entity.HasOne(d => d.IdAcaoLoaNavigation).WithMany(p => p.TbOrcProgramasAcoesLoaSubAcoesTarefas)
                .HasForeignKey(d => d.IdAcaoLoa)
                .HasConstraintName("FK_tbOrcProgramasAcoesLoaSubAcoesTarefas_tbOrcProgramasAcoesLOA1");

            entity.HasOne(d => d.IdSubAcaoTarefaNavigation).WithMany(p => p.TbOrcProgramasAcoesLoaSubAcoesTarefas)
                .HasForeignKey(d => d.IdSubAcaoTarefa)
                .HasConstraintName("FK_tbOrcProgramasAcoesLoaSubAcoesTarefas_tbOrcSubAcoesTarefas");
        });

        modelBuilder.Entity<TbOrcQuotasOrcamentaria>(entity =>
        {
            entity.HasKey(e => e.IdQuota);

            entity.ToTable("tbOrcQuotasOrcamentarias");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.FlTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flTipo");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlQuota)
                .HasColumnType("money")
                .HasColumnName("vlQuota");

            entity.HasOne(d => d.IdGrupoNavigation).WithMany(p => p.TbOrcQuotasOrcamentaria)
                .HasForeignKey(d => d.IdGrupo)
                .HasConstraintName("FK_tbOrcQuotasOrcamentarias_tbOrcGruposQuotas");

            entity.HasOne(d => d.IdSolicitacaoNavigation).WithMany(p => p.TbOrcQuotasOrcamentaria)
                .HasForeignKey(d => d.IdSolicitacao)
                .HasConstraintName("FK_tbOrcQuotasOrcamentarias_tbOrcSolicitacoesQuotas");
        });

        modelBuilder.Entity<TbOrcReceita>(entity =>
        {
            entity.HasKey(e => e.IdReceita);

            entity.ToTable("tbOrcReceitas");

            entity.HasIndex(e => new { e.IdEmpresa, e.CdReceita, e.IdReceita }, "IX_IdEmpresa_cdReceita_IdReceita").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdReceitaNivelSuper, e.IdReceita }, "IX_IdReceitaNivelSuper").HasFillFactor(90);

            entity.HasIndex(e => new { e.CdReceita, e.NrAno, e.IdEmpresa, e.IdReceita }, "IX_cdReceita_nrAno_dEmpresa_IdReceita")
                .IsDescending(false, true, false, false)
                .HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.IdReceita, e.CdReceita }, "IX_tbOrcReceitas_IdEmpresa_IdReceita_cdReceita").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.CdReceita }, "IX_tbOrcReceitas_IdEmpresa_nrAno_cdReceita");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.DsTipoReceitaPadrao, e.IdReceita, e.IdReceitaNivelSuper, e.DsReceita }, "IX_tbOrcReceitas_IdEmpresa_nrAno_dsTipoReceitaPadrao_IdReceita_IdReceitaNivelSuper");

            entity.HasIndex(e => new { e.IdReceitaNivelSuper, e.IdReceita, e.CdReceita, e.DsReceita, e.DtDesativacao }, "IX_tbOrcReceitas_IdReceitaNivelSuper_IdReceita_cdReceita_dsReceita_dtDesativacao");

            entity.HasIndex(e => new { e.IdReceita, e.CdReceita }, "IX_tbOrcReceitas_IdReceita_cdReceita").HasFillFactor(90);

            entity.HasIndex(e => new { e.CdReceita, e.IdEmpresa, e.IdReceita }, "IX_tbOrcReceitas_cdReceita_IdEmpresa_IdReceita").HasFillFactor(90);

            entity.Property(e => e.CdReceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.DsEspecificacao)
                .IsUnicode(false)
                .HasColumnName("dsEspecificacao");
            entity.Property(e => e.DsReceita)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsReceita");
            entity.Property(e => e.DsTipoReceitaPadrao)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoReceitaPadrao");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.DtDesativacao)
                .HasColumnType("datetime")
                .HasColumnName("dtDesativacao");
            entity.Property(e => e.FlReceitaIntraOrcamentaria)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flReceitaIntraOrcamentaria");
            entity.Property(e => e.FlReceitaPadrao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flReceitaPadrao");
            entity.Property(e => e.IdTipoEsferaGoverno).HasColumnName("idTipoEsferaGoverno");
            entity.Property(e => e.IdTipoNivelContaNumerico).HasColumnName("idTipoNivelConta_numerico");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.Observacao)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasOne(d => d.IdReceitaNivelSuperNavigation).WithMany(p => p.InverseIdReceitaNivelSuperNavigation)
                .HasForeignKey(d => d.IdReceitaNivelSuper)
                .HasConstraintName("FK_tbOrcReceitas_tbOrcReceitas");
        });

        modelBuilder.Entity<TbOrcReceitasEstornoOrcamento>(entity =>
        {
            entity.HasKey(e => e.IdEstorno);

            entity.ToTable("tbOrcReceitasEstornoOrcamento");

            entity.Property(e => e.IdEstorno).HasColumnName("idEstorno");
            entity.Property(e => e.DtEstorno)
                .HasColumnType("datetime")
                .HasColumnName("dtEstorno");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlOrcado)
                .HasColumnType("money")
                .HasColumnName("vlOrcado");
        });

        modelBuilder.Entity<TbOrcReceitasEstornoOrcamentoFonte>(entity =>
        {
            entity.HasKey(e => new { e.IdEstorno, e.IdFonte });

            entity.ToTable("tbOrcReceitasEstornoOrcamentoFonte");

            entity.Property(e => e.IdEstorno).HasColumnName("idEstorno");
            entity.Property(e => e.VlOrcado)
                .HasColumnType("money")
                .HasColumnName("vlOrcado");
        });

        modelBuilder.Entity<TbOrcReceitasFonte>(entity =>
        {
            entity.HasKey(e => new { e.IdReceita, e.IdFonte });

            entity.ToTable("tbOrcReceitasFontes");

            entity.HasIndex(e => new { e.IdFonte, e.FlUsaOrcamento }, "IX_tbOrcReceitasFontes_IdFonte");

            entity.Property(e => e.CdContaContabilDisponivel)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilDisponivel");
            entity.Property(e => e.FlDesabilitarTransferencia)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flDesabilitarTransferencia");
            entity.Property(e => e.FlUsaOrcamento)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flUsaOrcamento");
            entity.Property(e => e.VlPercentual)
                .HasColumnType("money")
                .HasColumnName("vlPercentual");

            entity.HasOne(d => d.IdFonteNavigation).WithMany(p => p.TbOrcReceitasFontes)
                .HasForeignKey(d => d.IdFonte)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcReceitasFontes_tbOrcFontes");

            entity.HasOne(d => d.IdReceitaNavigation).WithMany(p => p.TbOrcReceitasFontes)
                .HasForeignKey(d => d.IdReceita)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcReceitasFontes_tbOrcReceitas");
        });

        modelBuilder.Entity<TbOrcReceitasFontesDesmembra>(entity =>
        {
            entity.HasKey(e => e.IdReceitaFonteDesmembra);

            entity.ToTable("tbOrcReceitasFontesDesmembra");

            entity.HasIndex(e => new { e.IdFonte, e.FlDesabilitarTransferencia }, "IX_tbOrcReceitasFontesDesmembra_IdFonte_flDesabilitarTransferencia");

            entity.HasIndex(e => new { e.IdReceitaFonte, e.IdFonte, e.FlDesabilitarTransferencia }, "IX_tbOrcReceitasFontesDesmembra_IdReceitaFonte_IdFonte_flDesabilitarTransferencia");

            entity.HasIndex(e => e.IdReceitaFonte, "IX_tbOrcReceitasFontesDesmembra_IdReceitaFonte_inc_IdFonte");

            entity.HasIndex(e => e.IdReceitaFonte, "IX_tbOrcReceitasFontesDesmembra_IdReceitaFonte_inc_IdFonte_vlPercentual");

            entity.Property(e => e.CdContaContabilDisponivel)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilDisponivel");
            entity.Property(e => e.FlDesabilitarTransferencia)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flDesabilitarTransferencia");
            entity.Property(e => e.FlUsaOrcamento)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flUsaOrcamento");
            entity.Property(e => e.VlPercentual)
                .HasColumnType("money")
                .HasColumnName("vlPercentual");

            entity.HasOne(d => d.IdReceitaFonteNavigation).WithMany(p => p.TbOrcReceitasFontesDesmembras)
                .HasForeignKey(d => d.IdReceitaFonte)
                .HasConstraintName("FK_tbOrcReceitasFontesDesmembra_tbOrcReceitasFontesOperacao");
        });

        modelBuilder.Entity<TbOrcReceitasFontesOperacao>(entity =>
        {
            entity.HasKey(e => e.IdReceitaFonte);

            entity.ToTable("tbOrcReceitasFontesOperacao");

            entity.HasOne(d => d.IdReceitaNavigation).WithMany(p => p.TbOrcReceitasFontesOperacaos)
                .HasForeignKey(d => d.IdReceita)
                .HasConstraintName("FK_tbOrcReceitasFontesOperacao2_tbOrcReceitas");
        });

        modelBuilder.Entity<TbOrcReceitasOrcamentoAnual>(entity =>
        {
            entity.HasKey(e => e.IdReceitaOrcamentoAnual);

            entity.ToTable("tbOrcReceitasOrcamentoAnual");

            entity.HasIndex(e => new { e.IdTipoOperacaoReceita, e.IdReceita, e.CdOrgao, e.CdUnidade }, "IX_tbOrcReceitasOrcamentoAnual_IdTipoOperacaoReceita_IdReceita_cdOrgao_cdUnidade");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipo");
            entity.Property(e => e.VlOrcado)
                .HasColumnType("money")
                .HasColumnName("vlOrcado");

            entity.HasOne(d => d.IdReceitaNavigation).WithMany(p => p.TbOrcReceitasOrcamentoAnuals)
                .HasForeignKey(d => d.IdReceita)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcReceitasOrcamentoAnual_tbOrcReceitas");
        });

        modelBuilder.Entity<TbOrcReceitasOrcamentoAnualFonte>(entity =>
        {
            entity.HasKey(e => new { e.IdReceitaOrcamentoAnual, e.IdFonte });

            entity.ToTable("tbOrcReceitasOrcamentoAnualFontes");

            entity.Property(e => e.VlOrcado)
                .HasColumnType("money")
                .HasColumnName("vlOrcado");
        });

        modelBuilder.Entity<TbOrcReceitasReestimada>(entity =>
        {
            entity.HasKey(e => e.IdReestimativa);

            entity.ToTable("tbOrcReceitasReestimadas");

            entity.HasIndex(e => e.IdReceita, "IX_IdReceita").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdTipoAtualizacaoOrcamentaria, e.IdReceita, e.DtLancamento }, "IX_tbOrcReceitasReestimadas_idTipoAtualizacaoOrcamentaria_IdReceita_dtLancamento");

            entity.HasIndex(e => new { e.IdTipoAtualizacaoOrcamentaria, e.IdTipoOperacaoReceita, e.IdReceita, e.DtLancamento, e.CdOrgao, e.CdUnidade, e.IdReestimativa }, "IX_tbOrcReceitasReestimadas_idTipoAtualizacaoOrcamentaria_IdTipoOperacaoReceita_IdReceita_dtLancamento_IdReestimativa");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObservacoes)
                .IsUnicode(false)
                .HasColumnName("dsObservacoes");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtLancamento)
                .HasColumnType("datetime")
                .HasColumnName("dtLancamento");
            entity.Property(e => e.IdTipoAtualizacaoOrcamentaria).HasColumnName("idTipoAtualizacaoOrcamentaria");
            entity.Property(e => e.VlReestimado)
                .HasColumnType("money")
                .HasColumnName("vlReestimado");

            entity.HasOne(d => d.IdReceitaNavigation).WithMany(p => p.TbOrcReceitasReestimada)
                .HasForeignKey(d => d.IdReceita)
                .HasConstraintName("FK_tbOrcReceitasReestimadas_tbOrcReceitas");

            entity.HasOne(d => d.IdTipoAtualizacaoOrcamentariaNavigation).WithMany(p => p.TbOrcReceitasReestimada)
                .HasForeignKey(d => d.IdTipoAtualizacaoOrcamentaria)
                .HasConstraintName("FK_tbOrcReceitasReestimadas_tbOrcTipoAtualizacaoOrcamentaria");
        });

        modelBuilder.Entity<TbOrcReceitasReestimadasFonte>(entity =>
        {
            entity.HasKey(e => new { e.IdReestimativa, e.IdFonte });

            entity.ToTable("tbOrcReceitasReestimadasFontes");

            entity.Property(e => e.VlReestimado)
                .HasColumnType("money")
                .HasColumnName("vlReestimado");
        });

        modelBuilder.Entity<TbOrcSolicitacoesQuota>(entity =>
        {
            entity.HasKey(e => e.IdSolicitacao);

            entity.ToTable("tbOrcSolicitacoesQuotas");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginParecer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginParecer");
            entity.Property(e => e.DsParecer)
                .IsUnicode(false)
                .HasColumnName("dsParecer");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtParecer)
                .HasColumnType("datetime")
                .HasColumnName("dtParecer");
            entity.Property(e => e.DtSolicitacao)
                .HasColumnType("datetime")
                .HasColumnName("dtSolicitacao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlSolicitado)
                .HasColumnType("money")
                .HasColumnName("vlSolicitado");
        });

        modelBuilder.Entity<TbOrcSolicitacoesSaldoDotacao>(entity =>
        {
            entity.HasKey(e => e.IdSolicitacao);

            entity.ToTable("tbOrcSolicitacoesSaldoDotacao");

            entity.Property(e => e.DsJustificativa)
                .IsUnicode(false)
                .HasColumnName("dsJustificativa");
            entity.Property(e => e.DsLoginAnalise)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginAnalise");
            entity.Property(e => e.DsLoginSolicitacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginSolicitacao");
            entity.Property(e => e.DsParecer)
                .IsUnicode(false)
                .HasColumnName("dsParecer");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.DtAnalise)
                .HasColumnType("datetime")
                .HasColumnName("dtAnalise");
            entity.Property(e => e.DtSolicitacao)
                .HasColumnType("datetime")
                .HasColumnName("dtSolicitacao");
            entity.Property(e => e.VlSolicitado)
                .HasColumnType("money")
                .HasColumnName("vlSolicitado");

            entity.HasOne(d => d.IdDotacaoNavigation).WithMany(p => p.TbOrcSolicitacoesSaldoDotacaos)
                .HasForeignKey(d => d.IdDotacao)
                .HasConstraintName("FK_tbOrcSolicitacoesSaldoDotacao_tbOrcDotacoes");

            entity.HasOne(d => d.IdNatDespesaNavigation).WithMany(p => p.TbOrcSolicitacoesSaldoDotacaos)
                .HasForeignKey(d => d.IdNatDespesa)
                .HasConstraintName("FK_tbOrcSolicitacoesSaldoDotacao_tbOrcNaturezasDespesa");
        });

        modelBuilder.Entity<TbOrcSolicitacoesSuplementacao>(entity =>
        {
            entity.HasKey(e => e.IdSolicitacao);

            entity.ToTable("tbOrcSolicitacoesSuplementacao");

            entity.Property(e => e.DsAlteracao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsAlteracao");
            entity.Property(e => e.DsJustificativa)
                .IsUnicode(false)
                .HasColumnName("dsJustificativa");
            entity.Property(e => e.DsLoginAlteracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginAlteracao");
            entity.Property(e => e.DsLoginAnalise)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginAnalise");
            entity.Property(e => e.DsLoginSolicitacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginSolicitacao");
            entity.Property(e => e.DsParecer)
                .IsUnicode(false)
                .HasColumnName("dsParecer");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.DtAnalise)
                .HasColumnType("datetime")
                .HasColumnName("dtAnalise");
            entity.Property(e => e.DtSolicitacao)
                .HasColumnType("datetime")
                .HasColumnName("dtSolicitacao");
            entity.Property(e => e.Tpsolicitacao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpsolicitacao");
            entity.Property(e => e.VlSolicitado)
                .HasColumnType("money")
                .HasColumnName("vlSolicitado");
        });

        modelBuilder.Entity<TbOrcSolicitacoesSuplementacaoDotaco>(entity =>
        {
            entity.HasKey(e => e.IdSolicitacaoDotacao);

            entity.ToTable("tbOrcSolicitacoesSuplementacaoDotacoes");

            entity.Property(e => e.DsTipo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.VlAlteracao)
                .HasColumnType("money")
                .HasColumnName("vlAlteracao");

            entity.HasOne(d => d.IdDotacaoNavigation).WithMany(p => p.TbOrcSolicitacoesSuplementacaoDotacos)
                .HasForeignKey(d => d.IdDotacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcSolicitacoesSuplementacaoDotacoes_tbOrcDotacoes");

            entity.HasOne(d => d.IdSolicitacaoNavigation).WithMany(p => p.TbOrcSolicitacoesSuplementacaoDotacos)
                .HasForeignKey(d => d.IdSolicitacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcSolicitacoesSuplementacaoDotacoes_tbOrcSolicitacoesAlteracaoDotacao");
        });

        modelBuilder.Entity<TbOrcSubAcaoDistrito>(entity =>
        {
            entity.HasKey(e => e.IdDistrito);

            entity.ToTable("tbOrcSubAcaoDistritos");

            entity.Property(e => e.DsDistrito)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsDistrito");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
        });

        modelBuilder.Entity<TbOrcSubAcoesMeta>(entity =>
        {
            entity.HasKey(e => e.IdSubAcaoMeta).HasName("PK_tbOrcSubAcoesMetas_1");

            entity.ToTable("tbOrcSubAcoesMetas");

            entity.Property(e => e.DsJustificativa)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsJustificativa");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsTipoMeta)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoMeta");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlPeriodo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPeriodo");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrPeriodo).HasColumnName("nrPeriodo");
            entity.Property(e => e.VlOrcado)
                .HasColumnType("money")
                .HasColumnName("vlOrcado");
            entity.Property(e => e.VlRealizado)
                .HasColumnType("money")
                .HasColumnName("vlRealizado");

            entity.HasOne(d => d.IdSubAcaoNavigation).WithMany(p => p.TbOrcSubAcoesMeta)
                .HasForeignKey(d => d.IdSubAcao)
                .HasConstraintName("FK_tbOrcSubAcoesMetas_tbOrcSubAcoesTarefas");
        });

        modelBuilder.Entity<TbOrcSubAcoesTarefa>(entity =>
        {
            entity.HasKey(e => e.IdSubAcaoTarefa);

            entity.ToTable("tbOrcSubAcoesTarefas");

            entity.Property(e => e.CdPrioridade)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdPrioridade");
            entity.Property(e => e.CdSubAcaoTarefa)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdSubAcaoTarefa");
            entity.Property(e => e.DsDenominacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsDenominacao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginCancelamento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginCancelamento");
            entity.Property(e => e.DsProduto)
                .IsUnicode(false)
                .HasColumnName("dsProduto");
            entity.Property(e => e.DsResultado)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsResultado");
            entity.Property(e => e.DsSubAcaoTarefa)
                .IsUnicode(false)
                .HasColumnName("dsSubAcaoTarefa");
            entity.Property(e => e.DtCancelamento)
                .HasColumnType("datetime")
                .HasColumnName("dtCancelamento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrLatitude)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrLatitude");
            entity.Property(e => e.NrLongitude)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrLongitude");

            entity.HasOne(d => d.IdAcaoNavigation).WithMany(p => p.TbOrcSubAcoesTarefas)
                .HasForeignKey(d => d.IdAcao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcSubAcoesTarefas_tbOrcProgramasAcoes");
        });

        modelBuilder.Entity<TbOrcSubFunco>(entity =>
        {
            entity.HasKey(e => new { e.NrAno, e.CdSubFuncao });

            entity.ToTable("tbOrcSubFuncoes");

            entity.HasIndex(e => e.NrAno, "IX_tbOrcSubFuncoes_nrAno");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.CdSubFuncao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdSubFuncao");
            entity.Property(e => e.DsSubFuncao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsSubFuncao");
        });

        modelBuilder.Entity<TbOrcTipoAtualizacaoOrcamentarium>(entity =>
        {
            entity.HasKey(e => e.IdTipoAtualizacaoOrcamentaria);

            entity.ToTable("tbOrcTipoAtualizacaoOrcamentaria");

            entity.Property(e => e.IdTipoAtualizacaoOrcamentaria)
                .ValueGeneratedNever()
                .HasColumnName("idTipoAtualizacaoOrcamentaria");
            entity.Property(e => e.DsTipoAtualizacaoOrcamentaria)
                .HasMaxLength(75)
                .IsUnicode(false)
                .HasColumnName("dsTipoAtualizacaoOrcamentaria");
            entity.Property(e => e.TpGrupo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpGrupo");
        });

        modelBuilder.Entity<TbOrcTipoCreditoAdicional>(entity =>
        {
            entity.HasKey(e => e.IdTipoCreditoAdicional);

            entity.ToTable("tbOrcTipoCreditoAdicional");

            entity.Property(e => e.IdTipoCreditoAdicional)
                .ValueGeneratedNever()
                .HasColumnName("idTipoCreditoAdicional");
            entity.Property(e => e.DsTipoCreditoAdicional)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoCreditoAdicional");
        });

        modelBuilder.Entity<TbOrcTipoCreditoAdicionalEscopo>(entity =>
        {
            entity.HasKey(e => new { e.CdEscopo, e.IdTipoCreditoAdicional });

            entity.ToTable("tbOrcTipoCreditoAdicionalEscopos");

            entity.Property(e => e.CdEscopo).HasColumnName("cdEscopo");
            entity.Property(e => e.IdTipoCreditoAdicional).HasColumnName("idTipoCreditoAdicional");
        });

        modelBuilder.Entity<TbOrcTipoCreditoInicial>(entity =>
        {
            entity.HasKey(e => e.IdTipoCreditoInicial);

            entity.ToTable("tbOrcTipoCreditoInicial");

            entity.Property(e => e.IdTipoCreditoInicial)
                .ValueGeneratedNever()
                .HasColumnName("idTipoCreditoInicial");
            entity.Property(e => e.DsTipoCreditoInicial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTipoCreditoInicial");
        });

        modelBuilder.Entity<TbOrcTiposAco>(entity =>
        {
            entity.HasKey(e => e.IdTipoAcao);

            entity.ToTable("tbOrcTiposAcoes");

            entity.Property(e => e.DsTipoAcao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTipoAcao");
            entity.Property(e => e.FlVinculaNatureza).HasColumnName("flVinculaNatureza");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrNivel).HasColumnName("nrNivel");
        });

        modelBuilder.Entity<TbOrcTiposAlteracaoOrcamentarium>(entity =>
        {
            entity.HasKey(e => e.IdTipoAlteracao);

            entity.ToTable("tbOrcTiposAlteracaoOrcamentaria");

            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSigla");
            entity.Property(e => e.FlAtivo).HasColumnName("flAtivo");
            entity.Property(e => e.NmTipoAlteracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmTipoAlteracao");
        });

        modelBuilder.Entity<TbOrcTiposAtoAlteracao>(entity =>
        {
            entity.HasKey(e => e.IdTipoAtoAlteracao);

            entity.ToTable("tbOrcTiposAtoAlteracao");

            entity.Property(e => e.CdParamTc)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdParamTC");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSigla");
            entity.Property(e => e.DsTipoEmpresas)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTipoEmpresas");
            entity.Property(e => e.FlAtivo).HasColumnName("flAtivo");
            entity.Property(e => e.NmTipoAtoAlteracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmTipoAtoAlteracao");
        });

        modelBuilder.Entity<TbOrcTiposBasesCalculosCredito>(entity =>
        {
            entity.HasKey(e => e.IdBase);

            entity.ToTable("tbOrcTiposBasesCalculosCredito");

            entity.Property(e => e.IdBase)
                .ValueGeneratedNever()
                .HasColumnName("idBase");
            entity.Property(e => e.DsBase)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsBase");
        });

        modelBuilder.Entity<TbOrcTiposCalculosCredito>(entity =>
        {
            entity.HasKey(e => e.IdTipoCalculo);

            entity.ToTable("tbOrcTiposCalculosCredito");

            entity.Property(e => e.IdTipoCalculo)
                .ValueGeneratedNever()
                .HasColumnName("idTipoCalculo");
            entity.Property(e => e.DsTipoCalculo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoCalculo");
        });

        modelBuilder.Entity<TbOrcTiposExclusaoCreditoAdicional>(entity =>
        {
            entity.HasKey(e => e.IdTipoExclusao);

            entity.ToTable("tbOrcTiposExclusaoCreditoAdicional");

            entity.Property(e => e.DsTipoExclusao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTipoExclusao");
        });

        modelBuilder.Entity<TbOrcTiposOperacaoCreditoAdicional>(entity =>
        {
            entity.HasKey(e => e.IdTipoOperacaoCreditoAdicional);

            entity.ToTable("tbOrcTiposOperacaoCreditoAdicional");

            entity.Property(e => e.IdTipoOperacaoCreditoAdicional)
                .ValueGeneratedNever()
                .HasColumnName("idTipoOperacaoCreditoAdicional");
            entity.Property(e => e.DsTipoOperacaoCreditoAdicional)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoOperacaoCreditoAdicional");
        });

        modelBuilder.Entity<TbOrcTiposOperacoesLoa>(entity =>
        {
            entity.HasKey(e => e.IdOperacaoLoa);

            entity.ToTable("tbOrcTiposOperacoesLOA");

            entity.Property(e => e.IdOperacaoLoa)
                .ValueGeneratedNever()
                .HasColumnName("idOperacaoLOA");
            entity.Property(e => e.DsOperacao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsOperacao");
        });

        modelBuilder.Entity<TbOrcTiposOperacoesReceitum>(entity =>
        {
            entity.HasKey(e => e.IdTipoOperacaoReceita);

            entity.ToTable("tbOrcTiposOperacoesReceita");

            entity.Property(e => e.IdTipoOperacaoReceita).ValueGeneratedNever();
            entity.Property(e => e.DsTipoOperacaoReceita)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTipoOperacaoReceita");
        });

        modelBuilder.Entity<TbOrcTiposRecurso>(entity =>
        {
            entity.HasKey(e => e.IdTipoRecurso);

            entity.ToTable("tbOrcTiposRecursos");

            entity.Property(e => e.CdTc).HasColumnName("cdTc");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSigla");
            entity.Property(e => e.FlAtivo).HasColumnName("flAtivo");
            entity.Property(e => e.NmTipoRecurso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmTipoRecurso");
        });

        modelBuilder.Entity<TbOrcUnidade>(entity =>
        {
            entity.HasKey(e => new { e.Idempresa, e.NrAno, e.CdOrgao, e.CdUnidade });

            entity.ToTable("tbOrcUnidades");

            entity.HasIndex(e => e.IdEmpresaExecutora, "IX_IdEmpresaExecutora").HasFillFactor(90);

            entity.HasIndex(e => new { e.Idempresa, e.CdOrgao, e.CdUnidade, e.NrAno, e.NmUnidade }, "IX_tbOrcUnidades_IDEmpresa_cdOrgao_cdUnidade_nrAno_nmUnidade");

            entity.HasIndex(e => new { e.Idempresa, e.NrAno }, "IX_tbOrcUnidades_IDEmpresa_nrAno");

            entity.HasIndex(e => new { e.CdOrgao, e.CdUnidade, e.IdEmpresaExecutora }, "IX_tbOrcUnidades_cdOrgao_cdUnidade_IdEmpresaExecutora");

            entity.HasIndex(e => new { e.NrAno, e.Idempresa, e.CdOrgao, e.CdUnidade, e.IdEmpresaExecutora }, "IX_tbOrcUnidades_nrAno_IDEmpresa_cdOrgao_cdUnidade_IdEmpresaExecutora");

            entity.HasIndex(e => new { e.NrAno, e.Idempresa, e.CdOrgao, e.CdUnidade, e.NmUnidade }, "IX_tbOrcUnidades_nrAno_IDEmpresa_cdUnidade_nmUnidade");

            entity.Property(e => e.Idempresa).HasColumnName("IDEmpresa");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsEmailNotificacao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsEmailNotificacao");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
            entity.Property(e => e.DsTitulosNotasDespesa)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTitulosNotasDespesa");
            entity.Property(e => e.DtExtincao)
                .HasColumnType("datetime")
                .HasColumnName("dtExtincao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtInicioVigenciaCnpj)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioVigenciaCNPJ");
            entity.Property(e => e.FlIntraOrcamentaria)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flIntraOrcamentaria");
            entity.Property(e => e.NmUnidade)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmUnidade");

            entity.HasOne(d => d.TbOrcOrgao).WithMany(p => p.TbOrcUnidades)
                .HasForeignKey(d => new { d.Idempresa, d.NrAno, d.CdOrgao })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbOrcUnidades_tbOrcOrgao");
        });

        modelBuilder.Entity<TbOrcUsuariosOrgaosUnidade>(entity =>
        {
            entity.HasKey(e => e.IdPermissao);

            entity.ToTable("tbOrcUsuariosOrgaosUnidades");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.CdOrgao, e.CdUnidade, e.DsLogin, e.IdPermissao }, "IX_tbOrcUsuariosOrgaosUnidades_IdEmpresa_nrAno_cdOrgao_cdUnidade_dsLogin_IdPermissao");

            entity.HasIndex(e => new { e.CdOrgao, e.NrAno, e.IdEmpresa, e.DsLogin }, "IX_tbOrcUsuariosOrgaosUnidades_cdOrgao_nrAno_IdEmpresa_dsLogin").HasFillFactor(90);

            entity.HasIndex(e => e.DsLogin, "IX_tbOrcUsuariosOrgaosUnidades_dsLogin");

            entity.HasIndex(e => new { e.DsLogin, e.CdOrgao, e.CdUnidade }, "IX_tbOrcUsuariosOrgaosUnidades_dsLogin_cdOrgao_cdUnidade");

            entity.HasIndex(e => new { e.DsLogin, e.NrAno, e.IdEmpresa }, "IX_tbOrcUsuariosOrgaosUnidades_dsLogin_nrAno_IdEmpresa_inc_cdOrgao_cdUnidade");

            entity.HasIndex(e => new { e.DsLogin, e.NrAno, e.FlPadrao }, "IX_tbOrcUsuariosOrgaosUnidades_dsLogin_nrAno_flPadrao_inc");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.FlAcessoRms).HasColumnName("flAcessoRms");
            entity.Property(e => e.FlPadrao).HasColumnName("flPadrao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<TbParAssinaturasDocumento>(entity =>
        {
            entity.HasKey(e => e.IdAssinaturaDocto);

            entity.ToTable("tbParAssinaturasDocumentos");

            entity.Property(e => e.DsCargo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsCargo");
            entity.Property(e => e.DsDocumento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsDocumento");
            entity.Property(e => e.DsListaOrgaosAssinaturas)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsListaOrgaosAssinaturas");
            entity.Property(e => e.DtFimVigencia)
                .HasColumnType("datetime")
                .HasColumnName("dtFimVigencia");
            entity.Property(e => e.DtInicioVigencia)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioVigencia");
            entity.Property(e => e.ImAssinatura)
                .HasColumnType("image")
                .HasColumnName("imAssinatura");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");

            entity.HasOne(d => d.IdServidorNavigation).WithMany(p => p.TbParAssinaturasDocumentos)
                .HasForeignKey(d => d.IdServidor)
                .HasConstraintName("FK_tbParAssinaturasDocumentos_tbGerServidores");
        });

        modelBuilder.Entity<TbParCargosServidoresAssinatura>(entity =>
        {
            entity.HasKey(e => new { e.IdCargoServidor, e.DsDocumento });

            entity.ToTable("tbParCargosServidoresAssinaturas");

            entity.Property(e => e.DsDocumento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsDocumento");
            entity.Property(e => e.DsCargo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsCargo");
            entity.Property(e => e.FlAssinaDocumento).HasColumnName("flAssinaDocumento");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");

            entity.HasOne(d => d.IdCargoServidorNavigation).WithMany(p => p.TbParCargosServidoresAssinaturas)
                .HasForeignKey(d => d.IdCargoServidor)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbParCargosServidoresAssinaturas_tbGerCargosServidores");
        });

        modelBuilder.Entity<TbParControlesImpressao>(entity =>
        {
            entity.HasKey(e => e.IdControleImpressao);

            entity.ToTable("tbParControlesImpressao");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtImpressao)
                .HasColumnType("datetime")
                .HasColumnName("dtImpressao");
            entity.Property(e => e.NmObjeto)
                .HasMaxLength(50)
                .HasColumnName("nmObjeto");
        });

        modelBuilder.Entity<TbParIntegracaoParametro>(entity =>
        {
            entity.HasKey(e => e.IdIntegracaoParam);

            entity.ToTable("tbParIntegracaoParametros");

            entity.HasIndex(e => new { e.NmParametro, e.IdTipoIntegracao }, "IX_nmParametro_IdTipoIntegracao").HasFillFactor(90);

            entity.HasIndex(e => e.IdTipoIntegracao, "IX_tbParIntegracaoParametros_IdTipoIntegracao_inc");

            entity.Property(e => e.CdHistorico)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdHistorico");
            entity.Property(e => e.DsParametro)
                .HasMaxLength(120)
                .IsUnicode(false)
                .HasColumnName("dsParametro");
            entity.Property(e => e.NmParametro)
                .HasMaxLength(120)
                .IsUnicode(false)
                .HasColumnName("nmParametro");
            entity.Property(e => e.NmVariavel)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("nmVariavel");
            entity.Property(e => e.NrSequenciaChecagem).HasColumnName("nrSequenciaChecagem");
            entity.Property(e => e.VlParametro)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("vlParametro");
            entity.Property(e => e.VlVariavel)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("vlVariavel");

            entity.HasOne(d => d.IdTipoIntegracaoNavigation).WithMany(p => p.TbParIntegracaoParametros)
                .HasForeignKey(d => d.IdTipoIntegracao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbParIntegracaoParametros_tbParTiposIntegracao");
        });

        modelBuilder.Entity<TbParIntegracoesContabei>(entity =>
        {
            entity.HasKey(e => new { e.IdTipoIntegracao, e.NrSequencia });

            entity.ToTable("tbParIntegracoesContabeis");

            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.CdEvento)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("cdEvento");
            entity.Property(e => e.CdHistorico)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("cdHistorico");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsFormulaContabilCredito)
                .HasMaxLength(140)
                .IsUnicode(false)
                .HasColumnName("dsFormulaContabilCredito");
            entity.Property(e => e.DsFormulaContabilDebito)
                .HasMaxLength(140)
                .IsUnicode(false)
                .HasColumnName("dsFormulaContabilDebito");
            entity.Property(e => e.DsFormulaSequencia)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("dsFormulaSequencia");
            entity.Property(e => e.DsIntegracao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsIntegracao");
            entity.Property(e => e.VlPercentual)
                .HasColumnType("money")
                .HasColumnName("vlPercentual");

            entity.HasOne(d => d.IdTipoIntegracaoNavigation).WithMany(p => p.TbParIntegracoesContabeis)
                .HasForeignKey(d => d.IdTipoIntegracao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbParIntegracoesContabeis_tbParTiposIntegracao");
        });

        modelBuilder.Entity<TbParNumeracaoObjeto>(entity =>
        {
            entity.HasKey(e => e.IdNumeracao);

            entity.ToTable("tbParNumeracaoObjetos");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.NmObjeto)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("nmObjeto");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrObjeto).HasColumnName("nrObjeto");
        });

        modelBuilder.Entity<TbParTiposIntegracao>(entity =>
        {
            entity.HasKey(e => e.IdTipoIntegracao);

            entity.ToTable("tbParTiposIntegracao");

            entity.Property(e => e.DsSigla)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
            entity.Property(e => e.DtAtivacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAtivacao");
            entity.Property(e => e.DtInativacao)
                .HasColumnType("datetime")
                .HasColumnName("dtInativacao");
            entity.Property(e => e.NmTipoIntegracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmTipoIntegracao");
        });

        modelBuilder.Entity<TbPcmAgentesPolitico>(entity =>
        {
            entity.HasKey(e => e.IdAgente);

            entity.ToTable("tbPcmAgentesPoliticos");

            entity.Property(e => e.IdAgente).HasColumnName("idAgente");
            entity.Property(e => e.CdCargao)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("cdCargao");
            entity.Property(e => e.CdpfAgente)
                .HasMaxLength(11)
                .IsUnicode(false)
                .HasColumnName("cdpfAgente");
            entity.Property(e => e.DsNotaExplicativa)
                .IsUnicode(false)
                .HasColumnName("dsNotaExplicativa");
            entity.Property(e => e.NmAgente)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmAgente");
        });

        modelBuilder.Entity<TbPcmAtosAgentesPolitico>(entity =>
        {
            entity.HasKey(e => e.IdAto).HasName("PK_tbLdoAtosAgentesPoliticos");

            entity.ToTable("tbPcmAtosAgentesPoliticos");

            entity.Property(e => e.DsArquivoAnexo)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsArquivoAnexo");
            entity.Property(e => e.DsVeiculoPublic)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsVeiculoPublic");
            entity.Property(e => e.DtAto)
                .HasColumnType("datetime")
                .HasColumnName("dtAto");
            entity.Property(e => e.DtPublicacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacao");
            entity.Property(e => e.NrAto)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrAto");
            entity.Property(e => e.TpAto)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpAto");
        });

        modelBuilder.Entity<TbPcmHistoricoAtosAgentesPolitico>(entity =>
        {
            entity.HasKey(e => e.IdAto).HasName("PK_tbLdoHistoricoAtosAgentesPoliticos");

            entity.ToTable("tbPcmHistoricoAtosAgentesPoliticos");

            entity.Property(e => e.IdAto)
                .ValueGeneratedNever()
                .HasColumnName("idAto");
            entity.Property(e => e.CdCargo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("cdCargo");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.TpEspecieAto).HasColumnName("tpEspecieAto");
            entity.Property(e => e.VlAto)
                .HasColumnType("money")
                .HasColumnName("vlAto");
            entity.Property(e => e.VlPercReajuste)
                .HasColumnType("money")
                .HasColumnName("vlPercReajuste");

            entity.HasOne(d => d.IdAtoNavigation).WithOne(p => p.TbPcmHistoricoAtosAgentesPolitico)
                .HasForeignKey<TbPcmHistoricoAtosAgentesPolitico>(d => d.IdAto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbLdoHistoricoAtosAgentesPoliticos_tbLdoAtosAgentesPoliticos");
        });

        modelBuilder.Entity<TbPcmRemuneracaoAgentesPolitico>(entity =>
        {
            entity.HasKey(e => e.IdAgente).HasName("PK_tbLdoRemuneracaoAgentesPoliticos");

            entity.ToTable("tbPcmRemuneracaoAgentesPoliticos");

            entity.Property(e => e.IdAgente)
                .ValueGeneratedNever()
                .HasColumnName("idAgente");
            entity.Property(e => e.DtPagamento)
                .HasColumnType("datetime")
                .HasColumnName("dtPagamento");
            entity.Property(e => e.FlPago)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPago");
            entity.Property(e => e.NrDependentes).HasColumnName("nrDependentes");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlAdicionais)
                .HasColumnType("money")
                .HasColumnName("vlAdicionais");
            entity.Property(e => e.VlDecimoTerceiro)
                .HasColumnType("money")
                .HasColumnName("vlDecimoTerceiro");
            entity.Property(e => e.VlExtraordinaria)
                .HasColumnType("money")
                .HasColumnName("vlExtraordinaria");
            entity.Property(e => e.VlImpostoRenda)
                .HasColumnType("money")
                .HasColumnName("vlImpostoRenda");
            entity.Property(e => e.VlPrevidencia)
                .HasColumnType("money")
                .HasColumnName("vlPrevidencia");
            entity.Property(e => e.VlPrevidenciaParticular)
                .HasColumnType("money")
                .HasColumnName("vlPrevidenciaParticular");
            entity.Property(e => e.VlSubsidio)
                .HasColumnType("money")
                .HasColumnName("vlSubsidio");

            entity.HasOne(d => d.IdAgenteNavigation).WithOne(p => p.TbPcmRemuneracaoAgentesPolitico)
                .HasForeignKey<TbPcmRemuneracaoAgentesPolitico>(d => d.IdAgente)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPcmRemuneracaoAgentesPoliticos_tbPcmAgentesPoliticos");
        });

        modelBuilder.Entity<TbPcmValoresDevidosPrevidencium>(entity =>
        {
            entity.HasKey(e => e.IdRegime);

            entity.ToTable("tbPcmValoresDevidosPrevidencia");

            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.NrAnoCompetencia).HasColumnName("nrAnoCompetencia");
            entity.Property(e => e.NrMesCompetencia).HasColumnName("nrMesCompetencia");
            entity.Property(e => e.TpRegime)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpRegime");
            entity.Property(e => e.VlBaseCalculo)
                .HasColumnType("money")
                .HasColumnName("vlBaseCalculo");
            entity.Property(e => e.VlDesconto)
                .HasColumnType("money")
                .HasColumnName("vlDesconto");
            entity.Property(e => e.VlDevidoEmpregador)
                .HasColumnType("money")
                .HasColumnName("vlDevidoEmpregador");
        });

        modelBuilder.Entity<TbPcmValoresRecolhidosPrevidencium>(entity =>
        {
            entity.HasKey(e => e.IdRegime);

            entity.ToTable("tbPcmValoresRecolhidosPrevidencia");

            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.DtRecolhimento)
                .HasColumnType("datetime")
                .HasColumnName("dtRecolhimento");
            entity.Property(e => e.DtVencimento)
                .HasColumnType("datetime")
                .HasColumnName("dtVencimento");
            entity.Property(e => e.NrAnoCompetencia).HasColumnName("nrAnoCompetencia");
            entity.Property(e => e.NrMesCompetencia).HasColumnName("nrMesCompetencia");
            entity.Property(e => e.TpRegime)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpRegime");
            entity.Property(e => e.VlAtualizacaoMonetaria)
                .HasColumnType("money")
                .HasColumnName("vlAtualizacaoMonetaria");
            entity.Property(e => e.VlJurosMultas)
                .HasColumnType("money")
                .HasColumnName("vlJurosMultas");
            entity.Property(e => e.VlPrincipalEmpregador)
                .HasColumnType("money")
                .HasColumnName("vlPrincipalEmpregador");
            entity.Property(e => e.VlPrincipalEmpregados)
                .HasColumnType("money")
                .HasColumnName("vlPrincipalEmpregados");
        });

        modelBuilder.Entity<TbPlaAcao2012>(entity =>
        {
            entity.HasKey(e => new { e.IdAcao, e.IdAcao2012 });

            entity.ToTable("tbPlaAcao2012");

            entity.Property(e => e.IdAcao).HasColumnName("idAcao");
            entity.Property(e => e.IdAcao2012).HasColumnName("idAcao2012");

            entity.HasOne(d => d.IdAcaoNavigation).WithMany(p => p.TbPlaAcao2012s)
                .HasForeignKey(d => d.IdAcao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaAcao2012_tbPlaAcoes1");
        });

        modelBuilder.Entity<TbPlaAco>(entity =>
        {
            entity.HasKey(e => e.IdAcao);

            entity.ToTable("tbPlaAcoes");

            entity.Property(e => e.IdAcao).HasColumnName("idAcao");
            entity.Property(e => e.CdAcao)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdAcao");
            entity.Property(e => e.IdEscopo).HasColumnName("idEscopo");
            entity.Property(e => e.IdMovimento).HasColumnName("idMovimento");
            entity.Property(e => e.IdVersaoCriacao).HasColumnName("idVersaoCriacao");
            entity.Property(e => e.NmAcao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("nmAcao");
            entity.Property(e => e.TpComando)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpComando");
        });

        modelBuilder.Entity<TbPlaAcoesAvaliacoesAno>(entity =>
        {
            entity.HasKey(e => new { e.IdAcao, e.NrAno });

            entity.ToTable("tbPlaAcoesAvaliacoesAno");

            entity.Property(e => e.IdAcao).HasColumnName("idAcao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrRealizado)
                .HasColumnType("decimal(10, 3)")
                .HasColumnName("nrRealizado");
            entity.Property(e => e.VlRealizado)
                .HasColumnType("decimal(16, 2)")
                .HasColumnName("vlRealizado");

            entity.HasOne(d => d.IdAcaoNavigation).WithMany(p => p.TbPlaAcoesAvaliacoesAnos)
                .HasForeignKey(d => d.IdAcao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaAcoesAvaliacoesAno_tbPlaAcoes");
        });

        modelBuilder.Entity<TbPlaAcoesCorrelacao>(entity =>
        {
            entity.HasKey(e => e.IdCorrelacao);

            entity.ToTable("tbPlaAcoesCorrelacao");

            entity.Property(e => e.IdCorrelacao).HasColumnName("idCorrelacao");
            entity.Property(e => e.DsLoginCancelamento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginCancelamento");
            entity.Property(e => e.DsLoginCorrelacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginCorrelacao");
            entity.Property(e => e.DsNotaExplicativa)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsNotaExplicativa");
            entity.Property(e => e.DtCancelamento)
                .HasColumnType("datetime")
                .HasColumnName("dtCancelamento");
            entity.Property(e => e.DtCorrelacao)
                .HasColumnType("datetime")
                .HasColumnName("dtCorrelacao");
            entity.Property(e => e.IdAcao).HasColumnName("idAcao");
            entity.Property(e => e.IdAcaoCorrelacao).HasColumnName("idAcaoCorrelacao");
            entity.Property(e => e.IdVersaoCancelamento).HasColumnName("idVersaoCancelamento");
            entity.Property(e => e.IdVersaoCorrelacao).HasColumnName("idVersaoCorrelacao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");

            entity.HasOne(d => d.IdAcaoNavigation).WithMany(p => p.TbPlaAcoesCorrelacaoIdAcaoNavigations)
                .HasForeignKey(d => d.IdAcao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaAcoesCorrelacao_tbPlaAcoes");

            entity.HasOne(d => d.IdAcaoCorrelacaoNavigation).WithMany(p => p.TbPlaAcoesCorrelacaoIdAcaoCorrelacaoNavigations)
                .HasForeignKey(d => d.IdAcaoCorrelacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaAcoesCorrelacao_tbPlaAcoes1");
        });

        modelBuilder.Entity<TbPlaAcoesMeta>(entity =>
        {
            entity.HasKey(e => new { e.IdAcao, e.NrAno });

            entity.ToTable("tbPlaAcoesMetas");

            entity.Property(e => e.IdAcao).HasColumnName("idAcao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.IdMovimento).HasColumnName("idMovimento");
            entity.Property(e => e.IdVersaoCriacao).HasColumnName("idVersaoCriacao");
            entity.Property(e => e.TpComando)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpComando");

            entity.HasOne(d => d.IdAcaoNavigation).WithMany(p => p.TbPlaAcoesMeta)
                .HasForeignKey(d => d.IdAcao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaAcoesMetas_tbPlaAcoes");
        });

        modelBuilder.Entity<TbPlaAcoesMetasMovimento>(entity =>
        {
            entity.HasKey(e => e.IdMovimento);

            entity.ToTable("tbPlaAcoesMetasMovimentos");

            entity.Property(e => e.IdMovimento).HasColumnName("idMovimento");
            entity.Property(e => e.DsNotaExplicativa)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsNotaExplicativa");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.IdAcao).HasColumnName("idAcao");
            entity.Property(e => e.IdTipoMovimento).HasColumnName("idTipoMovimento");
            entity.Property(e => e.IdVersaoMovimento).HasColumnName("idVersaoMovimento");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMetaFisica)
                .HasColumnType("decimal(16, 3)")
                .HasColumnName("nrMetaFisica");
            entity.Property(e => e.NrMovimento).HasColumnName("nrMovimento");
            entity.Property(e => e.VlOperacao)
                .HasColumnType("decimal(16, 2)")
                .HasColumnName("vlOperacao");

            entity.HasOne(d => d.IdTipoMovimentoNavigation).WithMany(p => p.TbPlaAcoesMetasMovimentos)
                .HasForeignKey(d => d.IdTipoMovimento)
                .HasConstraintName("FK_tbPlaAcoesMetasMovimentos_tbPlaTiposMovimento");

            entity.HasOne(d => d.TbPlaAcoesMeta).WithMany(p => p.TbPlaAcoesMetasMovimentos)
                .HasForeignKey(d => new { d.IdAcao, d.NrAno })
                .HasConstraintName("FK_tbPlaAcoesMetasMovimentos_tbPpaAcoesMetasAno");
        });

        modelBuilder.Entity<TbPlaAcoesMetasMovimentosFonte>(entity =>
        {
            entity.HasKey(e => new { e.IdMovimento, e.CdFonte }).HasName("PK_tbPlaAcoesMetasMovimentosFontes_1");

            entity.ToTable("tbPlaAcoesMetasMovimentosFontes");

            entity.Property(e => e.IdMovimento).HasColumnName("idMovimento");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.FlCorrenteCapital)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flCorrenteCapital");
            entity.Property(e => e.VlEstimado)
                .HasColumnType("money")
                .HasColumnName("vlEstimado");

            entity.HasOne(d => d.IdMovimentoNavigation).WithMany(p => p.TbPlaAcoesMetasMovimentosFontes)
                .HasForeignKey(d => d.IdMovimento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaAcoesMetasMovimentosFontes_tbPlaAcoesMetasMovimentos");
        });

        modelBuilder.Entity<TbPlaAcoesMovimento>(entity =>
        {
            entity.HasKey(e => e.IdMovimento);

            entity.ToTable("tbPlaAcoesMovimentos");

            entity.HasIndex(e => e.IdAcao, "IX_tbPlaAcoesMovimentos_idAcao_inc_dsAcao");

            entity.Property(e => e.IdMovimento).HasColumnName("idMovimento");
            entity.Property(e => e.CdFuncao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFuncao");
            entity.Property(e => e.CdOrgaoResponsavel)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgaoResponsavel");
            entity.Property(e => e.CdSubFuncao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdSubFuncao");
            entity.Property(e => e.CdUnidadeResponsavel)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidadeResponsavel");
            entity.Property(e => e.DsAcao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsAcao");
            entity.Property(e => e.DsNotaExplicativa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsNotaExplicativa");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.FlAcaoContinua)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flAcaoContinua");
            entity.Property(e => e.IdAcao).HasColumnName("idAcao");
            entity.Property(e => e.IdEmpresaExecutor).HasColumnName("idEmpresaExecutor");
            entity.Property(e => e.IdNaturezaAcao).HasColumnName("idNaturezaAcao");
            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.IdTipoAcao).HasColumnName("idTipoAcao");
            entity.Property(e => e.IdTipoExecucaoAcao).HasColumnName("idTipoExecucaoAcao");
            entity.Property(e => e.IdTipoMovimento).HasColumnName("idTipoMovimento");
            entity.Property(e => e.IdUnidadeMedida).HasColumnName("idUnidadeMedida");
            entity.Property(e => e.IdVersaoMovimento).HasColumnName("idVersaoMovimento");
            entity.Property(e => e.NrMovimento).HasColumnName("nrMovimento");

            entity.HasOne(d => d.IdNaturezaAcaoNavigation).WithMany(p => p.TbPlaAcoesMovimentos)
                .HasForeignKey(d => d.IdNaturezaAcao)
                .HasConstraintName("FK_tbPlaAcoesMovimentos_tbPlaNaturezasAcao");

            entity.HasOne(d => d.IdTipoAcaoNavigation).WithMany(p => p.TbPlaAcoesMovimentos)
                .HasForeignKey(d => d.IdTipoAcao)
                .HasConstraintName("FK_tbPlaAcoesMovimentos_tbPlaTiposAcao");

            entity.HasOne(d => d.IdTipoExecucaoAcaoNavigation).WithMany(p => p.TbPlaAcoesMovimentos)
                .HasForeignKey(d => d.IdTipoExecucaoAcao)
                .HasConstraintName("FK_tbPlaAcoesMovimentos_tbPlaTiposExecucaoAcao");

            entity.HasOne(d => d.IdTipoMovimentoNavigation).WithMany(p => p.TbPlaAcoesMovimentos)
                .HasForeignKey(d => d.IdTipoMovimento)
                .HasConstraintName("FK_tbPlaAcoesMovimentos_tbPlaTiposMovimento");

            entity.HasOne(d => d.IdVersaoMovimentoNavigation).WithMany(p => p.TbPlaAcoesMovimentos)
                .HasForeignKey(d => d.IdVersaoMovimento)
                .HasConstraintName("FK_tbPlaAcoesMovimentos_tbPlaVersoes");

            entity.HasMany(d => d.IdObjetivoMilenios).WithMany(p => p.IdMovimentos)
                .UsingEntity<Dictionary<string, object>>(
                    "TbPlaAcoesMovimentoObjetivosMilenio",
                    r => r.HasOne<TbPlaObjetivosMilenio>().WithMany()
                        .HasForeignKey("IdObjetivoMilenio")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbPlaAcoesMovimentoObjetivosMilenio_tbPlaObjetivosMilenio"),
                    l => l.HasOne<TbPlaAcoesMovimento>().WithMany()
                        .HasForeignKey("IdMovimento")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbPlaAcoesMovimentoObjetivosMilenio_tbPlaAcoesMovimentos"),
                    j =>
                    {
                        j.HasKey("IdMovimento", "IdObjetivoMilenio");
                        j.ToTable("tbPlaAcoesMovimentoObjetivosMilenio");
                        j.IndexerProperty<int>("IdMovimento").HasColumnName("idMovimento");
                        j.IndexerProperty<short>("IdObjetivoMilenio").HasColumnName("idObjetivoMilenio");
                    });
        });

        modelBuilder.Entity<TbPlaAcoesMovimentosBkp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbPlaAcoesMovimentosBKP");

            entity.Property(e => e.CdFuncao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFuncao");
            entity.Property(e => e.CdOrgaoResponsavel)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgaoResponsavel");
            entity.Property(e => e.CdSubFuncao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdSubFuncao");
            entity.Property(e => e.CdUnidadeResponsavel)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidadeResponsavel");
            entity.Property(e => e.DsAcao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsAcao");
            entity.Property(e => e.DsNotaExplicativa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsNotaExplicativa");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.FlAcaoContinua)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flAcaoContinua");
            entity.Property(e => e.IdAcao).HasColumnName("idAcao");
            entity.Property(e => e.IdEmpresaExecutor).HasColumnName("idEmpresaExecutor");
            entity.Property(e => e.IdMovimento)
                .ValueGeneratedOnAdd()
                .HasColumnName("idMovimento");
            entity.Property(e => e.IdNaturezaAcao).HasColumnName("idNaturezaAcao");
            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.IdTipoAcao).HasColumnName("idTipoAcao");
            entity.Property(e => e.IdTipoExecucaoAcao).HasColumnName("idTipoExecucaoAcao");
            entity.Property(e => e.IdTipoMovimento).HasColumnName("idTipoMovimento");
            entity.Property(e => e.IdUnidadeMedida).HasColumnName("idUnidadeMedida");
            entity.Property(e => e.IdVersaoMovimento).HasColumnName("idVersaoMovimento");
            entity.Property(e => e.NrMovimento).HasColumnName("nrMovimento");
        });

        modelBuilder.Entity<TbPlaAcoesMovimentosCorrelaco>(entity =>
        {
            entity.HasKey(e => e.IdMovimentoCorrelacao);

            entity.ToTable("tbPlaAcoesMovimentosCorrelacoes");

            entity.Property(e => e.IdMovimentoCorrelacao).HasColumnName("idMovimentoCorrelacao");
            entity.Property(e => e.IdAcao).HasColumnName("idAcao");
            entity.Property(e => e.IdMovimento).HasColumnName("idMovimento");
            entity.Property(e => e.IdVersaoMovimento).HasColumnName("idVersaoMovimento");
        });

        modelBuilder.Entity<TbPlaAcoesPrograma>(entity =>
        {
            entity.HasKey(e => new { e.IdAcao, e.IdPrograma });

            entity.ToTable("tbPlaAcoesProgramas");

            entity.Property(e => e.IdAcao).HasColumnName("idAcao");
            entity.Property(e => e.IdPrograma).HasColumnName("idPrograma");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsLoginCancelamento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginCancelamento");
            entity.Property(e => e.DsLoginVinculo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginVinculo");
            entity.Property(e => e.DsNotaExplicativa)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsNotaExplicativa");
            entity.Property(e => e.DtCancelamento)
                .HasColumnType("datetime")
                .HasColumnName("dtCancelamento");
            entity.Property(e => e.DtVinculo)
                .HasColumnType("datetime")
                .HasColumnName("dtVinculo");
            entity.Property(e => e.IdVersaoCancelamento).HasColumnName("idVersaoCancelamento");
            entity.Property(e => e.IdVersaoVinculo).HasColumnName("idVersaoVinculo");

            entity.HasOne(d => d.IdAcaoNavigation).WithMany(p => p.TbPlaAcoesProgramas)
                .HasForeignKey(d => d.IdAcao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaAcoesProgramas_tbPlaAcoes");

            entity.HasOne(d => d.IdProgramaNavigation).WithMany(p => p.TbPlaAcoesProgramas)
                .HasForeignKey(d => d.IdPrograma)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaAcoesProgramas_tbPlaProgramas");
        });

        modelBuilder.Entity<TbPlaAcoesSemCorrelacao>(entity =>
        {
            entity.HasKey(e => e.IdSemCorrelacao);

            entity.ToTable("tbPlaAcoesSemCorrelacao");

            entity.Property(e => e.IdSemCorrelacao).HasColumnName("idSemCorrelacao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsNotaExplicativa)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsNotaExplicativa");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdAcao).HasColumnName("idAcao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.TpControle)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpControle");

            entity.HasOne(d => d.IdAcaoNavigation).WithMany(p => p.TbPlaAcoesSemCorrelacaos)
                .HasForeignKey(d => d.IdAcao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaAcoesSemCorrelacao_tbPlaAcoes");
        });

        modelBuilder.Entity<TbPlaAreasProjecaoReceitum>(entity =>
        {
            entity.HasKey(e => e.CdArea);

            entity.ToTable("tbPlaAreasProjecaoReceita");

            entity.Property(e => e.CdArea)
                .ValueGeneratedNever()
                .HasColumnName("cdArea");
            entity.Property(e => e.DsArea)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsArea");
        });

        modelBuilder.Entity<TbPlaConstrucaoProgramasObjetivo>(entity =>
        {
            entity.HasKey(e => new { e.IdPrograma, e.IdObjetivo });

            entity.ToTable("tbPlaConstrucaoProgramasObjetivos");
        });

        modelBuilder.Entity<TbPlaCorrelacaoAcaoLoaLdo>(entity =>
        {
            entity.HasKey(e => new { e.IdAcaoCorrelacao, e.IdAcao });

            entity.ToTable("tbPlaCorrelacaoAcaoLoaLdo");

            entity.Property(e => e.IdAcaoCorrelacao).HasColumnName("idAcaoCorrelacao");
            entity.Property(e => e.IdAcao).HasColumnName("idAcao");
            entity.Property(e => e.IdVersaoCorrelacao).HasColumnName("idVersaoCorrelacao");
        });

        modelBuilder.Entity<TbPlaEixo>(entity =>
        {
            entity.HasKey(e => e.IdEixo);

            entity.ToTable("tbPlaEixos");

            entity.Property(e => e.CdEixo)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdEixo");
            entity.Property(e => e.DsEixo)
                .HasMaxLength(255)
                .HasColumnName("dsEixo");
            entity.Property(e => e.DsIndiceFinal)
                .HasMaxLength(50)
                .HasColumnName("dsIndiceFinal");
            entity.Property(e => e.DsMedida)
                .HasMaxLength(50)
                .HasColumnName("dsMedida");
            entity.Property(e => e.DtBase)
                .HasColumnType("datetime")
                .HasColumnName("dtBase");
            entity.Property(e => e.IdUnidadeMedida).HasColumnName("idUnidadeMedida");
            entity.Property(e => e.IdVersaoCriacao).HasColumnName("idVersaoCriacao");
        });

        modelBuilder.Entity<TbPlaEixosPrograma>(entity =>
        {
            entity.HasKey(e => e.IdEixoPrograma);

            entity.ToTable("tbPlaEixosPrograma");
        });

        modelBuilder.Entity<TbPlaEscopo>(entity =>
        {
            entity.HasKey(e => e.IdEscopo);

            entity.ToTable("tbPlaEscopos");

            entity.Property(e => e.IdEscopo).HasColumnName("idEscopo");
            entity.Property(e => e.DsEscopo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsEscopo");
            entity.Property(e => e.IdTipoEscopo).HasColumnName("idTipoEscopo");
            entity.Property(e => e.NrAnoElaboracao).HasColumnName("nrAnoElaboracao");
            entity.Property(e => e.NrAnoFinal).HasColumnName("nrAnoFinal");
            entity.Property(e => e.NrAnoInicial).HasColumnName("nrAnoInicial");

            entity.HasOne(d => d.IdTipoEscopoNavigation).WithMany(p => p.TbPlaEscopos)
                .HasForeignKey(d => d.IdTipoEscopo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaEscopos_tbPlaTiposEscopos");
        });

        modelBuilder.Entity<TbPlaIndicadore>(entity =>
        {
            entity.HasKey(e => e.IdIndicador).HasName("PK_tbPlpaIndicadores");

            entity.ToTable("tbPlaIndicadores");

            entity.Property(e => e.IdIndicador).HasColumnName("idIndicador");
            entity.Property(e => e.CdIndicador)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdIndicador");
            entity.Property(e => e.IdEscopo).HasColumnName("idEscopo");
            entity.Property(e => e.IdMovimento).HasColumnName("idMovimento");
            entity.Property(e => e.IdVersaoCriacao).HasColumnName("idVersaoCriacao");
            entity.Property(e => e.TpComando)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpComando");

            entity.HasOne(d => d.IdEscopoNavigation).WithMany(p => p.TbPlaIndicadores)
                .HasForeignKey(d => d.IdEscopo)
                .HasConstraintName("FK_tbPlaIndicadores_tbPlaQuadrienios");

            entity.HasOne(d => d.IdVersaoCriacaoNavigation).WithMany(p => p.TbPlaIndicadores)
                .HasForeignKey(d => d.IdVersaoCriacao)
                .HasConstraintName("FK_tbPlpaIndicadores_tbPlaVersoes");
        });

        modelBuilder.Entity<TbPlaIndicadoresAvaliacoesAno>(entity =>
        {
            entity.HasKey(e => new { e.IdIndicador, e.NrAno });

            entity.ToTable("tbPlaIndicadoresAvaliacoesAno");

            entity.Property(e => e.IdIndicador).HasColumnName("idIndicador");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMedidaRealizada)
                .HasColumnType("decimal(18, 3)")
                .HasColumnName("nrMedidaRealizada");

            entity.HasOne(d => d.IdIndicadorNavigation).WithMany(p => p.TbPlaIndicadoresAvaliacoesAnos)
                .HasForeignKey(d => d.IdIndicador)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaIndicadoresAvaliacoesAno_tbPlaIndicadores");
        });

        modelBuilder.Entity<TbPlaIndicadoresMovimento>(entity =>
        {
            entity.HasKey(e => e.IdMovimento);

            entity.ToTable("tbPlaIndicadoresMovimentos");

            entity.Property(e => e.IdMovimento).HasColumnName("idMovimento");
            entity.Property(e => e.DsIndicador)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsIndicador");
            entity.Property(e => e.DsNotaExplicativa)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsNotaExplicativa");
            entity.Property(e => e.DtBase)
                .HasColumnType("datetime")
                .HasColumnName("dtBase");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.IdIndicador).HasColumnName("idIndicador");
            entity.Property(e => e.IdNaturezaIndicador)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("idNaturezaIndicador");
            entity.Property(e => e.IdTipoIndicador).HasColumnName("idTipoIndicador");
            entity.Property(e => e.IdTipoMovimento).HasColumnName("idTipoMovimento");
            entity.Property(e => e.IdUnidadeMedida).HasColumnName("idUnidadeMedida");
            entity.Property(e => e.IdVersaoMovimento).HasColumnName("idVersaoMovimento");
            entity.Property(e => e.NrMedidaInicial)
                .HasColumnType("decimal(14, 4)")
                .HasColumnName("nrMedidaInicial");
            entity.Property(e => e.NrMovimento).HasColumnName("nrMovimento");

            entity.HasOne(d => d.IdIndicadorNavigation).WithMany(p => p.TbPlaIndicadoresMovimentos)
                .HasForeignKey(d => d.IdIndicador)
                .HasConstraintName("FK_tbPlaIndicadoresMovimentos_tbPlaIndicadores");

            entity.HasOne(d => d.IdNaturezaIndicadorNavigation).WithMany(p => p.TbPlaIndicadoresMovimentos)
                .HasForeignKey(d => d.IdNaturezaIndicador)
                .HasConstraintName("FK_tbPlaIndicadoresMovimentos_tbPlaNaturezasIndicador");

            entity.HasOne(d => d.IdPublicoAlvoNavigation).WithMany(p => p.TbPlaIndicadoresMovimentos)
                .HasForeignKey(d => d.IdPublicoAlvo)
                .HasConstraintName("FK_tbPlpaIndicadoresMovimentos_tbPlaPublicosAlvo1");

            entity.HasOne(d => d.IdTipoIndicadorNavigation).WithMany(p => p.TbPlaIndicadoresMovimentos)
                .HasForeignKey(d => d.IdTipoIndicador)
                .HasConstraintName("FK_tbPlaIndicadoresMovimentos_tbPlaTiposIndicadores1");

            entity.HasOne(d => d.IdTipoMovimentoNavigation).WithMany(p => p.TbPlaIndicadoresMovimentos)
                .HasForeignKey(d => d.IdTipoMovimento)
                .HasConstraintName("FK_tbPlaIndicadoresMovimentos_tbPlaTiposMovimento");

            entity.HasOne(d => d.IdUnidadeMedidaNavigation).WithMany(p => p.TbPlaIndicadoresMovimentos)
                .HasForeignKey(d => d.IdUnidadeMedida)
                .HasConstraintName("FK_tbPlaIndicadoresMovimentos_tbPlaUnidadesMedida");

            entity.HasOne(d => d.IdVersaoMovimentoNavigation).WithMany(p => p.TbPlaIndicadoresMovimentos)
                .HasForeignKey(d => d.IdVersaoMovimento)
                .HasConstraintName("FK_tbPlaIndicadoresMovimentos_tbPlaVersoes");
        });

        modelBuilder.Entity<TbPlaIndicadoresObjetivoMilenioAvaliacao>(entity =>
        {
            entity.HasKey(e => new { e.IdIndicador, e.IdObjetivoMilenio, e.NrAno });

            entity.ToTable("tbPlaIndicadoresObjetivoMilenioAvaliacao");

            entity.Property(e => e.IdIndicador).HasColumnName("idIndicador");
            entity.Property(e => e.IdObjetivoMilenio).HasColumnName("idObjetivoMilenio");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlAvaliacao)
                .HasColumnType("decimal(16, 2)")
                .HasColumnName("vlAvaliacao");

            entity.HasOne(d => d.IdIndicadorNavigation).WithMany(p => p.TbPlaIndicadoresObjetivoMilenioAvaliacaos)
                .HasForeignKey(d => d.IdIndicador)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaIndicadoresObjetivoMilenioAvaliacao_tbPlaIndicadores");

            entity.HasOne(d => d.IdObjetivoMilenioNavigation).WithMany(p => p.TbPlaIndicadoresObjetivoMilenioAvaliacaos)
                .HasForeignKey(d => d.IdObjetivoMilenio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaIndicadoresObjetivoMilenioAvaliacao_tbPlaObjetivosMilenio");
        });

        modelBuilder.Entity<TbPlaIndicadoresSimplificado>(entity =>
        {
            entity.HasKey(e => e.IdIndicador);

            entity.ToTable("tbPlaIndicadoresSimplificado");

            entity.Property(e => e.IdIndicador).HasColumnName("idIndicador");
            entity.Property(e => e.CdIndicador)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdIndicador");
            entity.Property(e => e.DsIndicador)
                .HasMaxLength(255)
                .HasColumnName("dsIndicador");
            entity.Property(e => e.DsIndiceFinal)
                .HasMaxLength(50)
                .HasColumnName("dsIndiceFinal");
            entity.Property(e => e.DsMedida)
                .HasMaxLength(50)
                .HasColumnName("dsMedida");
            entity.Property(e => e.DtBase)
                .HasColumnType("datetime")
                .HasColumnName("dtBase");
            entity.Property(e => e.IdPrograma).HasColumnName("idPrograma");
            entity.Property(e => e.IdUnidadeMedida).HasColumnName("idUnidadeMedida");
            entity.Property(e => e.NrAnoBase).HasColumnName("nrAnoBase");

            entity.HasOne(d => d.IdProgramaNavigation).WithMany(p => p.TbPlaIndicadoresSimplificados)
                .HasForeignKey(d => d.IdPrograma)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaIndicadoresSimplificado_tbPlaProgramas");

            entity.HasOne(d => d.IdUnidadeMedidaNavigation).WithMany(p => p.TbPlaIndicadoresSimplificados)
                .HasForeignKey(d => d.IdUnidadeMedida)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaIndicadoresSimplificado_tbPlaUnidadesMedida");
        });

        modelBuilder.Entity<TbPlaIniciativa>(entity =>
        {
            entity.HasKey(e => e.IdIniciativa);

            entity.ToTable("tbPlaIniciativas");

            entity.Property(e => e.IdIniciativa).HasColumnName("idIniciativa");
            entity.Property(e => e.Cdiniciativa)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdiniciativa");
            entity.Property(e => e.DsIniciativa)
                .HasMaxLength(500)
                .HasColumnName("dsIniciativa");
            entity.Property(e => e.IdObjetivo).HasColumnName("idObjetivo");

            entity.HasOne(d => d.IdObjetivoNavigation).WithMany(p => p.TbPlaIniciativas)
                .HasForeignKey(d => d.IdObjetivo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaIniciativas_tbPlaObjetivos");

            entity.HasMany(d => d.IdAcaos).WithMany(p => p.IdIniciativas)
                .UsingEntity<Dictionary<string, object>>(
                    "TbPlaProjetoAtividadeIniciativa",
                    r => r.HasOne<TbOrcProgramasAco>().WithMany()
                        .HasForeignKey("IdAcao")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbPlaProjetoAtividadeIniciativa_tbOrcProgramasAcoes"),
                    l => l.HasOne<TbPlaIniciativa>().WithMany()
                        .HasForeignKey("IdIniciativa")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbPlaProjetoAtividadeIniciativa_tbPlaIniciativas"),
                    j =>
                    {
                        j.HasKey("IdIniciativa", "IdAcao");
                        j.ToTable("tbPlaProjetoAtividadeIniciativa");
                        j.IndexerProperty<int>("IdIniciativa").HasColumnName("idIniciativa");
                    });
        });

        modelBuilder.Entity<TbPlaLocalizadore>(entity =>
        {
            entity.HasKey(e => e.IdLocalizador);

            entity.ToTable("tbPlaLocalizadores");

            entity.Property(e => e.IdLocalizador).HasColumnName("idLocalizador");
            entity.Property(e => e.NmLocalizador)
                .HasMaxLength(255)
                .HasColumnName("nmLocalizador");
        });

        modelBuilder.Entity<TbPlaMacroObjetivo>(entity =>
        {
            entity.HasKey(e => e.IdMacroObjetivo);

            entity.ToTable("tbPlaMacroObjetivos");

            entity.Property(e => e.CdMacroObjetivo)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdMacroObjetivo");
            entity.Property(e => e.DsMacroObjetivo)
                .IsUnicode(false)
                .HasColumnName("dsMacroObjetivo");
            entity.Property(e => e.IdObjetivoMilenio).HasColumnName("idObjetivoMilenio");
            entity.Property(e => e.IdVersaoCriacao).HasColumnName("idVersaoCriacao");
            entity.Property(e => e.NmMacroObjetivo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmMacroObjetivo");
            entity.Property(e => e.TpComando)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpComando");

            entity.HasOne(d => d.IdObjetivoMilenioNavigation).WithMany(p => p.TbPlaMacroObjetivos)
                .HasForeignKey(d => d.IdObjetivoMilenio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaMacroObjetivos_tbPlaObjetivosMilenio");
        });

        modelBuilder.Entity<TbPlaMedidaEsperadaIndicador>(entity =>
        {
            entity.HasKey(e => new { e.IdMovimento, e.NrAnoBase }).HasName("PK_tbPlpaMedidaEsperadaIndicador");

            entity.ToTable("tbPlaMedidaEsperadaIndicador");

            entity.Property(e => e.IdMovimento).HasColumnName("idMovimento");
            entity.Property(e => e.NrAnoBase).HasColumnName("nrAnoBase");
            entity.Property(e => e.NrMedidaEsperada)
                .HasColumnType("decimal(14, 4)")
                .HasColumnName("nrMedidaEsperada");

            entity.HasOne(d => d.IdMovimentoNavigation).WithMany(p => p.TbPlaMedidaEsperadaIndicadors)
                .HasForeignKey(d => d.IdMovimento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaMedidaEsperadaIndicador_tbPlaIndicadoresMovimentos");
        });

        modelBuilder.Entity<TbPlaNaturezasAcao>(entity =>
        {
            entity.HasKey(e => e.IdNaturezaAcao);

            entity.ToTable("tbPlaNaturezasAcao");

            entity.Property(e => e.IdNaturezaAcao)
                .ValueGeneratedNever()
                .HasColumnName("idNaturezaAcao");
            entity.Property(e => e.DsNaturezaAcao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsNaturezaAcao");
        });

        modelBuilder.Entity<TbPlaNaturezasIndicador>(entity =>
        {
            entity.HasKey(e => e.IdNaturezaIndicador);

            entity.ToTable("tbPlaNaturezasIndicador");

            entity.Property(e => e.IdNaturezaIndicador)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("idNaturezaIndicador");
            entity.Property(e => e.DsNaturezaIndicador)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsNaturezaIndicador");
        });

        modelBuilder.Entity<TbPlaObjetivo>(entity =>
        {
            entity.HasKey(e => e.IdObjetivo);

            entity.ToTable("tbPlaObjetivos");

            entity.Property(e => e.IdObjetivo).HasColumnName("idObjetivo");
            entity.Property(e => e.CdObjetivo)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdObjetivo");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObjetivo)
                .HasMaxLength(255)
                .HasColumnName("dsObjetivo");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdVersaoCriacao).HasColumnName("idVersaoCriacao");
            entity.Property(e => e.NmObjetivo)
                .HasMaxLength(255)
                .HasColumnName("nmObjetivo");
        });

        modelBuilder.Entity<TbPlaObjetivosDesenvSustentavel>(entity =>
        {
            entity.HasKey(e => e.IdObjetivoDesenvSustentavel);

            entity.ToTable("tbPlaObjetivosDesenvSustentavel");

            entity.Property(e => e.IdObjetivoDesenvSustentavel).ValueGeneratedNever();
            entity.Property(e => e.DsObjetivoDesenvSustentavel)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsObjetivoDesenvSustentavel");
        });

        modelBuilder.Entity<TbPlaObjetivosMeta>(entity =>
        {
            entity.HasKey(e => e.IdObjetivoMeta);

            entity.ToTable("tbPlaObjetivosMetas");

            entity.Property(e => e.IdObjetivoMeta).HasColumnName("idObjetivoMeta");
            entity.Property(e => e.DsMetaFisica)
                .HasMaxLength(255)
                .HasColumnName("dsMetaFisica");
            entity.Property(e => e.FlMetaQuantitativa)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flMetaQuantitativa");
            entity.Property(e => e.IdObjetivo).HasColumnName("idObjetivo");

            entity.HasOne(d => d.IdObjetivoNavigation).WithMany(p => p.TbPlaObjetivosMeta)
                .HasForeignKey(d => d.IdObjetivo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaObjetivosMetas_tbPlaObjetivos");
        });

        modelBuilder.Entity<TbPlaObjetivosMetasLocalizadore>(entity =>
        {
            entity.HasKey(e => e.IdObjetivoMetaLocalizador);

            entity.ToTable("tbPlaObjetivosMetasLocalizadores");

            entity.Property(e => e.IdObjetivoMetaLocalizador).HasColumnName("idObjetivoMetaLocalizador");
            entity.Property(e => e.IdLocalizador).HasColumnName("idLocalizador");
            entity.Property(e => e.IdObjetivoMeta).HasColumnName("idObjetivoMeta");
            entity.Property(e => e.IdUnidadeMedida).HasColumnName("idUnidadeMedida");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMetaFisica)
                .HasColumnType("decimal(18, 4)")
                .HasColumnName("nrMetaFisica");
            entity.Property(e => e.VlMetaFinanceira)
                .HasColumnType("money")
                .HasColumnName("vlMetaFinanceira");

            entity.HasOne(d => d.IdLocalizadorNavigation).WithMany(p => p.TbPlaObjetivosMetasLocalizadores)
                .HasForeignKey(d => d.IdLocalizador)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaObjetivosMetasLocalizadores_tbPlaLocalizadores");

            entity.HasOne(d => d.IdObjetivoMetaNavigation).WithMany(p => p.TbPlaObjetivosMetasLocalizadores)
                .HasForeignKey(d => d.IdObjetivoMeta)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaObjetivosMetasLocalizadores_tbPlaObjetivosMetas");

            entity.HasOne(d => d.IdUnidadeMedidaNavigation).WithMany(p => p.TbPlaObjetivosMetasLocalizadores)
                .HasForeignKey(d => d.IdUnidadeMedida)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaObjetivosMetasLocalizadores_tbPlaUnidadesMedida");
        });

        modelBuilder.Entity<TbPlaObjetivosMilenio>(entity =>
        {
            entity.HasKey(e => e.IdObjetivoMilenio);

            entity.ToTable("tbPlaObjetivosMilenio");

            entity.Property(e => e.IdObjetivoMilenio)
                .ValueGeneratedNever()
                .HasColumnName("idObjetivoMilenio");
            entity.Property(e => e.DsObjetivoMilenio)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsObjetivoMilenio");
        });

        modelBuilder.Entity<TbPlaObjetivosMilenioAvaliacao>(entity =>
        {
            entity.HasKey(e => e.IdAvaliacao);

            entity.ToTable("tbPlaObjetivosMilenioAvaliacao");

            entity.Property(e => e.IdAvaliacao).HasColumnName("idAvaliacao");
            entity.Property(e => e.IdEscopo).HasColumnName("idEscopo");
            entity.Property(e => e.IdObjetivoMilenio).HasColumnName("idObjetivoMilenio");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMedidaAlcancada)
                .HasColumnType("decimal(10, 3)")
                .HasColumnName("nrMedidaAlcancada");

            entity.HasOne(d => d.IdObjetivoMilenioNavigation).WithMany(p => p.TbPlaObjetivosMilenioAvaliacaos)
                .HasForeignKey(d => d.IdObjetivoMilenio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaObjetivosMilenioAvaliacao_tbPlaObjetivosMilenio");
        });

        modelBuilder.Entity<TbPlaObjetivosMilenioMedidasEsperada>(entity =>
        {
            entity.HasKey(e => e.IdMedida);

            entity.ToTable("tbPlaObjetivosMilenioMedidasEsperadas");

            entity.Property(e => e.IdMedida).HasColumnName("idMedida");
            entity.Property(e => e.IdObjetivoMilenio).HasColumnName("idObjetivoMilenio");
            entity.Property(e => e.IdVersaoMedida).HasColumnName("idVersaoMedida");
            entity.Property(e => e.NrAnoAplicacao).HasColumnName("nrAnoAplicacao");
            entity.Property(e => e.NrMedidaEsperada)
                .HasColumnType("decimal(10, 3)")
                .HasColumnName("nrMedidaEsperada");

            entity.HasOne(d => d.IdObjetivoMilenioNavigation).WithMany(p => p.TbPlaObjetivosMilenioMedidasEsperada)
                .HasForeignKey(d => d.IdObjetivoMilenio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaObjetivosMilenioMedidasEsperadas_tbPlaObjetivosMilenio");

            entity.HasOne(d => d.IdUnidadeMedidaPadraoNavigation).WithMany(p => p.TbPlaObjetivosMilenioMedidasEsperada)
                .HasForeignKey(d => d.IdUnidadeMedidaPadrao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaObjetivosMilenioMedidasEsperadas_tbPlaUnidadesMedidasPadrao");
        });

        modelBuilder.Entity<TbPlaObjetivosPrograma>(entity =>
        {
            entity.HasKey(e => new { e.IdObjetivo, e.IdPrograma });

            entity.ToTable("tbPlaObjetivosProgramas");

            entity.Property(e => e.IdPrograma).HasColumnName("idPrograma");
        });

        modelBuilder.Entity<TbPlaProduto>(entity =>
        {
            entity.HasKey(e => e.IdProduto);

            entity.ToTable("tbPlaProdutos");

            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.DsProduto)
                .IsUnicode(false)
                .HasColumnName("dsProduto");
            entity.Property(e => e.IdProdutoPadrao).HasColumnName("idProdutoPadrao");
            entity.Property(e => e.NrAnoLimite).HasColumnName("nrAnoLimite");

            entity.HasOne(d => d.IdProdutoPadraoNavigation).WithMany(p => p.TbPlaProdutos)
                .HasForeignKey(d => d.IdProdutoPadrao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaProdutos_tbPlaProdutosPadrao");
        });

        modelBuilder.Entity<TbPlaProdutosPadrao>(entity =>
        {
            entity.HasKey(e => e.IdProdutoPadrao);

            entity.ToTable("tbPlaProdutosPadrao");

            entity.Property(e => e.IdProdutoPadrao)
                .ValueGeneratedNever()
                .HasColumnName("idProdutoPadrao");
            entity.Property(e => e.DsProdutoPadrao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsProdutoPadrao");

            entity.HasMany(d => d.IdUnidadeMedidaPadraos).WithMany(p => p.IdProdutoPadraos)
                .UsingEntity<Dictionary<string, object>>(
                    "TbPlaProdutosUnidadeMedida",
                    r => r.HasOne<TbPlaUnidadesMedidasPadrao>().WithMany()
                        .HasForeignKey("IdUnidadeMedidaPadrao")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbPlaProdutosUnidadeMedidas_tbPlaUnidadesMedidasPadrao"),
                    l => l.HasOne<TbPlaProdutosPadrao>().WithMany()
                        .HasForeignKey("IdProdutoPadrao")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbPlaProdutosUnidadeMedidas_tbPlaProdutosPadrao"),
                    j =>
                    {
                        j.HasKey("IdProdutoPadrao", "IdUnidadeMedidaPadrao");
                        j.ToTable("tbPlaProdutosUnidadeMedidas");
                        j.IndexerProperty<short>("IdProdutoPadrao").HasColumnName("idProdutoPadrao");
                    });
        });

        modelBuilder.Entity<TbPlaPrograma>(entity =>
        {
            entity.HasKey(e => e.IdPrograma);

            entity.ToTable("tbPlaProgramas");

            entity.Property(e => e.IdPrograma).HasColumnName("idPrograma");
            entity.Property(e => e.CdPrograma)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdPrograma");
            entity.Property(e => e.IdEscopo).HasColumnName("idEscopo");
            entity.Property(e => e.IdMovimento).HasColumnName("idMovimento");
            entity.Property(e => e.IdVersaoCriacao).HasColumnName("idVersaoCriacao");
            entity.Property(e => e.TpComando)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpComando");
            entity.Property(e => e.VlLimite)
                .HasColumnType("money")
                .HasColumnName("vlLimite");

            entity.HasOne(d => d.IdMacroObjetivoNavigation).WithMany(p => p.TbPlaProgramas)
                .HasForeignKey(d => d.IdMacroObjetivo)
                .HasConstraintName("FK_tbPlaProgramas_tbPlaMacroObjetivos");

            entity.HasOne(d => d.IdVersaoCriacaoNavigation).WithMany(p => p.TbPlaProgramas)
                .HasForeignKey(d => d.IdVersaoCriacao)
                .HasConstraintName("FK_tbPlaProgramas_tbPlpaVersoes");
        });

        modelBuilder.Entity<TbPlaProgramaIndicador>(entity =>
        {
            entity.HasKey(e => new { e.IdPrograma, e.IdIndicador });

            entity.ToTable("tbPlaProgramaIndicador");

            entity.Property(e => e.IdPrograma).HasColumnName("idPrograma");
            entity.Property(e => e.IdIndicador).HasColumnName("idIndicador");
            entity.Property(e => e.DsNotaExplicativa)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsNotaExplicativa");
            entity.Property(e => e.DtCancelamento)
                .HasColumnType("datetime")
                .HasColumnName("dtCancelamento");
            entity.Property(e => e.DtVinculo)
                .HasColumnType("datetime")
                .HasColumnName("dtVinculo");
            entity.Property(e => e.IdVersaoCancelamento).HasColumnName("idVersaoCancelamento");
            entity.Property(e => e.IdVersaoVinculo).HasColumnName("idVersaoVinculo");

            entity.HasOne(d => d.IdIndicadorNavigation).WithMany(p => p.TbPlaProgramaIndicadors)
                .HasForeignKey(d => d.IdIndicador)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaProgramaIndicador_tbPlaIndicadores");

            entity.HasOne(d => d.IdProgramaNavigation).WithMany(p => p.TbPlaProgramaIndicadors)
                .HasForeignKey(d => d.IdPrograma)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaProgramaIndicador_tbPlaProgramas");

            entity.HasOne(d => d.IdVersaoCancelamentoNavigation).WithMany(p => p.TbPlaProgramaIndicadorIdVersaoCancelamentoNavigations)
                .HasForeignKey(d => d.IdVersaoCancelamento)
                .HasConstraintName("FK_tbPlaProgramaIndicador_tbPlaVersoes1");

            entity.HasOne(d => d.IdVersaoVinculoNavigation).WithMany(p => p.TbPlaProgramaIndicadorIdVersaoVinculoNavigations)
                .HasForeignKey(d => d.IdVersaoVinculo)
                .HasConstraintName("FK_tbPlaProgramaIndicador_tbPlaVersoes");
        });

        modelBuilder.Entity<TbPlaProgramasMovimentaco>(entity =>
        {
            entity.HasKey(e => e.IdMovimentacao).HasName("PK_tbPlaProgramaMovimentacoes");

            entity.ToTable("tbPlaProgramasMovimentacoes");

            entity.Property(e => e.IdMovimentacao).HasColumnName("idMovimentacao");
            entity.Property(e => e.DsDiretrizes)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsDiretrizes");
            entity.Property(e => e.IdFonte).HasColumnName("idFonte");
            entity.Property(e => e.IdPessoa).HasColumnName("idPessoa");
            entity.Property(e => e.IdPrograma).HasColumnName("idPrograma");
            entity.Property(e => e.IdPublicoAlvo).HasColumnName("idPublicoAlvo");
            entity.Property(e => e.IdSituacao).HasColumnName("idSituacao");

            entity.HasOne(d => d.IdProgramaNavigation).WithMany(p => p.TbPlaProgramasMovimentacos)
                .HasForeignKey(d => d.IdPrograma)
                .HasConstraintName("FK_tbPlaProgramasMovimentacoes_tbPlaProgramas");
        });

        modelBuilder.Entity<TbPlaProgramasMovimento>(entity =>
        {
            entity.HasKey(e => e.IdMovimento).HasName("PK_tbPlaProgramasMovimentos_1");

            entity.ToTable("tbPlaProgramasMovimentos");

            entity.Property(e => e.IdMovimento).HasColumnName("idMovimento");
            entity.Property(e => e.DsNotaExplicativa)
                .IsUnicode(false)
                .HasColumnName("dsNotaExplicativa");
            entity.Property(e => e.DsObjetivo)
                .IsUnicode(false)
                .HasColumnName("dsObjetivo");
            entity.Property(e => e.DsPrograma)
                .IsUnicode(false)
                .HasColumnName("dsPrograma");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.FlFinalistico).HasColumnName("flFinalistico");
            entity.Property(e => e.IdPrograma).HasColumnName("idPrograma");
            entity.Property(e => e.IdTipoMovimento).HasColumnName("idTipoMovimento");
            entity.Property(e => e.IdVersaoMovimento).HasColumnName("idVersaoMovimento");
            entity.Property(e => e.NmPrograma)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmPrograma");
            entity.Property(e => e.NrMovimento).HasColumnName("nrMovimento");

            entity.HasOne(d => d.IdProgramaNavigation).WithMany(p => p.TbPlaProgramasMovimentos)
                .HasForeignKey(d => d.IdPrograma)
                .HasConstraintName("FK_tbPlaProgramasMovimentos_tbPlaProgramas");

            entity.HasOne(d => d.IdTipoMovimentoNavigation).WithMany(p => p.TbPlaProgramasMovimentos)
                .HasForeignKey(d => d.IdTipoMovimento)
                .HasConstraintName("FK_tbPlaProgramasMovimentos_tbPlaTiposMovimento");

            entity.HasOne(d => d.IdVersaoMovimentoNavigation).WithMany(p => p.TbPlaProgramasMovimentos)
                .HasForeignKey(d => d.IdVersaoMovimento)
                .HasConstraintName("FK_tbPlaProgramasMovimentos_tbPlaVersoes");
        });

        modelBuilder.Entity<TbPlaProgramasObjetivo>(entity =>
        {
            entity.HasKey(e => e.IdObjetivo);

            entity.ToTable("tbPlaProgramasObjetivos");

            entity.Property(e => e.CdObjetivo)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdObjetivo");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObjetivo).HasColumnName("dsObjetivo");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");

            entity.HasOne(d => d.IdProgramaNavigation).WithMany(p => p.TbPlaProgramasObjetivos)
                .HasForeignKey(d => d.IdPrograma)
                .HasConstraintName("FK_tbPlaProgramasObjetivos_tbPlaProgramas");
        });

        modelBuilder.Entity<TbPlaProgramasObjetivosMeta>(entity =>
        {
            entity.HasKey(e => e.IdObjetivoMeta);

            entity.ToTable("tbPlaProgramasObjetivosMetas");

            entity.Property(e => e.CdObjetivoMeta)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdObjetivoMeta");
            entity.Property(e => e.DsObjetivoMeta)
                .IsUnicode(false)
                .HasColumnName("dsObjetivoMeta");
            entity.Property(e => e.IdIndicador).HasColumnName("idIndicador");
            entity.Property(e => e.IdPrograma).HasColumnName("idPrograma");
            entity.Property(e => e.IdVersaoCriacao).HasColumnName("idVersaoCriacao");
            entity.Property(e => e.NrMudancaIndice)
                .HasColumnType("decimal(16, 3)")
                .HasColumnName("nrMudancaIndice");

            entity.HasOne(d => d.IdIndicadorNavigation).WithMany(p => p.TbPlaProgramasObjetivosMeta)
                .HasForeignKey(d => d.IdIndicador)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaProgramasObjetivosMetas_tbPlaIndicadores");

            entity.HasOne(d => d.IdPublicoAlvoNavigation).WithMany(p => p.TbPlaProgramasObjetivosMeta)
                .HasForeignKey(d => d.IdPublicoAlvo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaProgramasObjetivosMetas_tbPlaPublicosAlvo");
        });

        modelBuilder.Entity<TbPlaProgramasPermissoesOrgao>(entity =>
        {
            entity.HasKey(e => e.IdPermissao);

            entity.ToTable("tbPlaProgramasPermissoesOrgaos");

            entity.Property(e => e.IdPermissao).HasColumnName("idPermissao");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.IdPrograma).HasColumnName("idPrograma");

            entity.HasOne(d => d.IdProgramaNavigation).WithMany(p => p.TbPlaProgramasPermissoesOrgaos)
                .HasForeignKey(d => d.IdPrograma)
                .HasConstraintName("FK_tbPlaProgramasPermissoesOrgaos_tbPlaProgramas");
        });

        modelBuilder.Entity<TbPlaProgramasValore>(entity =>
        {
            entity.HasKey(e => new { e.IdPrograma, e.NrAno });

            entity.ToTable("tbPlaProgramasValores");

            entity.Property(e => e.IdPrograma).HasColumnName("idPrograma");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlFiscal)
                .HasColumnType("money")
                .HasColumnName("vlFiscal");
            entity.Property(e => e.VlSeguridade)
                .HasColumnType("money")
                .HasColumnName("vlSeguridade");
            entity.Property(e => e.VlSeguridadeFiscal)
                .HasColumnType("money")
                .HasColumnName("vlSeguridadeFiscal");

            entity.HasOne(d => d.IdProgramaNavigation).WithMany(p => p.TbPlaProgramasValores)
                .HasForeignKey(d => d.IdPrograma)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaProgramasValores_tbPlaProgramas");
        });

        modelBuilder.Entity<TbPlaProjecoesReceita>(entity =>
        {
            entity.HasKey(e => e.IdProjecao).HasName("PK_tbPlaProjecoesReceitas_1");

            entity.ToTable("tbPlaProjecoesReceitas");

            entity.Property(e => e.IdProjecao).HasColumnName("idProjecao");
            entity.Property(e => e.CdArea).HasColumnName("cdArea");
            entity.Property(e => e.DsTpComando)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTpComando");
            entity.Property(e => e.IdEmpresa).HasColumnName("idEmpresa");
            entity.Property(e => e.IdExecutor).HasColumnName("idExecutor");
            entity.Property(e => e.IdVersaoProjecao).HasColumnName("idVersaoProjecao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlEstimado)
                .HasColumnType("money")
                .HasColumnName("vlEstimado");

            entity.HasOne(d => d.CdAreaNavigation).WithMany(p => p.TbPlaProjecoesReceita)
                .HasForeignKey(d => d.CdArea)
                .HasConstraintName("FK_tbPlaProjecoesReceitas_tbPlaAreasProjecaoReceita");

            entity.HasOne(d => d.IdReceitaNavigation).WithMany(p => p.TbPlaProjecoesReceita)
                .HasForeignKey(d => d.IdReceita)
                .HasConstraintName("FK_tbPlaProjecoesReceitas_tbOrcReceitas");
        });

        modelBuilder.Entity<TbPlaProjecoesReceitasFonte>(entity =>
        {
            entity.HasKey(e => new { e.IdProjecao, e.IdFonte });

            entity.ToTable("tbPlaProjecoesReceitasFontes");

            entity.Property(e => e.IdProjecao).HasColumnName("idProjecao");
            entity.Property(e => e.CdArea).HasColumnName("cdArea");
            entity.Property(e => e.VlEstimado)
                .HasColumnType("money")
                .HasColumnName("vlEstimado");
        });

        modelBuilder.Entity<TbPlaProjetosAtividade>(entity =>
        {
            entity.HasKey(e => e.IdProjetoAtividade);

            entity.ToTable("tbPlaProjetosAtividades");

            entity.Property(e => e.IdProjetoAtividade).HasColumnName("idProjetoAtividade");
            entity.Property(e => e.CdProjetoAtividade)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdProjetoAtividade");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsProjetoAtividade)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsProjetoAtividade");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlOrcamentaria)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flOrcamentaria");
            entity.Property(e => e.IdEscopo).HasColumnName("idEscopo");
            entity.Property(e => e.IdVersaoCriacao).HasColumnName("idVersaoCriacao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.TpProjetoAtividade)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpProjetoAtividade");

            entity.HasMany(d => d.IdAcaos).WithMany(p => p.IdProjetoAtividades)
                .UsingEntity<Dictionary<string, object>>(
                    "TbPlaProjetoAtividadePpaXloa",
                    r => r.HasOne<TbOrcProgramasAco>().WithMany()
                        .HasForeignKey("IdAcao")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbPlaProjetoAtividadePpaXLoa_tbOrcProgramasAcoes"),
                    l => l.HasOne<TbPlaProjetosAtividade>().WithMany()
                        .HasForeignKey("IdProjetoAtividade")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbPlaProjetoAtividadePpaXLoa_tbPlaProjetosAtividades"),
                    j =>
                    {
                        j.HasKey("IdProjetoAtividade", "IdAcao");
                        j.ToTable("tbPlaProjetoAtividadePpaXLoa");
                        j.IndexerProperty<int>("IdProjetoAtividade").HasColumnName("idProjetoAtividade");
                    });

            entity.HasMany(d => d.IdObjetivoMeta).WithMany(p => p.IdProjetoAtividades)
                .UsingEntity<Dictionary<string, object>>(
                    "TbPlaProjetosAtividadesObjetivosMeta",
                    r => r.HasOne<TbPlaObjetivosMeta>().WithMany()
                        .HasForeignKey("IdObjetivoMeta")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbPlaProjetosAtividadesObjetivosMetas_tbPlaObjetivosMetas"),
                    l => l.HasOne<TbPlaProjetosAtividade>().WithMany()
                        .HasForeignKey("IdProjetoAtividade")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbPlaProjetosAtividadesObjetivosMetas_tbPlaProjetosAtividades"),
                    j =>
                    {
                        j.HasKey("IdProjetoAtividade", "IdObjetivoMeta");
                        j.ToTable("tbPlaProjetosAtividadesObjetivosMetas");
                        j.IndexerProperty<int>("IdProjetoAtividade").HasColumnName("idProjetoAtividade");
                        j.IndexerProperty<int>("IdObjetivoMeta").HasColumnName("idObjetivoMeta");
                    });
        });

        modelBuilder.Entity<TbPlaProjetosAtividadesAco>(entity =>
        {
            entity.HasKey(e => new { e.IdProjetoAtividade, e.IdAcao, e.IdVersaoVinculo });

            entity.ToTable("tbPlaProjetosAtividadesAcoes");

            entity.Property(e => e.IdProjetoAtividade).HasColumnName("idProjetoAtividade");
            entity.Property(e => e.IdAcao).HasColumnName("idAcao");
            entity.Property(e => e.IdVersaoVinculo).HasColumnName("idVersaoVinculo");
            entity.Property(e => e.DsLoginCancelamento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginCancelamento");
            entity.Property(e => e.DsLoginVinculo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginVinculo");
            entity.Property(e => e.DsNotaExplicativa)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsNotaExplicativa");
            entity.Property(e => e.DtCancelamento)
                .HasColumnType("datetime")
                .HasColumnName("dtCancelamento");
            entity.Property(e => e.DtVinculo)
                .HasColumnType("datetime")
                .HasColumnName("dtVinculo");
            entity.Property(e => e.IdVersaoCancelamento).HasColumnName("idVersaoCancelamento");

            entity.HasOne(d => d.IdAcaoNavigation).WithMany(p => p.TbPlaProjetosAtividadesAcos)
                .HasForeignKey(d => d.IdAcao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaProjetosAtividadesAcoes_tbPlaAcoes");

            entity.HasOne(d => d.IdProjetoAtividadeNavigation).WithMany(p => p.TbPlaProjetosAtividadesAcos)
                .HasForeignKey(d => d.IdProjetoAtividade)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPlaProjetosAtividadesAcoes_tbPlaProjetosAtividades");
        });

        modelBuilder.Entity<TbPlaPublicosAlvo>(entity =>
        {
            entity.HasKey(e => e.IdPublicoAlvo);

            entity.ToTable("tbPlaPublicosAlvo");

            entity.Property(e => e.DsPublicoAlvo)
                .IsUnicode(false)
                .HasColumnName("dsPublicoAlvo");
            entity.Property(e => e.IdTipoPublicoAlvo).HasColumnName("idTipoPublicoAlvo");
        });

        modelBuilder.Entity<TbPlaRotinaIntegracao>(entity =>
        {
            entity.HasKey(e => e.IdLogRotina);

            entity.ToTable("tbPlaRotinaIntegracao");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsResult)
                .IsUnicode(false)
                .HasColumnName("dsResult");
            entity.Property(e => e.DsRotina)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("dsRotina");
            entity.Property(e => e.DtGeracao)
                .HasColumnType("datetime")
                .HasColumnName("dtGeracao");
        });

        modelBuilder.Entity<TbPlaTiposAcao>(entity =>
        {
            entity.HasKey(e => e.IdTipoAcao);

            entity.ToTable("tbPlaTiposAcao");

            entity.Property(e => e.IdTipoAcao)
                .ValueGeneratedNever()
                .HasColumnName("idTipoAcao");
            entity.Property(e => e.CdInicio)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdInicio");
            entity.Property(e => e.DsTipoAcao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoAcao");
            entity.Property(e => e.TpAcao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpAcao");
        });

        modelBuilder.Entity<TbPlaTiposEscopo>(entity =>
        {
            entity.HasKey(e => e.IdTipoEscopo);

            entity.ToTable("tbPlaTiposEscopos");

            entity.Property(e => e.IdTipoEscopo)
                .ValueGeneratedNever()
                .HasColumnName("idTipoEscopo");
            entity.Property(e => e.DsTipoEscopo)
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("dsTipoEscopo");
        });

        modelBuilder.Entity<TbPlaTiposExecucaoAcao>(entity =>
        {
            entity.HasKey(e => e.IdTipoExecucaoAcao);

            entity.ToTable("tbPlaTiposExecucaoAcao");

            entity.Property(e => e.IdTipoExecucaoAcao)
                .ValueGeneratedNever()
                .HasColumnName("idTipoExecucaoAcao");
            entity.Property(e => e.DsTipoExecucaoAcao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoExecucaoAcao");
        });

        modelBuilder.Entity<TbPlaTiposIndicadore>(entity =>
        {
            entity.HasKey(e => e.IdTipoIndicador);

            entity.ToTable("tbPlaTiposIndicadores");

            entity.Property(e => e.IdTipoIndicador).HasColumnName("idTipoIndicador");
            entity.Property(e => e.CdTipoIndicador).HasColumnName("cdTipoIndicador");
            entity.Property(e => e.DsSiglaTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSiglaTipo");
            entity.Property(e => e.DsTipoIndicador)
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("dsTipoIndicador");
            entity.Property(e => e.IdNaturezasIndicador)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("idNaturezasIndicador");
        });

        modelBuilder.Entity<TbPlaTiposMovimento>(entity =>
        {
            entity.HasKey(e => e.IdTipoMovimento);

            entity.ToTable("tbPlaTiposMovimento");

            entity.Property(e => e.IdTipoMovimento)
                .ValueGeneratedNever()
                .HasColumnName("idTipoMovimento");
            entity.Property(e => e.DsTipoMovimento)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTipoMovimento");
        });

        modelBuilder.Entity<TbPlaTiposProjetoAtividade>(entity =>
        {
            entity.HasKey(e => e.IdTipoProjetoAtividade);

            entity.ToTable("tbPlaTiposProjetoAtividade");

            entity.Property(e => e.IdTipoProjetoAtividade)
                .ValueGeneratedNever()
                .HasColumnName("idTipoProjetoAtividade");
            entity.Property(e => e.CdInicio)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("cdInicio");
            entity.Property(e => e.CdTipoAcao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdTipoAcao");
            entity.Property(e => e.DsTipoProjetoAtividade)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTipoProjetoAtividade");
        });

        modelBuilder.Entity<TbPlaTiposPublicoAlvo>(entity =>
        {
            entity.HasKey(e => e.IdTipoPublicoAlvo).HasName("PK_tbPlaTipoPublicoAlvo");

            entity.ToTable("tbPlaTiposPublicoAlvo");

            entity.Property(e => e.IdTipoPublicoAlvo)
                .ValueGeneratedNever()
                .HasColumnName("idTipoPublicoAlvo");
            entity.Property(e => e.DsTipoPublicoAlvo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoPublicoAlvo");
        });

        modelBuilder.Entity<TbPlaUnidadesMedidasPadrao>(entity =>
        {
            entity.HasKey(e => e.IdUnidadeMedidaPadrao);

            entity.ToTable("tbPlaUnidadesMedidasPadrao");

            entity.Property(e => e.IdUnidadeMedidaPadrao).ValueGeneratedNever();
            entity.Property(e => e.DsUnidadeMedidaPadrao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsUnidadeMedidaPadrao");
        });

        modelBuilder.Entity<TbPlaUnidadesMedidum>(entity =>
        {
            entity.HasKey(e => e.IdUnidadeMedida);

            entity.ToTable("tbPlaUnidadesMedida");

            entity.Property(e => e.IdUnidadeMedida).HasColumnName("idUnidadeMedida");
            entity.Property(e => e.DsUnidadeMedida)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsUnidadeMedida");
            entity.Property(e => e.NrAnoLimite).HasColumnName("nrAnoLimite");

            entity.HasOne(d => d.IdUnidadeMedidaPadraoNavigation).WithMany(p => p.TbPlaUnidadesMedida)
                .HasForeignKey(d => d.IdUnidadeMedidaPadrao)
                .HasConstraintName("FK_tbPlaUnidadesMedida_tbPlaUnidadesMedidasPadrao");
        });

        modelBuilder.Entity<TbPlaVerso>(entity =>
        {
            entity.HasKey(e => e.IdVersao);

            entity.ToTable("tbPlaVersoes");

            entity.Property(e => e.IdVersao).HasColumnName("idVersao");
            entity.Property(e => e.DsListaOrgaosPermitidos)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsListaOrgaosPermitidos");
            entity.Property(e => e.DsLogImportacao)
                .IsUnicode(false)
                .HasColumnName("dsLogImportacao");
            entity.Property(e => e.DsStatus)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsStatus");
            entity.Property(e => e.DtFinalizacao)
                .HasColumnType("datetime")
                .HasColumnName("dtFinalizacao");
            entity.Property(e => e.DtPubLeiAto)
                .HasColumnType("datetime")
                .HasColumnName("dtPubLeiAto");
            entity.Property(e => e.IdEscopo).HasColumnName("idEscopo");
            entity.Property(e => e.IdLeiAto).HasColumnName("idLeiAto");
            entity.Property(e => e.NrAnoLeiAto).HasColumnName("nrAnoLeiAto");
            entity.Property(e => e.NrLeiAto).HasColumnName("nrLeiAto");
            entity.Property(e => e.NrVersao).HasColumnName("nrVersao");

            entity.HasOne(d => d.IdEscopoNavigation).WithMany(p => p.TbPlaVersos)
                .HasForeignKey(d => d.IdEscopo)
                .HasConstraintName("FK_tbPlaVersoes_tbPpaQuadrienios");
        });

        modelBuilder.Entity<TbPpaFontesOrgao>(entity =>
        {
            entity.HasKey(e => new { e.IdEmpresa, e.NrAno, e.CdOrgao, e.CdFonte });

            entity.ToTable("tbPpaFontesOrgao");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
        });

        modelBuilder.Entity<TbPpaIndicadore>(entity =>
        {
            entity.HasKey(e => new { e.IdEmpresa, e.NrAnoPpa, e.NrVersao, e.CdIndicador });

            entity.ToTable("tbPpaIndicadores");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAnoPpa, e.NrVersao, e.CdPrograma, e.CdOrgao, e.DsTpComando, e.IdPublicoAlvo, e.IdUnidadeMedida }, "IX_tbPpaIndicadores_IdEmpresa_nrAnoPPA_nrVersao_cdPrograma_cdOrgao_dsTpComando_IdPublicoAlvo_IdUnidadeMedida").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdPublicoAlvo, e.NrAnoPpa, e.NrVersao, e.CdPrograma, e.IdEmpresa }, "IX_tbPpaIndicadores_IdPublicoAlvo_nrAnoPPA_nrVersao_cdPrograma_IdEmpresa").HasFillFactor(90);

            entity.Property(e => e.NrAnoPpa).HasColumnName("nrAnoPPA");
            entity.Property(e => e.NrVersao).HasColumnName("nrVersao");
            entity.Property(e => e.CdIndicador).HasColumnName("cdIndicador");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdPrograma)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdPrograma");
            entity.Property(e => e.DsIndicador)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsIndicador");
            entity.Property(e => e.DsIndiceFinal)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsIndiceFinal");
            entity.Property(e => e.DsMedida)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsMedida");
            entity.Property(e => e.DsTpComando)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTpComando");
            entity.Property(e => e.DtBase)
                .HasColumnType("datetime")
                .HasColumnName("dtBase");
            entity.Property(e => e.IdTipoIndicador).HasColumnName("idTipoIndicador");

            entity.HasOne(d => d.IdPublicoAlvoNavigation).WithMany(p => p.TbPpaIndicadores)
                .HasForeignKey(d => d.IdPublicoAlvo)
                .HasConstraintName("FK_tbPpaIndicadores_tbPpaPublicosAlvo");

            entity.HasOne(d => d.IdUnidadeMedidaNavigation).WithMany(p => p.TbPpaIndicadores)
                .HasForeignKey(d => d.IdUnidadeMedida)
                .HasConstraintName("FK_tbPpaIndicadores_tbPpaUnidadeMedida");

            entity.HasOne(d => d.TbPpaPrograma).WithMany(p => p.TbPpaIndicadores)
                .HasForeignKey(d => new { d.IdEmpresa, d.NrAnoPpa, d.NrVersao, d.CdPrograma })
                .HasConstraintName("FK_tbPpaIndicadores_tbPpaProgramas");
        });

        modelBuilder.Entity<TbPpaPrograma>(entity =>
        {
            entity.HasKey(e => new { e.IdEmpresa, e.NrAnoPpa, e.NrVersao, e.CdPrograma }).HasName("PK_tbPpaProgramas_1");

            entity.ToTable("tbPpaProgramas");

            entity.Property(e => e.NrAnoPpa).HasColumnName("nrAnoPPA");
            entity.Property(e => e.NrVersao).HasColumnName("nrVersao");
            entity.Property(e => e.CdPrograma)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdPrograma");
            entity.Property(e => e.DsMotivoCancelamento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsMotivoCancelamento");
            entity.Property(e => e.DsObjetivo)
                .IsUnicode(false)
                .HasColumnName("dsObjetivo");
            entity.Property(e => e.DsPrograma)
                .IsUnicode(false)
                .HasColumnName("dsPrograma");
            entity.Property(e => e.DsResultadosEsperado)
                .IsUnicode(false)
                .HasColumnName("dsResultadosEsperado");
            entity.Property(e => e.DsTpComando)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTpComando");
            entity.Property(e => e.DtCancelamento)
                .HasColumnType("datetime")
                .HasColumnName("dtCancelamento");
            entity.Property(e => e.FlEfinalistico).HasColumnName("flEFinalistico");
            entity.Property(e => e.NmPrograma)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmPrograma");

            entity.HasOne(d => d.Nr).WithMany(p => p.TbPpaProgramas)
                .HasForeignKey(d => new { d.NrAnoPpa, d.NrVersao })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPpaProgramas_tbPpaVersoes");
        });

        modelBuilder.Entity<TbPpaProgramasAco>(entity =>
        {
            entity.HasKey(e => e.IdAcao).HasName("PK_tbPpaPlanejamentoAcoes");

            entity.ToTable("tbPpaProgramasAcoes");

            entity.HasIndex(e => new { e.CdAcao, e.DtCancelamento, e.DsTpComando }, "IX_tbPpaProgramasAcoes_cdAcao_dtCancelamento_dsTpComando");

            entity.HasIndex(e => new { e.CdOrgao, e.CdUnidade, e.CdPrograma, e.DsTpComando, e.IdAcao, e.NrAnoPpa, e.NrVersao, e.CdAcao, e.IdProjetoAtividade, e.IdUnidadeMedida }, "IX_tbPpaProgramasAcoes_cdOrgao_cdUnidade_cdPrograma_dsTpComando_IdAcao_nrAnoPPA_cdAcao_IdProjetoAtividade_IdUnidadeMedida").HasFillFactor(90);

            entity.HasIndex(e => new { e.CdOrgao, e.NrVersao, e.CdPrograma, e.NrAnoPpa, e.DsTpComando, e.CdUnidade, e.IdAcao, e.IdEmpresa }, "IX_tbPpaProgramasAcoes_cdOrgao_nrVersao_cdPrograma_nrAnoPPA_dsTpComando_cdUnidade_IdAcao_IdEmpresa").HasFillFactor(90);

            entity.HasIndex(e => new { e.NrAnoPpa, e.NrVersao, e.CdAcao }, "IX_tbPpaProgramasAcoes_nrAnoPPA_nrVersao_cdAcao").HasFillFactor(90);

            entity.HasIndex(e => new { e.NrAnoPpa, e.NrVersao, e.CdPrograma, e.DsTpComando, e.CdUnidade, e.CdOrgao }, "IX_tbPpaProgramasAcoes_nrAnoPPA_nrVersao_cdPrograma_dsTpComando_cdUnidade_cdOrgao").HasFillFactor(90);

            entity.HasIndex(e => new { e.NrAnoPpa, e.NrVersao, e.CdPrograma, e.DsTpComando, e.CdUnidade, e.CdOrgao, e.CdAcao }, "IX_tbPpaProgramasAcoes_nrAnoPPA_nrVersao_cdPrograma_dsTpComando_cdUnidade_cdOrgao_cdAcao").HasFillFactor(90);

            entity.HasIndex(e => new { e.NrVersao, e.CdPrograma, e.NrAnoPpa, e.DsTpComando, e.CdUnidade, e.CdOrgao }, "IX_tbPpaProgramasAcoes_nrVersao_cdPrograma_nrAnoPPA_dsTpComando_cdUnidade_cdOrgao").HasFillFactor(90);

            entity.Property(e => e.CdAcao)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdAcao");
            entity.Property(e => e.CdFuncao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFuncao");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdPrograma)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdPrograma");
            entity.Property(e => e.CdSubFuncao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdSubFuncao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsAcao)
                .IsUnicode(false)
                .HasColumnName("dsAcao");
            entity.Property(e => e.DsContinuaAnoAnterior)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsContinuaAnoAnterior");
            entity.Property(e => e.DsMotivoCancelamento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsMotivoCancelamento");
            entity.Property(e => e.DsProduto)
                .IsUnicode(false)
                .HasColumnName("dsProduto");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipo");
            entity.Property(e => e.DsTipoAcao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoAcao");
            entity.Property(e => e.DsTpComando)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTpComando");
            entity.Property(e => e.DtCancelamento)
                .HasColumnType("datetime")
                .HasColumnName("dtCancelamento");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.NrAnoPpa).HasColumnName("nrAnoPPA");
            entity.Property(e => e.NrVersao).HasColumnName("nrVersao");

            entity.HasOne(d => d.IdProjetoAtividadeNavigation).WithMany(p => p.TbPpaProgramasAcos)
                .HasForeignKey(d => d.IdProjetoAtividade)
                .HasConstraintName("FK_tbPpaProgramasAcoes_tbPpaProjetosAtividades");

            entity.HasOne(d => d.IdUnidadeMedidaNavigation).WithMany(p => p.TbPpaProgramasAcos)
                .HasForeignKey(d => d.IdUnidadeMedida)
                .HasConstraintName("FK_tbPpaProgramasAcoes_tbPpaUnidadesMedida");

            entity.HasOne(d => d.TbPpaPrograma).WithMany(p => p.TbPpaProgramasAcos)
                .HasForeignKey(d => new { d.IdEmpresa, d.NrAnoPpa, d.NrVersao, d.CdPrograma })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPpaPlanejamentoAcoes_tbPpaProgramas");
        });

        modelBuilder.Entity<TbPpaProgramasAcoesMeta>(entity =>
        {
            entity.HasKey(e => new { e.IdAcao, e.NrAno });

            entity.ToTable("tbPpaProgramasAcoesMetas");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.DsJustificativa)
                .HasMaxLength(255)
                .HasColumnName("dsJustificativa");
            entity.Property(e => e.NrMetaFisica)
                .HasColumnType("decimal(16, 2)")
                .HasColumnName("nrMetaFisica");
            entity.Property(e => e.VlEstimadoOrdinario)
                .HasColumnType("money")
                .HasColumnName("vlEstimadoOrdinario");
            entity.Property(e => e.VlEstimadoVinculado)
                .HasColumnType("money")
                .HasColumnName("vlEstimadoVinculado");

            entity.HasOne(d => d.IdAcaoNavigation).WithMany(p => p.TbPpaProgramasAcoesMeta)
                .HasForeignKey(d => d.IdAcao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPpaProgramasAcoesMetas_tbPpaProgramasAcoes");
        });

        modelBuilder.Entity<TbPpaProgramasAcoesMetasFonte>(entity =>
        {
            entity.HasKey(e => new { e.IdAcao, e.NrAno, e.CdFonte });

            entity.ToTable("tbPpaProgramasAcoesMetasFontes");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.VlEstimado)
                .HasColumnType("money")
                .HasColumnName("vlEstimado");
        });

        modelBuilder.Entity<TbPpaProgramasObjetivo>(entity =>
        {
            entity.HasKey(e => e.IdObjetivo);

            entity.ToTable("tbPpaProgramasObjetivos");

            entity.HasIndex(e => new { e.NrVersao, e.IdEmpresa, e.NrAno, e.CdOrgao, e.CdPrograma, e.CdUnidade }, "IX_tbPpaProgramasObjetivos_nrVersao_IdEmpresa_nrAno_cdOrgao_cdPrograma_cdUnidade").HasFillFactor(90);

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdPrograma)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdPrograma");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObjetivo)
                .IsUnicode(false)
                .HasColumnName("dsObjetivo");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrVersao).HasColumnName("nrVersao");

            entity.HasOne(d => d.TbPpaPrograma).WithMany(p => p.TbPpaProgramasObjetivos)
                .HasForeignKey(d => new { d.IdEmpresa, d.NrAno, d.NrVersao, d.CdPrograma })
                .HasConstraintName("FK_tbPpaProgramasObjetivos_tbPpaProgramas");
        });

        modelBuilder.Entity<TbPpaProgramasPermissoesOrgao>(entity =>
        {
            entity.HasKey(e => e.IdPermisao);

            entity.ToTable("tbPpaProgramasPermissoesOrgao");

            entity.Property(e => e.IdPermisao).HasColumnName("idPermisao");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdPrograma)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdPrograma");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrAnoPpa).HasColumnName("nrAnoPpa");
            entity.Property(e => e.NrVersao).HasColumnName("nrVersao");

            entity.HasOne(d => d.TbPpaPrograma).WithMany(p => p.TbPpaProgramasPermissoesOrgaos)
                .HasForeignKey(d => new { d.IdEmpresa, d.NrAnoPpa, d.NrVersao, d.CdPrograma })
                .HasConstraintName("FK_tbPpaProgramasPermissoesOrgao_tbPpaProgramas");
        });

        modelBuilder.Entity<TbPpaProjecoesReceita>(entity =>
        {
            entity.HasKey(e => new { e.IdReceita, e.NrAnoLdo, e.NrVersao }).HasName("PK_tbPpaProjecoesReceitas_1");

            entity.ToTable("tbPpaProjecoesReceitas");

            entity.Property(e => e.NrAnoLdo).HasColumnName("nrAnoLDO");
            entity.Property(e => e.NrVersao).HasColumnName("nrVersao");
            entity.Property(e => e.DsTpComando)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTpComando");
            entity.Property(e => e.VlEstimado)
                .HasColumnType("money")
                .HasColumnName("vlEstimado");

            entity.HasOne(d => d.IdReceitaNavigation).WithMany(p => p.TbPpaProjecoesReceita)
                .HasForeignKey(d => d.IdReceita)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbPpaProjecoesReceitas_tbOrcReceitas");
        });

        modelBuilder.Entity<TbPpaProjetosAtividade>(entity =>
        {
            entity.HasKey(e => e.IdProjetoAtividade);

            entity.ToTable("tbPpaProjetosAtividades");

            entity.HasIndex(e => new { e.IdEmpresa, e.IdProjetoAtividade, e.NrAno, e.NrVersao }, "IX_tbPpaProjetosAtividades_IdEmpresa_IdProjetoAtividade_nrAno_nrVersao").HasFillFactor(90);

            entity.HasIndex(e => e.CdProjetoAtividade, "IX_tbPpaProjetosAtividades_cdProjetoAtividade");

            entity.Property(e => e.CdFuncao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFuncao");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdPrograma)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdPrograma");
            entity.Property(e => e.CdProjetoAtividade)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdProjetoAtividade");
            entity.Property(e => e.CdSubFuncao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdSubFuncao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsProjetoAtividade)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsProjetoAtividade");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrVersao).HasColumnName("nrVersao");
        });

        modelBuilder.Entity<TbPpaPublicosAlvo>(entity =>
        {
            entity.HasKey(e => e.IdPublicoAlvo);

            entity.ToTable("tbPpaPublicosAlvo");

            entity.Property(e => e.DsPublicoAlvo)
                .IsUnicode(false)
                .HasColumnName("dsPublicoAlvo");
        });

        modelBuilder.Entity<TbPpaTiposIndicadore>(entity =>
        {
            entity.HasKey(e => e.IdTipoIndicador);

            entity.ToTable("tbPpaTiposIndicadores");

            entity.Property(e => e.IdTipoIndicador).HasColumnName("idTipoIndicador");
            entity.Property(e => e.CdTipoIndicador).HasColumnName("cdTipoIndicador");
            entity.Property(e => e.DsSiglaTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSiglaTipo");
            entity.Property(e => e.DsTipoIndicador)
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("dsTipoIndicador");
        });

        modelBuilder.Entity<TbPpaUnidadesMedidum>(entity =>
        {
            entity.HasKey(e => e.IdUnidadeMedida);

            entity.ToTable("tbPpaUnidadesMedida");

            entity.Property(e => e.DsUnidadeMedida)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsUnidadeMedida");
        });

        modelBuilder.Entity<TbPpaVerso>(entity =>
        {
            entity.HasKey(e => new { e.NrAnoPpa, e.NrVersao });

            entity.ToTable("tbPpaVersoes");

            entity.Property(e => e.NrAnoPpa).HasColumnName("nrAnoPPA");
            entity.Property(e => e.NrVersao).HasColumnName("nrVersao");
            entity.Property(e => e.DsListaOrgaosPermitidos)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsListaOrgaosPermitidos");
            entity.Property(e => e.DsStatus)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsStatus");
            entity.Property(e => e.DtFinalizacao)
                .HasColumnType("datetime")
                .HasColumnName("dtFinalizacao");
            entity.Property(e => e.DtPubLeiLdo)
                .HasColumnType("datetime")
                .HasColumnName("dtPubLeiLDO");
            entity.Property(e => e.DtPubLeiPpa)
                .HasColumnType("datetime")
                .HasColumnName("dtPubLeiPPA");
            entity.Property(e => e.NrAnoLeiLdo).HasColumnName("nrAnoLeiLDO");
            entity.Property(e => e.NrAnoLeiPpa).HasColumnName("nrAnoLeiPPA");
            entity.Property(e => e.NrLeiLdo).HasColumnName("nrLeiLDO");
            entity.Property(e => e.NrLeiPpa).HasColumnName("nrLeiPPA");
        });

        modelBuilder.Entity<TbRecDiarioArrecadacao>(entity =>
        {
            entity.HasKey(e => e.IdLctoDiario);

            entity.ToTable("tbRecDiarioArrecadacao");

            entity.HasIndex(e => new { e.DtLancamentoContabil, e.DtLancamento, e.IdEmpresa }, "IX_tbRecDiarioArrecadacao").HasFillFactor(90);

            entity.HasIndex(e => e.CdReceita, "IX_tbRecDiarioArrecadacao_cdReceita").HasFillFactor(90);

            entity.HasIndex(e => new { e.CdReceita, e.FlExcluido, e.TpOperacao, e.IdEmpresa }, "IX_tbRecDiarioArrecadacao_cdReceita_flExcluido_tpOperacao_idEmpresa").HasFillFactor(90);

            entity.HasIndex(e => new { e.CdReceita, e.IdEmpresa, e.TpOperacao, e.FlExcluido }, "IX_tbRecDiarioArrecadacao_cdReceita_idEmpresa_tpOperacao_flExcluido").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.CdReceita }, "IX_tbRecDiarioArrecadacao_idEmpresa_cdReceita").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.CdReceita, e.DtLancamento, e.NrDocumento }, "IX_tbRecDiarioArrecadacao_idEmpresa_cdReceita_dtLancamento_nrDocumento").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.DtLancamento, e.CdReceita, e.NrDocumento }, "IX_tbRecDiarioArrecadacao_idEmpresa_dtLancamento_cdReceita_nrDocumento").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.FlExcluido }, "IX_tbRecDiarioArrecadacao_idEmpresa_flExcluido_inc");

            entity.HasIndex(e => new { e.NrAno, e.IdEmpresa, e.CdReceita, e.NrOrdem }, "IX_tbRecDiarioArrecadacao_nrAno_idEmpresa_cdReceita_nrOrdem_inc_tpOperacao");

            entity.HasIndex(e => new { e.NrAno, e.IdEmpresa, e.DtLancamento }, "IX_tbRecDiarioArrecadacao_nrAno_idEmpresa_dtLancamento_inc_nrOrdem");

            entity.HasIndex(e => new { e.NrAno, e.IdEmpresa, e.FlExcluido, e.NrMes }, "IX_tbRecDiarioArrecadacao_nrAno_idEmpresa_flExcluido_inc_nrOrdem");

            entity.HasIndex(e => new { e.NrAno, e.IdEmpresa, e.FlExcluido, e.NrMes }, "IX_tbRecDiarioArrecadacao_nrAno_idEmpresa_flExcluido_nrMes_inc_IdLctoDiario_dtLanc_dtLancCont");

            entity.HasIndex(e => new { e.NrDocumento, e.DtLancamento, e.IdEmpresa, e.CdReceita }, "IX_tbRecDiarioArrecadacao_nrDocumento_dtLancamento_idEmpresa_cdReceita").HasFillFactor(90);

            entity.HasIndex(e => new { e.NrMes, e.NrAno, e.IdEmpresa, e.NrOrdem }, "IX_tbRecDiarioArrecadacao_nrMes_nrAno_idEmpresa_nrOrdem");

            entity.HasIndex(e => new { e.TpOperacao, e.IdEmpresa, e.CdReceita, e.FlExcluido }, "IX_tbRecDiarioArrecadacao_tpOperacao_idEmpresa_cdReceita_flExcluido").HasFillFactor(90);

            entity.HasIndex(e => new { e.FlExcluido, e.TpOperacao, e.IdEmpresa, e.CdReceita, e.IdLctoDiario, e.NrAno, e.DtLancamento }, "IX_tbRecDiarioArrecadacao_vlLancamento").HasFillFactor(90);

            entity.Property(e => e.CdReceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.DsHistorico)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtExclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtExclusao");
            entity.Property(e => e.DtLancamento)
                .HasColumnType("datetime")
                .HasColumnName("dtLancamento");
            entity.Property(e => e.DtLancamentoContabil)
                .HasColumnType("datetime")
                .HasColumnName("dtLancamentoContabil");
            entity.Property(e => e.FlExcluido)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flExcluido");
            entity.Property(e => e.IdCredito).HasColumnName("idCredito");
            entity.Property(e => e.IdEmpresa).HasColumnName("idEmpresa");
            entity.Property(e => e.IdTipoArrecadacao).HasColumnName("idTipoArrecadacao");
            entity.Property(e => e.IdTipoOrigemReceita).HasColumnName("idTipoOrigemReceita");
            entity.Property(e => e.NmContribuinte)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmContribuinte");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrBimestre).HasColumnName("nrBimestre");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.NrOrdem).HasColumnName("nrOrdem");
            entity.Property(e => e.TpDocumento)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpDocumento");
            entity.Property(e => e.TpOperacao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpOperacao");
            entity.Property(e => e.VlLancamento)
                .HasColumnType("money")
                .HasColumnName("vlLancamento");
        });

        modelBuilder.Entity<TbRecDiarioArrecadacaoEstorno>(entity =>
        {
            entity.HasKey(e => e.IdEstorno);

            entity.ToTable("tbRecDiarioArrecadacaoEstornos");

            entity.Property(e => e.DsEstorno)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsEstorno");
            entity.Property(e => e.DtEstorno)
                .HasColumnType("datetime")
                .HasColumnName("dtEstorno");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrAnoOrigem).HasColumnName("nrAnoOrigem");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.NrSequenciaOrigem).HasColumnName("nrSequenciaOrigem");
            entity.Property(e => e.VlEstorno)
                .HasColumnType("money")
                .HasColumnName("vlEstorno");
        });

        modelBuilder.Entity<TbRecIndicesDeflatore>(entity =>
        {
            entity.HasKey(e => e.IdIndice);

            entity.ToTable("tbRecIndicesDeflatores");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlDeflator)
                .HasColumnType("decimal(8, 6)")
                .HasColumnName("vlDeflator");
            entity.Property(e => e.VlInflacaoIbge)
                .HasColumnType("decimal(8, 6)")
                .HasColumnName("vlInflacaoIBGE");
        });

        modelBuilder.Entity<TbRecMovimentoReceita>(entity =>
        {
            entity.HasKey(e => e.IdMovReceita);

            entity.ToTable("tbRecMovimentoReceitas");

            entity.HasIndex(e => new { e.IdContaContabil, e.IdEmpresa, e.DtLancamento }, "IX_IdContaContabil_IdEmpresa_dtLancamento")
                .IsDescending(false, false, true)
                .HasFillFactor(90);

            entity.HasIndex(e => e.IdEmpresa, "IX_IdEmpresa").HasFillFactor(90);

            entity.HasIndex(e => new { e.DsTipoOperacao, e.DtLancamento, e.IdMovReceita }, "IX_dsTipoOperacao_dtLancamento_IdMovReceita").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.DtLancamento, e.CdOrgao, e.CdUnidade, e.IdContaContabil }, "IX_tbRecMovimentoReceitas").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.CdOrgao, e.CdUnidade }, "IX_tbRecMovimentoReceitas_IdEmpresa_cdOrgao_cdUnidade_inc_IdMovReceita_dtLancamento");

            entity.HasIndex(e => new { e.IdEmpresa, e.CdOrgao }, "IX_tbRecMovimentoReceitas_IdEmpresa_cdOrgao_inc_IdMovReceita_dtLancamento");

            entity.HasIndex(e => new { e.IdEmpresa, e.DsTipoOperacao }, "IX_tbRecMovimentoReceitas_IdEmpresa_dsTipoOperacao_inc_IdMovRec_dtLanc_IdCC");

            entity.HasIndex(e => new { e.IdEmpresa, e.DtLancamento, e.IdMovReceita, e.IdRecurso, e.DsTipoOperacao, e.DsHistoricoMovimento }, "IX_tbRecMovimentoReceitas_IdEmpresa_dtLancamento_IdMovReceita_IdRecurso_dsTipoOperacao_dsHistoricoMovimento").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdEmpresa, e.VlLancado }, "IX_tbRecMovimentoReceitas_IdEmpresa_vlLancado_inc_dtLancamento");

            entity.HasIndex(e => new { e.IdMovReceita, e.DtLancamento, e.CdOrgao, e.CdUnidade, e.IdRecurso }, "IX_tbRecMovimentoReceitas_IdMovReceita_dtLancamento_cdOrgao_cdUnidade_IdRecurso");

            entity.HasIndex(e => e.IdRecurso, "IX_tbRecMovimentoReceitas_IdRecurso_inc");

            entity.HasIndex(e => e.DsTipoOperacao, "IX_tbRecMovimentoReceitas_dsTipoOperacao");

            entity.HasIndex(e => new { e.DsTipoOperacao, e.IdPagamentoExtra }, "IX_tbRecMovimentoReceitas_dsTipoOperacao_IdPagamentoExtra");

            entity.HasIndex(e => e.DtLancamento, "IX_tbRecMovimentoReceitas_dtLancamento").HasFillFactor(90);

            entity.HasIndex(e => new { e.DtLancamento, e.IdMovReceita }, "IX_tbRecMovimentoReceitas_dtLancamento_IdMovReceita").HasFillFactor(90);

            entity.HasIndex(e => e.DtLancamento, "IX_tbRecMovimentoReceitas_dtLancamento_IdMovReceita_cdOrgao");

            entity.HasIndex(e => new { e.DtLancamento, e.IdMovReceita }, "IX_tbRecMovimentoReceitas_dtLancamento_IdMovReceita_dsTipoOperacao");

            entity.HasIndex(e => new { e.DtLancamento, e.CdOrgao, e.CdUnidade, e.IdRecurso, e.IdMovReceita }, "IX_tbRecMovimentoReceitas_dtLancamento_cdOrgao_cdUnidade_IdRecurso_IdMovReceita");

            entity.HasIndex(e => new { e.DtLancamento, e.DsTipoOperacao }, "IX_tbRecMovimentoReceitas_dtLancamento_dsTipoOperacao").HasFillFactor(90);

            entity.HasIndex(e => new { e.DtLancamento, e.DsTipoOperacao, e.IdMovReceita }, "IX_tbRecMovimentoReceitas_dtLancamento_dsTipoOperacao_IdMovReceita").HasFillFactor(90);

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsHistoricoMovimento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsHistoricoMovimento");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsTipoOperacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoOperacao");
            entity.Property(e => e.DtDoctoPagamento)
                .HasColumnType("datetime")
                .HasColumnName("dtDoctoPagamento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtLancamento)
                .HasColumnType("datetime")
                .HasColumnName("dtLancamento");
            entity.Property(e => e.IdBanco)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("idBanco");
            entity.Property(e => e.IdConvenio).HasColumnName("idConvenio");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.VlLancado)
                .HasColumnType("money")
                .HasColumnName("vlLancado");

            entity.HasOne(d => d.IdContaContabilNavigation).WithMany(p => p.TbRecMovimentoReceita)
                .HasForeignKey(d => d.IdContaContabil)
                .HasConstraintName("FK_tbRecMovimentoReceitas_tbFinContasContabeis");

            entity.HasOne(d => d.IdEmpresaNavigation).WithMany(p => p.TbRecMovimentoReceita)
                .HasForeignKey(d => d.IdEmpresa)
                .HasConstraintName("FK_tbRecMovimentoReceitas_tbGerEmpresasGoverno");

            entity.HasOne(d => d.IdRecursoNavigation).WithMany(p => p.TbRecMovimentoReceita)
                .HasForeignKey(d => d.IdRecurso)
                .HasConstraintName("FK_tbRecMovimentoReceitas_tbCapRecursos");

            entity.HasOne(d => d.IdTipoDocFinanceiroNavigation).WithMany(p => p.TbRecMovimentoReceita)
                .HasForeignKey(d => d.IdTipoDocFinanceiro)
                .HasConstraintName("FK_tbRecMovimentoReceitas_tbFinTiposDocumentoFinanceiro");
        });

        modelBuilder.Entity<TbRecMovimentoReceitasAporte>(entity =>
        {
            entity.HasKey(e => e.IdAporte);

            entity.ToTable("tbRecMovimentoReceitasAportes");

            entity.Property(e => e.VlCambio)
                .HasColumnType("money")
                .HasColumnName("vlCambio");
            entity.Property(e => e.VlDolares)
                .HasColumnType("money")
                .HasColumnName("vlDolares");

            entity.HasOne(d => d.IdMovReceitaNavigation).WithMany(p => p.TbRecMovimentoReceitasAportes)
                .HasForeignKey(d => d.IdMovReceita)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbRecMovimentoReceitasAportes_tbRecMovimentoReceitas");
        });

        modelBuilder.Entity<TbRecMovimentoReceitasDetalhe>(entity =>
        {
            entity.HasKey(e => e.IdDetalheMovReceita);

            entity.ToTable("tbRecMovimentoReceitasDetalhe");

            entity.HasIndex(e => new { e.IdMovReceita, e.IdPessoa, e.IdReceita, e.IdDetalheMovReceita }, "IX_IdMovReceita_IdPessoa_IdReceita").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdMovReceita, e.IdReceita }, "IX_IdMovReceita_IdReceita").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdDetalheMovReceita, e.IdMovReceita }, "IX_tbRecMovimentoReceitasDetalhe_IdDetalheMovReceita_IdMovReceita");

            entity.HasIndex(e => new { e.IdMovReceita, e.IdDetalheMovReceita, e.IdReceita, e.IdPessoa }, "IX_tbRecMovimentoReceitasDetalhe_IdMovReceita_IdDetalheMovReceita_IdReceita_IdPessoa").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdMovReceita, e.IdDetalheMovReceita, e.IdTipoOperacaoReceita, e.IdReceita }, "IX_tbRecMovimentoReceitasDetalhe_IdMovReceita_IdDetalheMovReceita_IdTipoOperacaoReceita_IdReceita");

            entity.HasIndex(e => new { e.IdMovReceita, e.IdReceita }, "IX_tbRecMovimentoReceitasDetalhe_IdMovReceita_IdReceita").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdReceita, e.IdMovReceita }, "IX_tbRecMovimentoReceitasDetalhe_IdReceita_IdMovReceita").HasFillFactor(90);

            entity.HasIndex(e => e.IdReceita, "IX_tbRecMovimentoReceitasDetalhe_IdReceita_vlLancado");

            entity.HasIndex(e => new { e.IdTipoOperacaoReceita, e.IdReceita, e.IdMovReceita, e.IdDetalheMovReceita }, "IX_tbRecMovimentoReceitasDetalhe_IdTipoOperacaoReceita_IdReceita_IdMovReceita_IdDetalheMovReceita");

            entity.Property(e => e.IdDetalheMovReceita).HasComment("Código para identificar exclusivamente o registro.");
            entity.Property(e => e.DsHistoricoDetalhe)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsHistoricoDetalhe");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlRestoReceber)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flRestoReceber");
            entity.Property(e => e.IdPessoa).HasComment("Contribuinte ou Entidade que fez o repasse.");
            entity.Property(e => e.VlLancado)
                .HasColumnType("money")
                .HasColumnName("vlLancado");

            entity.HasOne(d => d.IdMovReceitaNavigation).WithMany(p => p.TbRecMovimentoReceitasDetalhes)
                .HasForeignKey(d => d.IdMovReceita)
                .HasConstraintName("FK_tbRecMovimentoReceitasDetalhe_tbRecMovimentoReceitas");

            entity.HasOne(d => d.IdReceitaNavigation).WithMany(p => p.TbRecMovimentoReceitasDetalhes)
                .HasForeignKey(d => d.IdReceita)
                .HasConstraintName("FK_tbRecMovimentoReceitasDetalhe_tbOrcReceitas");
        });

        modelBuilder.Entity<TbRecMovimentoReceitasDetalheDesmembra>(entity =>
        {
            entity.HasKey(e => new { e.IdDetalheMovReceita, e.IdFonte }).HasName("PK_tbRecMovimentoReceitaDetalhesDesmembra");

            entity.ToTable("tbRecMovimentoReceitasDetalheDesmembra");

            entity.HasIndex(e => e.IdDetalheMovReceita, "IX_IdDetalheMovReceita").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdFonte, e.IdDetalheMovReceita }, "IX_IdFonte_IdDetalheMovReceita").HasFillFactor(90);

            entity.HasIndex(e => e.IdFonte, "IX_tbRecMovimentoReceitasDetalheDesmembra_IdFonte_inc_IdDetalheMovReceita_vlLancado");

            entity.Property(e => e.IdDetalheMovReceita).HasComment("Código para identificar exclusivamente o registro.");
            entity.Property(e => e.CdContaContabilDisponivel)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilDisponivel");
            entity.Property(e => e.VlLancado)
                .HasColumnType("money")
                .HasColumnName("vlLancado");
            entity.Property(e => e.VlPercentual)
                .HasColumnType("money")
                .HasColumnName("vlPercentual");

            entity.HasOne(d => d.IdDetalheMovReceitaNavigation).WithMany(p => p.TbRecMovimentoReceitasDetalheDesmembras)
                .HasForeignKey(d => d.IdDetalheMovReceita)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbRecMovimentoReceitaDetalhesDesmembra_tbRecMovimentoReceitasDetalhe");

            entity.HasOne(d => d.IdFonteNavigation).WithMany(p => p.TbRecMovimentoReceitasDetalheDesmembras)
                .HasForeignKey(d => d.IdFonte)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbRecMovimentoReceitaDetalhesDesmembra_tbOrcFontes");
        });

        modelBuilder.Entity<TbRecMovimentoReceitasRepass>(entity =>
        {
            entity.HasKey(e => e.IdMovReceita);

            entity.ToTable("tbRecMovimentoReceitasRepasses");

            entity.Property(e => e.IdMovReceita).ValueGeneratedNever();
            entity.Property(e => e.DtEmpenhoEstado)
                .HasColumnType("datetime")
                .HasColumnName("dtEmpenhoEstado");
            entity.Property(e => e.DtLiquidacaoEstado)
                .HasColumnType("datetime")
                .HasColumnName("dtLiquidacaoEstado");
            entity.Property(e => e.NrEmpenhoEstado).HasColumnName("nrEmpenhoEstado");
            entity.Property(e => e.NrLiquidacaoEstado).HasColumnName("nrLiquidacaoEstado");
            entity.Property(e => e.VlEmpenhoEstado)
                .HasColumnType("money")
                .HasColumnName("vlEmpenhoEstado");
            entity.Property(e => e.VlLiquidacaoEstado)
                .HasColumnType("money")
                .HasColumnName("vlLiquidacaoEstado");

            entity.HasOne(d => d.IdMovReceitaNavigation).WithOne(p => p.TbRecMovimentoReceitasRepass)
                .HasForeignKey<TbRecMovimentoReceitasRepass>(d => d.IdMovReceita)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbRecMovimentoReceitasRepasses_tbRecMovimentoReceitas");
        });

        modelBuilder.Entity<TbRecReceitasBaixaOrcamentarium>(entity =>
        {
            entity.HasKey(e => e.IdReceitaEmpenho);

            entity.ToTable("tbRecReceitasBaixaOrcamentaria");

            entity.Property(e => e.CdContaContabilDisponivel)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilDisponivel");
            entity.Property(e => e.CdNatDespesa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdNatDespesa");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdReceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsTipoEmpresa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoEmpresa");
            entity.Property(e => e.IdCcfavorecido).HasColumnName("IdCCFavorecido");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<TbRecReceitasContaContabil>(entity =>
        {
            entity.HasKey(e => e.IdReceitaContaContabil);

            entity.ToTable("tbRecReceitasContaContabil");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdContaContabilDisponivel)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilDisponivel");
            entity.Property(e => e.CdContaContabilReceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilReceita");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdReceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.TpEntrada)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpEntrada");
        });

        modelBuilder.Entity<TbRecRegrasDiarioArrecadacao>(entity =>
        {
            entity.HasKey(e => e.IdRegra);

            entity.ToTable("tbRecRegrasDiarioArrecadacao");

            entity.Property(e => e.IdRegra).ValueGeneratedNever();
            entity.Property(e => e.DsRegra)
                .IsUnicode(false)
                .HasColumnName("dsRegra");
        });

        modelBuilder.Entity<TbRecRegrasDiarioArrecadacaoConta>(entity =>
        {
            entity.HasKey(e => e.IdConfig);

            entity.ToTable("tbRecRegrasDiarioArrecadacaoContas");

            entity.Property(e => e.IdConfig).ValueGeneratedNever();
            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.IdRegra).HasColumnName("idRegra");
        });

        modelBuilder.Entity<TbRecRegrasDiarioArrecadacaoReceita>(entity =>
        {
            entity.HasKey(e => e.IdConfig);

            entity.ToTable("tbRecRegrasDiarioArrecadacaoReceitas");

            entity.Property(e => e.CdReceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.IdRegra).HasColumnName("idRegra");
        });

        modelBuilder.Entity<TbRelBalanco>(entity =>
        {
            entity.HasKey(e => e.IdRelatorio);

            entity.ToTable("tbRelBalancos");

            entity.Property(e => e.IdRelatorio).ValueGeneratedNever();
            entity.Property(e => e.DsAnexo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsAnexo");
            entity.Property(e => e.DsFonte)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsFonte");
            entity.Property(e => e.DsFormatacaoPeriodo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsFormatacaoPeriodo");
            entity.Property(e => e.DsMoedaReferencia)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsMoedaReferencia");
            entity.Property(e => e.DsNotas)
                .IsUnicode(false)
                .HasColumnName("dsNotas");
            entity.Property(e => e.DsRelatorio)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsRelatorio");
        });

        modelBuilder.Entity<TbRelBalancosDetalhe>(entity =>
        {
            entity.HasKey(e => e.IdDetalhe);

            entity.ToTable("tbRelBalancosDetalhes");

            entity.HasIndex(e => new { e.IdRelatorio, e.IdDetalhe, e.Sequencia }, "IX_IdRelatorio_IdDetalhe_Sequencia").HasFillFactor(90);

            entity.HasIndex(e => new { e.CdCodigo, e.DsTipoSecao, e.DsTituloDetalhe }, "IX_tbRelBalancosDetalhes").HasFillFactor(90);

            entity.HasIndex(e => new { e.IdRelatorio, e.DsTipoSecao, e.IdDetalhe, e.Sequencia, e.DsTituloDetalhe, e.IdDetalheReferencia }, "_dta_index_tbRelBalancosDetalhes_8_866922260__K2_K5_K1_K3_K4_K7_6");

            entity.Property(e => e.IdDetalhe).ValueGeneratedNever();
            entity.Property(e => e.CdCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cdCodigo");
            entity.Property(e => e.DsTipoSecao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoSecao");
            entity.Property(e => e.DsTituloDetalhe)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsTituloDetalhe");

            entity.HasOne(d => d.IdRelatorioNavigation).WithMany(p => p.TbRelBalancosDetalhes)
                .HasForeignKey(d => d.IdRelatorio)
                .HasConstraintName("FK_tbRelBalancosDetalhes_tbRelBalancos");
        });

        modelBuilder.Entity<TbRelBalancosDetalhestemp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbRelBalancosDetalhestemp");

            entity.Property(e => e.CdCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cdCodigo");
            entity.Property(e => e.DsTipoSecao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoSecao");
            entity.Property(e => e.DsTituloDetalhe)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsTituloDetalhe");

            entity.HasOne(d => d.IdRelatorioNavigation).WithMany()
                .HasForeignKey(d => d.IdRelatorio)
                .HasConstraintName("FK_tbRelBalancosDetalhesTemp_tbRelBalancos");
        });

        modelBuilder.Entity<TbRelControlesSaldo>(entity =>
        {
            entity.HasKey(e => new { e.IdEmpresa, e.NrAno, e.NrMes, e.TpSaldo });

            entity.ToTable("tbRelControlesSaldos");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.TpSaldo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpSaldo");
            entity.Property(e => e.FlAtualizado).HasColumnName("flAtualizado");
        });

        modelBuilder.Entity<TbRelDetalhesIndex>(entity =>
        {
            entity.HasKey(e => e.IdIndice);

            entity.ToTable("tbRelDetalhesIndices");

            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlQuociente)
                .HasColumnType("money")
                .HasColumnName("vlQuociente");
        });

        modelBuilder.Entity<TbRelExecucaoRcl>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbRelExecucaoRCL");

            entity.Property(e => e.DsTituloDetalhe)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsTituloDetalhe");
            entity.Property(e => e.Mr1)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("MR1");
            entity.Property(e => e.Mr10)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("MR10");
            entity.Property(e => e.Mr11)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("MR11");
            entity.Property(e => e.Mr2)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("MR2");
            entity.Property(e => e.Mr3)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("MR3");
            entity.Property(e => e.Mr4)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("MR4");
            entity.Property(e => e.Mr5)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("MR5");
            entity.Property(e => e.Mr6)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("MR6");
            entity.Property(e => e.Mr7)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("MR7");
            entity.Property(e => e.Mr8)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("MR8");
            entity.Property(e => e.Mr9)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("MR9");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlArrecadadoNoMes)
                .HasColumnType("money")
                .HasColumnName("vlArrecadadoNoMes");
            entity.Property(e => e.VlArrecadadoNoMes1)
                .HasColumnType("money")
                .HasColumnName("vlArrecadadoNoMes1");
            entity.Property(e => e.VlArrecadadoNoMes10)
                .HasColumnType("money")
                .HasColumnName("vlArrecadadoNoMes10");
            entity.Property(e => e.VlArrecadadoNoMes11)
                .HasColumnType("money")
                .HasColumnName("vlArrecadadoNoMes11");
            entity.Property(e => e.VlArrecadadoNoMes2)
                .HasColumnType("money")
                .HasColumnName("vlArrecadadoNoMes2");
            entity.Property(e => e.VlArrecadadoNoMes3)
                .HasColumnType("money")
                .HasColumnName("vlArrecadadoNoMes3");
            entity.Property(e => e.VlArrecadadoNoMes4)
                .HasColumnType("money")
                .HasColumnName("vlArrecadadoNoMes4");
            entity.Property(e => e.VlArrecadadoNoMes5)
                .HasColumnType("money")
                .HasColumnName("vlArrecadadoNoMes5");
            entity.Property(e => e.VlArrecadadoNoMes6)
                .HasColumnType("money")
                .HasColumnName("vlArrecadadoNoMes6");
            entity.Property(e => e.VlArrecadadoNoMes7)
                .HasColumnType("money")
                .HasColumnName("vlArrecadadoNoMes7");
            entity.Property(e => e.VlArrecadadoNoMes8)
                .HasColumnType("money")
                .HasColumnName("vlArrecadadoNoMes8");
            entity.Property(e => e.VlArrecadadoNoMes9)
                .HasColumnType("money")
                .HasColumnName("vlArrecadadoNoMes9");
            entity.Property(e => e.VlArrecadadoUltimos12Meses)
                .HasColumnType("money")
                .HasColumnName("vlArrecadadoUltimos12Meses");
            entity.Property(e => e.VlAtualizado)
                .HasColumnType("money")
                .HasColumnName("vlAtualizado");
        });

        modelBuilder.Entity<TbRelExecucoesRelatorio>(entity =>
        {
            entity.HasKey(e => e.IdExecucao);

            entity.ToTable("tbRelExecucoesRelatorios");

            entity.Property(e => e.IdExecucao).HasColumnName("idExecucao");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsListaOrgaos)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("dsListaOrgaos");
            entity.Property(e => e.DsLogExecucao)
                .IsUnicode(false)
                .HasColumnName("dsLogExecucao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsNotas)
                .IsUnicode(false)
                .HasColumnName("dsNotas");
            entity.Property(e => e.DtBasePeriodo)
                .HasColumnType("datetime")
                .HasColumnName("dtBasePeriodo");
            entity.Property(e => e.DtExecucao)
                .HasColumnType("datetime")
                .HasColumnName("dtExecucao");
            entity.Property(e => e.FlConsolidado).HasColumnName("flConsolidado");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrEnderecoIp)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrEnderecoIP");
            entity.Property(e => e.NrPeriodo).HasColumnName("nrPeriodo");
            entity.Property(e => e.TpPeriodo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpPeriodo");
        });

        modelBuilder.Entity<TbRelExecutaRelatorio>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbRelExecutaRelatorios");

            entity.Property(e => e.DsRelatorio)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsRelatorio");
            entity.Property(e => e.DsTipoOrgao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoOrgao");
            entity.Property(e => e.DsTituloDetalhe)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsTituloDetalhe");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.Vl10Exercicio)
                .HasColumnType("money")
                .HasColumnName("vl10Exercicio");
            entity.Property(e => e.Vl1Quadrimestre)
                .HasColumnType("money")
                .HasColumnName("vl1Quadrimestre");
            entity.Property(e => e.Vl1Semestre)
                .HasColumnType("money")
                .HasColumnName("vl1Semestre");
            entity.Property(e => e.Vl20Exercicio)
                .HasColumnType("money")
                .HasColumnName("vl20Exercicio");
            entity.Property(e => e.Vl2Quadrimestre)
                .HasColumnType("money")
                .HasColumnName("vl2Quadrimestre");
            entity.Property(e => e.Vl2Semestre)
                .HasColumnType("money")
                .HasColumnName("vl2Semestre");
            entity.Property(e => e.Vl35Exercicio)
                .HasColumnType("money")
                .HasColumnName("vl35Exercicio");
            entity.Property(e => e.Vl3Quadrimestre)
                .HasColumnType("money")
                .HasColumnName("vl3Quadrimestre");
            entity.Property(e => e.VlApagarNaoProc)
                .HasColumnType("money")
                .HasColumnName("vlAPagarNaoProc");
            entity.Property(e => e.VlApagarProc)
                .HasColumnType("money")
                .HasColumnName("vlAPagarProc");
            entity.Property(e => e.VlAplicacaoRecAteBim)
                .HasColumnType("money")
                .HasColumnName("vlAplicacaoRecAteBim");
            entity.Property(e => e.VlAplicacaoRecRealizar)
                .HasColumnType("money")
                .HasColumnName("vlAplicacaoRecRealizar");
            entity.Property(e => e.VlApuradoAteBim)
                .HasColumnType("money")
                .HasColumnName("vlApuradoAteBim");
            entity.Property(e => e.VlArrecadadoAtePeriodo)
                .HasColumnType("money")
                .HasColumnName("vlArrecadadoAtePeriodo");
            entity.Property(e => e.VlArrecadadoNoPeriodo)
                .HasColumnType("money")
                .HasColumnName("vlArrecadadoNoPeriodo");
            entity.Property(e => e.VlAteBimestre)
                .HasColumnType("money")
                .HasColumnName("vlAteBimestre");
            entity.Property(e => e.VlAtualizado)
                .HasColumnType("money")
                .HasColumnName("vlAtualizado");
            entity.Property(e => e.VlCanceladoAteBim)
                .HasColumnType("money")
                .HasColumnName("vlCanceladoAteBim");
            entity.Property(e => e.VlCanceladoNaoProc)
                .HasColumnType("money")
                .HasColumnName("vlCanceladoNaoProc");
            entity.Property(e => e.VlCanceladoProc)
                .HasColumnType("money")
                .HasColumnName("vlCanceladoProc");
            entity.Property(e => e.VlEmpenhoAtePeriodo)
                .HasColumnType("money")
                .HasColumnName("vlEmpenhoAtePeriodo");
            entity.Property(e => e.VlEmpenhoPeriodo)
                .HasColumnType("money")
                .HasColumnName("vlEmpenhoPeriodo");
            entity.Property(e => e.VlExercicio)
                .HasColumnType("money")
                .HasColumnName("vlExercicio");
            entity.Property(e => e.VlIncricaoProc)
                .HasColumnType("money")
                .HasColumnName("vlIncricaoProc");
            entity.Property(e => e.VlInscricao)
                .HasColumnType("money")
                .HasColumnName("vlInscricao");
            entity.Property(e => e.VlInscricaoNaoProc)
                .HasColumnType("money")
                .HasColumnName("vlInscricaoNaoProc");
            entity.Property(e => e.VlLiquidadoAtePeriodo)
                .HasColumnType("money")
                .HasColumnName("vlLiquidadoAtePeriodo");
            entity.Property(e => e.VlLiquidadoPeriodo)
                .HasColumnType("money")
                .HasColumnName("vlLiquidadoPeriodo");
            entity.Property(e => e.VlMetaFixada)
                .HasColumnType("money")
                .HasColumnName("vlMetaFixada");
            entity.Property(e => e.VlNoBimestre)
                .HasColumnType("money")
                .HasColumnName("vlNoBimestre");
            entity.Property(e => e.VlOrcado)
                .HasColumnType("money")
                .HasColumnName("vlOrcado");
            entity.Property(e => e.VlPagamentoAteBim)
                .HasColumnType("money")
                .HasColumnName("vlPagamentoAteBim");
            entity.Property(e => e.VlPagoNaoProc)
                .HasColumnType("money")
                .HasColumnName("vlPagoNaoProc");
            entity.Property(e => e.VlPagoProc)
                .HasColumnType("money")
                .HasColumnName("vlPagoProc");
            entity.Property(e => e.VlPercentual)
                .HasColumnType("money")
                .HasColumnName("vlPercentual");
            entity.Property(e => e.VlReceitaArealizar)
                .HasColumnType("money")
                .HasColumnName("vlReceitaARealizar");
            entity.Property(e => e.VlReceitaRealizada)
                .HasColumnType("money")
                .HasColumnName("vlReceitaRealizada");
            entity.Property(e => e.VlResultadoApurado)
                .HasColumnType("money")
                .HasColumnName("vlResultadoApurado");
            entity.Property(e => e.VlSaldoApagar)
                .HasColumnType("money")
                .HasColumnName("vlSaldoAPagar");
            entity.Property(e => e.VlSaldoExercicioAnteriores)
                .HasColumnType("money")
                .HasColumnName("vlSaldoExercicioAnteriores");
            entity.Property(e => e.VlSaldoNaoRealizado)
                .HasColumnType("money")
                .HasColumnName("vlSaldoNaoRealizado");
            entity.Property(e => e.VlSaldoRealizar)
                .HasColumnType("money")
                .HasColumnName("vlSaldoRealizar");
            entity.Property(e => e.VlValor)
                .HasColumnType("money")
                .HasColumnName("vlValor");
            entity.Property(e => e.VlValorRap)
                .HasColumnType("money")
                .HasColumnName("vlValorRAP");
        });

        modelBuilder.Entity<TbRelExecutaRelatoriosLrf>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbRelExecutaRelatoriosLRF");

            entity.Property(e => e.DsRelatorio)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsRelatorio");
            entity.Property(e => e.DsTipoOrgao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoOrgao");
            entity.Property(e => e.DsTituloDetalhe)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsTituloDetalhe");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.Vl10Exercicio)
                .HasColumnType("money")
                .HasColumnName("vl10Exercicio");
            entity.Property(e => e.Vl1Quadrimestre)
                .HasColumnType("money")
                .HasColumnName("vl1Quadrimestre");
            entity.Property(e => e.Vl1Semestre)
                .HasColumnType("money")
                .HasColumnName("vl1Semestre");
            entity.Property(e => e.Vl20Exercicio)
                .HasColumnType("money")
                .HasColumnName("vl20Exercicio");
            entity.Property(e => e.Vl2Quadrimestre)
                .HasColumnType("money")
                .HasColumnName("vl2Quadrimestre");
            entity.Property(e => e.Vl2Semestre)
                .HasColumnType("money")
                .HasColumnName("vl2Semestre");
            entity.Property(e => e.Vl35Exercicio)
                .HasColumnType("money")
                .HasColumnName("vl35Exercicio");
            entity.Property(e => e.Vl3Quadrimestre)
                .HasColumnType("money")
                .HasColumnName("vl3Quadrimestre");
            entity.Property(e => e.VlApagarNaoProc)
                .HasColumnType("money")
                .HasColumnName("vlAPagarNaoProc");
            entity.Property(e => e.VlApagarProc)
                .HasColumnType("money")
                .HasColumnName("vlAPagarProc");
            entity.Property(e => e.VlAplicacaoRecAteBim)
                .HasColumnType("money")
                .HasColumnName("vlAplicacaoRecAteBim");
            entity.Property(e => e.VlAplicacaoRecRealizar)
                .HasColumnType("money")
                .HasColumnName("vlAplicacaoRecRealizar");
            entity.Property(e => e.VlApuradoAteBim)
                .HasColumnType("money")
                .HasColumnName("vlApuradoAteBim");
            entity.Property(e => e.VlArrecadadoAtePeriodo)
                .HasColumnType("money")
                .HasColumnName("vlArrecadadoAtePeriodo");
            entity.Property(e => e.VlArrecadadoNoPeriodo)
                .HasColumnType("money")
                .HasColumnName("vlArrecadadoNoPeriodo");
            entity.Property(e => e.VlAteBimestre)
                .HasColumnType("money")
                .HasColumnName("vlAteBimestre");
            entity.Property(e => e.VlAtualizado)
                .HasColumnType("money")
                .HasColumnName("vlAtualizado");
            entity.Property(e => e.VlCanceladoAteBim)
                .HasColumnType("money")
                .HasColumnName("vlCanceladoAteBim");
            entity.Property(e => e.VlCanceladoNaoProc)
                .HasColumnType("money")
                .HasColumnName("vlCanceladoNaoProc");
            entity.Property(e => e.VlCanceladoProc)
                .HasColumnType("money")
                .HasColumnName("vlCanceladoProc");
            entity.Property(e => e.VlEmpenhoAtePeriodo)
                .HasColumnType("money")
                .HasColumnName("vlEmpenhoAtePeriodo");
            entity.Property(e => e.VlEmpenhoPeriodo)
                .HasColumnType("money")
                .HasColumnName("vlEmpenhoPeriodo");
            entity.Property(e => e.VlExercicio)
                .HasColumnType("money")
                .HasColumnName("vlExercicio");
            entity.Property(e => e.VlIncricaoProc)
                .HasColumnType("money")
                .HasColumnName("vlIncricaoProc");
            entity.Property(e => e.VlInscricao)
                .HasColumnType("money")
                .HasColumnName("vlInscricao");
            entity.Property(e => e.VlInscricaoNaoProc)
                .HasColumnType("money")
                .HasColumnName("vlInscricaoNaoProc");
            entity.Property(e => e.VlLiquidadoAtePeriodo)
                .HasColumnType("money")
                .HasColumnName("vlLiquidadoAtePeriodo");
            entity.Property(e => e.VlLiquidadoPeriodo)
                .HasColumnType("money")
                .HasColumnName("vlLiquidadoPeriodo");
            entity.Property(e => e.VlMetaFixada)
                .HasColumnType("money")
                .HasColumnName("vlMetaFixada");
            entity.Property(e => e.VlNoBimestre)
                .HasColumnType("money")
                .HasColumnName("vlNoBimestre");
            entity.Property(e => e.VlOrcado)
                .HasColumnType("money")
                .HasColumnName("vlOrcado");
            entity.Property(e => e.VlPagamentoAteBim)
                .HasColumnType("money")
                .HasColumnName("vlPagamentoAteBim");
            entity.Property(e => e.VlPagoNaoProc)
                .HasColumnType("money")
                .HasColumnName("vlPagoNaoProc");
            entity.Property(e => e.VlPagoProc)
                .HasColumnType("money")
                .HasColumnName("vlPagoProc");
            entity.Property(e => e.VlPercentual)
                .HasColumnType("money")
                .HasColumnName("vlPercentual");
            entity.Property(e => e.VlReceitaArealizar)
                .HasColumnType("money")
                .HasColumnName("vlReceitaARealizar");
            entity.Property(e => e.VlReceitaRealizada)
                .HasColumnType("money")
                .HasColumnName("vlReceitaRealizada");
            entity.Property(e => e.VlResultadoApurado)
                .HasColumnType("money")
                .HasColumnName("vlResultadoApurado");
            entity.Property(e => e.VlSaldoApagar)
                .HasColumnType("money")
                .HasColumnName("vlSaldoAPagar");
            entity.Property(e => e.VlSaldoExercicioAnteriores)
                .HasColumnType("money")
                .HasColumnName("vlSaldoExercicioAnteriores");
            entity.Property(e => e.VlSaldoNaoRealizado)
                .HasColumnType("money")
                .HasColumnName("vlSaldoNaoRealizado");
            entity.Property(e => e.VlSaldoRealizar)
                .HasColumnType("money")
                .HasColumnName("vlSaldoRealizar");
            entity.Property(e => e.VlValor)
                .HasColumnType("money")
                .HasColumnName("vlValor");
            entity.Property(e => e.VlValorRap)
                .HasColumnType("money")
                .HasColumnName("vlValorRAP");
        });

        modelBuilder.Entity<TbRelOrgaosUnidadesSessao>(entity =>
        {
            entity.HasKey(e => new { e.IdSessao, e.CdOrgao, e.CdUnidade });

            entity.ToTable("tbRelOrgaosUnidadesSessao");

            entity.Property(e => e.IdSessao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("idSessao");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
        });

        modelBuilder.Entity<TbRelParametrizaco>(entity =>
        {
            entity.HasKey(e => e.IdRelatorio);

            entity.ToTable("tbRelParametrizacoes");

            entity.Property(e => e.DsAnexo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsAnexo");
            entity.Property(e => e.DsFonte)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("dsFonte");
            entity.Property(e => e.DsFormatacaoPeriodo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsFormatacaoPeriodo");
            entity.Property(e => e.DsMoedaReferencia)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsMoedaReferencia");
            entity.Property(e => e.DsNotas)
                .IsUnicode(false)
                .HasColumnName("dsNotas");
            entity.Property(e => e.DsRelatorio)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsRelatorio");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.NmRelatorio)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("nmRelatorio");
            entity.Property(e => e.NmRptCrystal)
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("nmRptCrystal");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrProcessaAnosAnteriores).HasColumnName("nrProcessaAnosAnteriores");
        });

        modelBuilder.Entity<TbRelParametrizacoesDetalhe>(entity =>
        {
            entity.HasKey(e => e.IdDetalhe);

            entity.ToTable("tbRelParametrizacoesDetalhes");

            entity.Property(e => e.DsDetalhe)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsDetalhe");
            entity.Property(e => e.NrReferencia)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("nrReferencia");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");

            entity.HasOne(d => d.IdGrupoNavigation).WithMany(p => p.TbRelParametrizacoesDetalhes)
                .HasForeignKey(d => d.IdGrupo)
                .HasConstraintName("FK_tbRelParametrizacoesDetalhes_tbRelParametrizacoesGrupos");
        });

        modelBuilder.Entity<TbRelParametrizacoesDetalhesFormula>(entity =>
        {
            entity.HasKey(e => e.IdDetalheFormula);

            entity.ToTable("tbRelParametrizacoesDetalhesFormulas");

            entity.Property(e => e.DsFormula)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("dsFormula");
            entity.Property(e => e.NmColuna)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmColuna");
            entity.Property(e => e.NrColuna).HasColumnName("nrColuna");
        });

        modelBuilder.Entity<TbRelParametrizacoesExecuco>(entity =>
        {
            entity.HasKey(e => new { e.IdExecucao, e.IdDetalheFormula });

            entity.ToTable("tbRelParametrizacoesExecucoes");

            entity.Property(e => e.IdExecucao).HasColumnName("idExecucao");
            entity.Property(e => e.VlExecutado)
                .HasColumnType("money")
                .HasColumnName("vlExecutado");

            entity.HasOne(d => d.IdDetalheFormulaNavigation).WithMany(p => p.TbRelParametrizacoesExecucos)
                .HasForeignKey(d => d.IdDetalheFormula)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbRelParametrizacoesExecucoes_tbRelParametrizacoesDetalhesFormulas");

            entity.HasOne(d => d.IdExecucaoNavigation).WithMany(p => p.TbRelParametrizacoesExecucos)
                .HasForeignKey(d => d.IdExecucao)
                .HasConstraintName("FK_tbRelParametrizacoesExecucoes_tbRelExecucoesRelatorios");
        });

        modelBuilder.Entity<TbRelParametrizacoesGrupo>(entity =>
        {
            entity.HasKey(e => e.IdGrupo);

            entity.ToTable("tbRelParametrizacoesGrupos");

            entity.Property(e => e.DsGrupo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsGrupo");
            entity.Property(e => e.DsTituloDetalhe)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTituloDetalhe");
            entity.Property(e => e.NmGrupo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmGrupo");
            entity.Property(e => e.NrColunas).HasColumnName("nrColunas");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");

            entity.HasOne(d => d.IdRelatorioNavigation).WithMany(p => p.TbRelParametrizacoesGrupos)
                .HasForeignKey(d => d.IdRelatorio)
                .HasConstraintName("FK_tbRelParametrizacoesGrupos_tbRelParametrizacoes");
        });

        modelBuilder.Entity<TbRelQuery>(entity =>
        {
            entity.HasKey(e => e.IdQuery);

            entity.ToTable("tbRelQueries");

            entity.Property(e => e.IdQuery).ValueGeneratedNever();
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsQuery)
                .IsUnicode(false)
                .HasColumnName("dsQuery");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NmQuery)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmQuery");
        });

        modelBuilder.Entity<TbRelSaldosMensaisContasContabei>(entity =>
        {
            entity.HasKey(e => e.IdSaldo);

            entity.ToTable("tbRelSaldosMensaisContasContabeis");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.IdTipoFinanceiroPatrimonial).HasColumnName("idTipoFinanceiroPatrimonial");
            entity.Property(e => e.IdTipoMovimento).HasColumnName("idTipoMovimento");
            entity.Property(e => e.IdTipoVariacao).HasColumnName("idTipoVariacao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlCredito)
                .HasColumnType("money")
                .HasColumnName("vlCredito");
            entity.Property(e => e.VlCreditoDebito)
                .HasColumnType("money")
                .HasColumnName("vlCreditoDebito");
            entity.Property(e => e.VlCreditoSemEstorno)
                .HasColumnType("money")
                .HasColumnName("vlCreditoSemEstorno");
            entity.Property(e => e.VlDebito)
                .HasColumnType("money")
                .HasColumnName("vlDebito");
            entity.Property(e => e.VlDebitoCredito)
                .HasColumnType("money")
                .HasColumnName("vlDebitoCredito");
            entity.Property(e => e.VlDebitoSemEstorno)
                .HasColumnType("money")
                .HasColumnName("vlDebitoSemEstorno");
            entity.Property(e => e.VlSaldoInicial)
                .HasColumnType("money")
                .HasColumnName("vlSaldoInicial");
            entity.Property(e => e.VlSaldoProximo)
                .HasColumnType("money")
                .HasColumnName("vlSaldoProximo");
        });

        modelBuilder.Entity<TbRelSaldosMensaisNatDespesa>(entity =>
        {
            entity.HasKey(e => e.IdSaldo);

            entity.ToTable("tbRelSaldosMensaisNatDespesas");

            entity.Property(e => e.CdAcao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdAcao");
            entity.Property(e => e.CdAplicacaoFonte)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdAplicacaoFonte");
            entity.Property(e => e.CdCatDespesa)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdCatDespesa");
            entity.Property(e => e.CdDesdobramento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdDesdobramento");
            entity.Property(e => e.CdDesdobramentoFonte)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdDesdobramentoFonte");
            entity.Property(e => e.CdDetalhamento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdDetalhamento");
            entity.Property(e => e.CdDetalhamentoFonte)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdDetalhamentoFonte");
            entity.Property(e => e.CdElemento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdElemento");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.CdFonteNormal)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("cdFonteNormal");
            entity.Property(e => e.CdFuncao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFuncao");
            entity.Property(e => e.CdGrupoDespesa)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdGrupoDespesa");
            entity.Property(e => e.CdModalidade)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdModalidade");
            entity.Property(e => e.CdNatDespesa)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("cdNatDespesa");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdOrigem)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdOrigem");
            entity.Property(e => e.CdPrograma)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdPrograma");
            entity.Property(e => e.CdSubFuncao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdSubFuncao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrExercicio).HasColumnName("nrExercicio");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlAlteracao)
                .HasColumnType("money")
                .HasColumnName("vlAlteracao");
            entity.Property(e => e.VlAtualizado)
                .HasColumnType("money")
                .HasColumnName("vlAtualizado");
            entity.Property(e => e.VlConsignacao)
                .HasColumnType("money")
                .HasColumnName("vlConsignacao");
            entity.Property(e => e.VlEmpenho)
                .HasColumnType("money")
                .HasColumnName("vlEmpenho");
            entity.Property(e => e.VlEstornoEmpenho)
                .HasColumnType("money")
                .HasColumnName("vlEstornoEmpenho");
            entity.Property(e => e.VlEstornoLiquidacao)
                .HasColumnType("money")
                .HasColumnName("vlEstornoLiquidacao");
            entity.Property(e => e.VlEstornoPagamento)
                .HasColumnType("money")
                .HasColumnName("vlEstornoPagamento");
            entity.Property(e => e.VlEstornoRetencaoPaga)
                .HasColumnType("money")
                .HasColumnName("vlEstornoRetencaoPaga");
            entity.Property(e => e.VlLiquidacao)
                .HasColumnType("money")
                .HasColumnName("vlLiquidacao");
            entity.Property(e => e.VlOrcado)
                .HasColumnType("money")
                .HasColumnName("vlOrcado");
            entity.Property(e => e.VlPagamento)
                .HasColumnType("money")
                .HasColumnName("vlPagamento");
            entity.Property(e => e.VlRetencaoPaga)
                .HasColumnType("money")
                .HasColumnName("vlRetencaoPaga");
            entity.Property(e => e.VlReversaoEstorno).HasColumnType("money");
            entity.Property(e => e.VlSaldoNaoProcessado)
                .HasColumnType("money")
                .HasColumnName("vlSaldoNaoProcessado");
        });

        modelBuilder.Entity<TbRelSaldosMensaisRap>(entity =>
        {
            entity.HasKey(e => e.IdSaldo);

            entity.ToTable("tbRelSaldosMensaisRAP");

            entity.Property(e => e.CdAplicacaoFonte)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdAplicacaoFonte");
            entity.Property(e => e.CdCatDespesa)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdCatDespesa");
            entity.Property(e => e.CdDesdobramento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdDesdobramento");
            entity.Property(e => e.CdDesdobramentoFonte)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdDesdobramentoFonte");
            entity.Property(e => e.CdDetalhamento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdDetalhamento");
            entity.Property(e => e.CdDetalhamentoFonte)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdDetalhamentoFonte");
            entity.Property(e => e.CdElemento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdElemento");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.CdFuncao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFuncao");
            entity.Property(e => e.CdGrupoDespesa)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdGrupoDespesa");
            entity.Property(e => e.CdModalidade)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdModalidade");
            entity.Property(e => e.CdNatDespesa)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("cdNatDespesa");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdOrigem)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdOrigem");
            entity.Property(e => e.CdSubFuncao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdSubFuncao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrExercicio).HasColumnName("nrExercicio");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlCanceladoNaoProcessados)
                .HasColumnType("money")
                .HasColumnName("vlCanceladoNaoProcessados");
            entity.Property(e => e.VlCanceladoProcessados)
                .HasColumnType("money")
                .HasColumnName("vlCanceladoProcessados");
            entity.Property(e => e.VlInscritoNaoProcessado)
                .HasColumnType("money")
                .HasColumnName("vlInscritoNaoProcessado");
            entity.Property(e => e.VlInscritoProcessado)
                .HasColumnType("money")
                .HasColumnName("vlInscritoProcessado");
            entity.Property(e => e.VlLiquidadoNaoProcessadosPeriodo)
                .HasColumnType("money")
                .HasColumnName("vlLiquidadoNaoProcessadosPeriodo");
            entity.Property(e => e.VlPagoNaoProcessados)
                .HasColumnType("money")
                .HasColumnName("vlPagoNaoProcessados");
            entity.Property(e => e.VlPagoProcessados)
                .HasColumnType("money")
                .HasColumnName("vlPagoProcessados");
        });

        modelBuilder.Entity<TbRelSaldosMensaisReceita>(entity =>
        {
            entity.HasKey(e => e.IdSaldo);

            entity.ToTable("tbRelSaldosMensaisReceitas");

            entity.Property(e => e.CdAplicacaoFonte)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdAplicacaoFonte");
            entity.Property(e => e.CdDesdobramentoFonte)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdDesdobramentoFonte");
            entity.Property(e => e.CdDetalhamentoFonte)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdDetalhamentoFonte");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdOrigem)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdOrigem");
            entity.Property(e => e.CdReceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlArrecadado)
                .HasColumnType("money")
                .HasColumnName("vlArrecadado");
            entity.Property(e => e.VlAtualizado)
                .HasColumnType("money")
                .HasColumnName("vlAtualizado");
            entity.Property(e => e.VlOrcado)
                .HasColumnType("money")
                .HasColumnName("vlOrcado");
            entity.Property(e => e.VlReestimado)
                .HasColumnType("money")
                .HasColumnName("vlReestimado");
        });

        modelBuilder.Entity<TbSbsAditivo>(entity =>
        {
            entity.HasKey(e => e.IdAditivo);

            entity.ToTable("tbSbsAditivos");

            entity.Property(e => e.CdModalidadeAplicacao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("cdModalidadeAplicacao");
            entity.Property(e => e.CdTipoAditivo)
                .HasMaxLength(50)
                .HasColumnName("cdTipoAditivo");
            entity.Property(e => e.DsAditivoObjeto)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsAditivoObjeto");
            entity.Property(e => e.DtAditivo)
                .HasColumnType("datetime")
                .HasColumnName("dtAditivo");
            entity.Property(e => e.DtAssinatura)
                .HasColumnType("datetime")
                .HasColumnName("dtAssinatura");
            entity.Property(e => e.DtFimExecucao)
                .HasColumnType("datetime")
                .HasColumnName("dtFimExecucao");
            entity.Property(e => e.DtFimVigencia)
                .HasColumnType("datetime")
                .HasColumnName("dtFimVigencia");
            entity.Property(e => e.DtPublicacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacao");
            entity.Property(e => e.DtVencimentoConvenio)
                .HasColumnType("datetime")
                .HasColumnName("dtVencimentoConvenio");
            entity.Property(e => e.FlCronograma)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flCronograma");
            entity.Property(e => e.FlFiscalGestor)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flFiscalGestor");
            entity.Property(e => e.FlObjeto)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flObjeto");
            entity.Property(e => e.FlPlanoAplicacao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPlanoAplicacao");
            entity.Property(e => e.FlPrazo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPrazo");
            entity.Property(e => e.FlValor)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flValor");
            entity.Property(e => e.NrAditivo).HasColumnName("nrAditivo");
            entity.Property(e => e.NrEdicaoPublicacao).HasColumnName("nrEdicaoPublicacao");
            entity.Property(e => e.VlContrapartida)
                .HasColumnType("money")
                .HasColumnName("vlContrapartida");
            entity.Property(e => e.VlRepasse)
                .HasColumnType("money")
                .HasColumnName("vlRepasse");

            entity.HasOne(d => d.IdPessoaFiscalizadorNavigation).WithMany(p => p.TbSbsAditivos)
                .HasForeignKey(d => d.IdPessoaFiscalizador)
                .HasConstraintName("FK_tbSbsAditivos_tbGerPessoas");

            entity.HasOne(d => d.IdSubvencaoSocialNavigation).WithMany(p => p.TbSbsAditivos)
                .HasForeignKey(d => d.IdSubvencaoSocial)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbSbsAditivos_tbSbsSubvencaoSocial");

            entity.HasOne(d => d.IdVeiculoPublicacaoNavigation).WithMany(p => p.TbSbsAditivos)
                .HasForeignKey(d => d.IdVeiculoPublicacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbSbsAditivos_tbLicVeiculosPublicacoes");
        });

        modelBuilder.Entity<TbSbsBensAdquirido>(entity =>
        {
            entity.HasKey(e => e.IdBemAdiquirido);

            entity.ToTable("tbSbsBensAdquiridos");

            entity.Property(e => e.CdTipoDocDespesa)
                .HasMaxLength(50)
                .HasColumnName("cdTipoDocDespesa");
            entity.Property(e => e.DsBemAdquirido)
                .HasMaxLength(10)
                .HasColumnName("dsBemAdquirido");
            entity.Property(e => e.NrDocDespesa)
                .HasMaxLength(10)
                .HasColumnName("nrDocDespesa");
            entity.Property(e => e.NrQtdBemAdquirido).HasColumnName("nrQtdBemAdquirido");
            entity.Property(e => e.VlUnitario)
                .HasColumnType("money")
                .HasColumnName("vlUnitario");

            entity.HasOne(d => d.IdSubVencaoSocialNavigation).WithMany(p => p.TbSbsBensAdquiridos)
                .HasForeignKey(d => d.IdSubVencaoSocial)
                .HasConstraintName("FK_tbSbsBensAdquiridos_tbSbsSubvencaoSocial");
        });

        modelBuilder.Entity<TbSbsCategoriasDespesa>(entity =>
        {
            entity.HasKey(e => e.IdCatDespesa).HasName("PK_tbSbsCategoriasDespesa");

            entity.ToTable("tbSbsCategoriasDespesas");

            entity.Property(e => e.IdCatDespesa).ValueGeneratedNever();
            entity.Property(e => e.NmCatDespesa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmCatDespesa");

            entity.HasMany(d => d.CdTipoDespesas).WithMany(p => p.IdCatDespesas)
                .UsingEntity<Dictionary<string, object>>(
                    "TbSbsCategoriasTipoDespesa",
                    r => r.HasOne<TbSbsTipoDespesa>().WithMany()
                        .HasForeignKey("CdTipoDespesa")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbSbsCategoriasTipoDespesas_tbSbsTipoDespesa"),
                    l => l.HasOne<TbSbsCategoriasDespesa>().WithMany()
                        .HasForeignKey("IdCatDespesa")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbSbsCategoriasTipoDespesas_tbSbsCategoriasDespesas"),
                    j =>
                    {
                        j.HasKey("IdCatDespesa", "CdTipoDespesa");
                        j.ToTable("tbSbsCategoriasTipoDespesas");
                        j.IndexerProperty<int>("CdTipoDespesa").HasColumnName("cdTipoDespesa");
                    });
        });

        modelBuilder.Entity<TbSbsComplementosSit>(entity =>
        {
            entity.HasKey(e => new { e.CdTabelaSit, e.CdCampoSit }).HasName("PK_tbSbsComplementosSIT_1");

            entity.ToTable("tbSbsComplementosSIT");

            entity.Property(e => e.CdTabelaSit).HasColumnName("cdTabelaSit");
            entity.Property(e => e.CdCampoSit)
                .HasMaxLength(50)
                .HasColumnName("cdCampoSit");
            entity.Property(e => e.DsCampoSit)
                .HasMaxLength(255)
                .HasColumnName("dsCampoSit");
            entity.Property(e => e.DsTabelaSit)
                .HasMaxLength(150)
                .HasColumnName("dsTabelaSit");
        });

        modelBuilder.Entity<TbSbsCronogramaDesembolso>(entity =>
        {
            entity.HasKey(e => e.IdCronogDesenbolso);

            entity.ToTable("tbSbsCronogramaDesembolsos");

            entity.Property(e => e.DtDesembolso)
                .HasColumnType("datetime")
                .HasColumnName("dtDesembolso");
            entity.Property(e => e.NrAnoReferencia).HasColumnName("nrAnoReferencia");
            entity.Property(e => e.NrMesReferencia).HasColumnName("nrMesReferencia");
            entity.Property(e => e.VlAporte)
                .HasColumnType("money")
                .HasColumnName("vlAporte");
            entity.Property(e => e.VlDesembolso)
                .HasColumnType("money")
                .HasColumnName("vlDesembolso");

            entity.HasOne(d => d.IdSubvencaoSocialNavigation).WithMany(p => p.TbSbsCronogramaDesembolsos)
                .HasForeignKey(d => d.IdSubvencaoSocial)
                .HasConstraintName("FK_tbSbsCronogramaDesembolsos_tbSbsSubvencaoSocial");
        });

        modelBuilder.Entity<TbSbsCronogramaDesembolsoAditivo>(entity =>
        {
            entity.HasKey(e => e.IdCronogAditivo);

            entity.ToTable("tbSbsCronogramaDesembolsoAditivos");

            entity.Property(e => e.DtDesembolso)
                .HasColumnType("datetime")
                .HasColumnName("dtDesembolso");
            entity.Property(e => e.VlDesembolso)
                .HasColumnType("money")
                .HasColumnName("vlDesembolso");

            entity.HasOne(d => d.IdAditivoNavigation).WithMany(p => p.TbSbsCronogramaDesembolsoAditivos)
                .HasForeignKey(d => d.IdAditivo)
                .HasConstraintName("FK_tbSbsCronogramaDesembolsoAditivos_tbSbsAditivos");

            entity.HasOne(d => d.IdNatDespesaNavigation).WithMany(p => p.TbSbsCronogramaDesembolsoAditivos)
                .HasForeignKey(d => d.IdNatDespesa)
                .HasConstraintName("FK_tbSbsCronogramaDesembolsoAditivos_tbOrcNaturezasDespesa");
        });

        modelBuilder.Entity<TbSbsDevolucaoSaldo>(entity =>
        {
            entity.HasKey(e => e.IdDevolucaoSaldo);

            entity.ToTable("tbSbsDevolucaoSaldo");

            entity.Property(e => e.CdTipoDocPagamento)
                .HasMaxLength(50)
                .HasColumnName("cdTipoDocPagamento");
            entity.Property(e => e.DtDevolucao)
                .HasColumnType("datetime")
                .HasColumnName("dtDevolucao");
            entity.Property(e => e.NrDocDevolucao)
                .HasMaxLength(20)
                .HasColumnName("nrDocDevolucao");
            entity.Property(e => e.VlDevolucao)
                .HasColumnType("money")
                .HasColumnName("vlDevolucao");

            entity.HasOne(d => d.IdSubvencaoSocialNavigation).WithMany(p => p.TbSbsDevolucaoSaldos)
                .HasForeignKey(d => d.IdSubvencaoSocial)
                .HasConstraintName("FK_tbSbsDevolucaoSaldo_tbSbsSubvencaoSocial");
        });

        modelBuilder.Entity<TbSbsEtapa>(entity =>
        {
            entity.HasKey(e => e.IdEtapa);

            entity.ToTable("tbSbsEtapas");

            entity.Property(e => e.DsEtapaAtividade)
                .HasMaxLength(250)
                .HasColumnName("dsEtapaAtividade");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.VlPrevisto)
                .HasColumnType("decimal(16, 2)")
                .HasColumnName("vlPrevisto");

            entity.HasOne(d => d.IdSubVencaoSocialNavigation).WithMany(p => p.TbSbsEtapas)
                .HasForeignKey(d => d.IdSubVencaoSocial)
                .HasConstraintName("FK_tbSbsEtapas_tbSbsSubvencaoSocial");
        });

        modelBuilder.Entity<TbSbsInterveniente>(entity =>
        {
            entity.HasKey(e => e.IdIntervenientes).HasName("PK_tbSbslIntervenientes");

            entity.ToTable("tbSbsIntervenientes");

            entity.Property(e => e.CdResponsabilidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdResponsabilidade");
            entity.Property(e => e.CdTipoParticipacao)
                .HasMaxLength(50)
                .HasColumnName("cdTipoParticipacao");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbSbsIntervenientes)
                .HasForeignKey(d => d.IdPessoa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbSbslIntervenientes_tbGerPessoas");

            entity.HasOne(d => d.IdSubvencaoSocialNavigation).WithMany(p => p.TbSbsIntervenientes)
                .HasForeignKey(d => d.IdSubvencaoSocial)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbSbslIntervenientes_tbSbsSubvencaoSocial");
        });

        modelBuilder.Entity<TbSbsLegislacaoEspecificaConcedente>(entity =>
        {
            entity.HasKey(e => e.IdLegislacaoEspecifica);

            entity.ToTable("tbSbsLegislacaoEspecificaConcedente");

            entity.Property(e => e.IdLegislacaoEspecifica).HasColumnName("idLegislacaoEspecifica");
            entity.Property(e => e.CdAssuntoLegislacaoEspecifica)
                .HasMaxLength(50)
                .HasColumnName("cdAssuntoLegislacaoEspecifica");
            entity.Property(e => e.CdtipoAtoLegislacaoEspecifica)
                .HasMaxLength(50)
                .HasColumnName("cdtipoAtoLegislacaoEspecifica");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrAtoLegislacaoEspecifica)
                .HasMaxLength(20)
                .HasColumnName("nrAtoLegislacaoEspecifica");

            entity.HasOne(d => d.IdSubVencaoSocialNavigation).WithMany(p => p.TbSbsLegislacaoEspecificaConcedentes)
                .HasForeignKey(d => d.IdSubVencaoSocial)
                .HasConstraintName("FK_tbSbsLegislacaoEspecificaConcedente_tbSbsSubvencaoSocial");
        });

        modelBuilder.Entity<TbSbsMembrosUgttomador>(entity =>
        {
            entity.HasKey(e => e.IdMembro);

            entity.ToTable("tbSbsMembrosUGTTomador");

            entity.Property(e => e.CdTipoAto)
                .HasMaxLength(50)
                .HasColumnName("cdTipoAto");
            entity.Property(e => e.DsCargo)
                .HasMaxLength(50)
                .HasColumnName("dsCargo");
            entity.Property(e => e.DtExoneracao)
                .HasColumnType("datetime")
                .HasColumnName("dtExoneracao");
            entity.Property(e => e.DtNomeacao)
                .HasColumnType("datetime")
                .HasColumnName("dtNomeacao");
            entity.Property(e => e.NrAto)
                .HasMaxLength(10)
                .HasColumnName("nrAto");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbSbsMembrosUgttomadors)
                .HasForeignKey(d => d.IdPessoa)
                .HasConstraintName("FK_tbSbsMembrosUGTTomador_tbGerPessoas");

            entity.HasOne(d => d.IdSubvencaoSocialNavigation).WithMany(p => p.TbSbsMembrosUgttomadors)
                .HasForeignKey(d => d.IdSubvencaoSocial)
                .HasConstraintName("FK_tbSbsMembrosUGTTomador_tbSbsSubvencaoSocial");
        });

        modelBuilder.Entity<TbSbsOutrasReceita>(entity =>
        {
            entity.HasKey(e => e.IdOutraReceita);

            entity.ToTable("tbSbsOutrasReceitas");

            entity.Property(e => e.CdTipoCredito)
                .HasMaxLength(50)
                .HasColumnName("cdTipoCredito");
            entity.Property(e => e.DtCredito)
                .HasColumnType("datetime")
                .HasColumnName("dtCredito");
            entity.Property(e => e.VlCredito)
                .HasColumnType("money")
                .HasColumnName("vlCredito");

            entity.HasOne(d => d.IdSubVencaoSocialNavigation).WithMany(p => p.TbSbsOutrasReceita)
                .HasForeignKey(d => d.IdSubVencaoSocial)
                .HasConstraintName("FK_tbSbsOutrasReceitas_tbSbsSubvencaoSocial");
        });

        modelBuilder.Entity<TbSbsPlanoAplicacoesAditivo>(entity =>
        {
            entity.HasKey(e => e.IdPlanoAditivo).HasName("PK_tbSbsPlanoAditivos");

            entity.ToTable("tbSbsPlanoAplicacoesAditivos");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.VlPlanoAplicacao)
                .HasColumnType("money")
                .HasColumnName("vlPlanoAplicacao");

            entity.HasOne(d => d.IdCatDespesaNavigation).WithMany(p => p.TbSbsPlanoAplicacoesAditivos)
                .HasForeignKey(d => d.IdCatDespesa)
                .HasConstraintName("FK_tbSbsPlanoAditivos_tbSbsCategoriasDespesas");

            entity.HasOne(d => d.IdNatDespesaNavigation).WithMany(p => p.TbSbsPlanoAplicacoesAditivos)
                .HasForeignKey(d => d.IdNatDespesa)
                .HasConstraintName("FK_tbSbsPlanoAditivos_tbOrcNaturezasDespesa");

            entity.HasOne(d => d.IdSubvencaoSocialNavigation).WithMany(p => p.TbSbsPlanoAplicacoesAditivos)
                .HasForeignKey(d => d.IdSubvencaoSocial)
                .HasConstraintName("FK_tbSbsPlanoAditivos_tbSbsSubvencaoSocial");
        });

        modelBuilder.Entity<TbSbsPlanoTrabalho>(entity =>
        {
            entity.HasKey(e => e.IdPlanoTrabalho);

            entity.ToTable("tbSbsPlanoTrabalho");

            entity.Property(e => e.CdObjetosPlanoTrabalho)
                .HasMaxLength(50)
                .HasColumnName("cdObjetosPlanoTrabalho");
            entity.Property(e => e.CdUnidadeMedida)
                .HasMaxLength(50)
                .HasColumnName("cdUnidadeMedida");
            entity.Property(e => e.DsMeta)
                .HasMaxLength(250)
                .HasColumnName("dsMeta");
            entity.Property(e => e.DtEmissaoCertidaoRegImovel)
                .HasColumnType("datetime")
                .HasColumnName("dtEmissaoCertidaoRegImovel");
            entity.Property(e => e.DtValidadeCertidaoRegImovel)
                .HasColumnType("datetime")
                .HasColumnName("dtValidadeCertidaoRegImovel");
            entity.Property(e => e.NmCartorioRegistroImovel)
                .HasMaxLength(50)
                .HasColumnName("nmCartorioRegistroImovel");
            entity.Property(e => e.NrArt)
                .HasMaxLength(20)
                .HasColumnName("nrART");
            entity.Property(e => e.NrCrea)
                .HasMaxLength(20)
                .HasColumnName("nrCREA");
            entity.Property(e => e.NrMatriculaImovel)
                .HasMaxLength(20)
                .HasColumnName("nrMatriculaImovel");
            entity.Property(e => e.QtUnidadeMedida)
                .HasMaxLength(10)
                .HasColumnName("qtUnidadeMedida");

            entity.HasOne(d => d.IdProfissionalResponsavelNavigation).WithMany(p => p.TbSbsPlanoTrabalhos)
                .HasForeignKey(d => d.IdProfissionalResponsavel)
                .HasConstraintName("FK_tbSbsPlanoTrabalho_tbGerPessoas");

            entity.HasOne(d => d.IdSubVencaoSocialNavigation).WithMany(p => p.TbSbsPlanoTrabalhos)
                .HasForeignKey(d => d.IdSubVencaoSocial)
                .HasConstraintName("FK_tbSbsPlanoTrabalho_tbSbsSubvencaoSocial");
        });

        modelBuilder.Entity<TbSbsPrestacaoConta>(entity =>
        {
            entity.HasKey(e => e.IdPrestacaoConta);

            entity.ToTable("tbSbsPrestacaoContas");

            entity.Property(e => e.CdModalidadeCompra)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdModalidadeCompra");
            entity.Property(e => e.CdTipoDespesa).HasColumnName("cdTipoDespesa");
            entity.Property(e => e.CdtpDocumentoDespesa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdtpDocumentoDespesa");
            entity.Property(e => e.DsHistorico)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsJustificativa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsJustificativa");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsPlacaVeiculo)
                .HasMaxLength(7)
                .IsUnicode(false)
                .HasColumnName("dsPlacaVeiculo");
            entity.Property(e => e.DtDebito)
                .HasColumnType("datetime")
                .HasColumnName("dtDebito");
            entity.Property(e => e.DtDocFiscal)
                .HasColumnType("datetime")
                .HasColumnName("dtDocFiscal");
            entity.Property(e => e.DtDocumento)
                .HasColumnType("datetime")
                .HasColumnName("dtDocumento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtPrestacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPrestacao");
            entity.Property(e => e.MesCompetencia).HasColumnName("mesCompetencia");
            entity.Property(e => e.NrBimestre).HasColumnName("nrBimestre");
            entity.Property(e => e.NrDocFiscal)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("nrDocFiscal");
            entity.Property(e => e.NrDocumento).HasColumnName("nrDocumento");
            entity.Property(e => e.NrParcela).HasColumnName("nrParcela");
            entity.Property(e => e.NrQuantidadeRealizada).HasColumnName("nrQuantidadeRealizada");
            entity.Property(e => e.NrQuilometragemVeiculo).HasColumnName("nrQuilometragemVeiculo");
            entity.Property(e => e.NrSeqMovimento).HasColumnName("nrSeqMovimento");
            entity.Property(e => e.VlPrestadoContas)
                .HasColumnType("money")
                .HasColumnName("vlPrestadoContas");

            entity.HasOne(d => d.IdCatDespesaNavigation).WithMany(p => p.TbSbsPrestacaoConta)
                .HasForeignKey(d => d.IdCatDespesa)
                .HasConstraintName("FK_tbSbsPrestacaoContas_tbSbsCategoriasDespesa");

            entity.HasOne(d => d.IdLiquidacaoNavigation).WithMany(p => p.TbSbsPrestacaoConta)
                .HasForeignKey(d => d.IdLiquidacao)
                .HasConstraintName("FK_tbSbsPrestacaoContas_tbDspLiquidacoes");

            entity.HasOne(d => d.IdPagamentoNavigation).WithMany(p => p.TbSbsPrestacaoConta)
                .HasForeignKey(d => d.IdPagamento)
                .HasConstraintName("FK_tbSbsPrestacaoContas_tbDspPagamentos");

            entity.HasOne(d => d.IdReceitaNavigation).WithMany(p => p.TbSbsPrestacaoConta)
                .HasForeignKey(d => d.IdReceita)
                .HasConstraintName("FK_tbSbsPrestacaoContas_tbOrcReceitas");

            entity.HasOne(d => d.IdSubvencaoSocialNavigation).WithMany(p => p.TbSbsPrestacaoConta)
                .HasForeignKey(d => d.IdSubvencaoSocial)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbSbsPrestacaoContas_tbSbsSubvencaoSocial");

            entity.HasOne(d => d.IdTipoBeneficiarioNavigation).WithMany(p => p.TbSbsPrestacaoConta)
                .HasForeignKey(d => d.IdTipoBeneficiario)
                .HasConstraintName("FK_tbSbsPrestacaoContas_tbSbsTipoBeneficiarios");

            entity.HasOne(d => d.IdTipoDoctoFiscalNavigation).WithMany(p => p.TbSbsPrestacaoConta)
                .HasForeignKey(d => d.IdTipoDoctoFiscal)
                .HasConstraintName("FK_tbSbsPrestacaoContas_tbDspTiposDocumentosFiscais");
        });

        modelBuilder.Entity<TbSbsPrevisaoOrcamentarium>(entity =>
        {
            entity.HasKey(e => e.IdPrevisao);

            entity.ToTable("tbSbsPrevisaoOrcamentaria");

            entity.HasOne(d => d.IdSubVencaoSocialNavigation).WithMany(p => p.TbSbsPrevisaoOrcamentaria)
                .HasForeignKey(d => d.IdSubVencaoSocial)
                .HasConstraintName("FK_tbSbsPrevisaoOrcamentaria_tbSbsSubvencaoSocial");
        });

        modelBuilder.Entity<TbSbsProjeto>(entity =>
        {
            entity.HasKey(e => e.IdProjeto);

            entity.ToTable("tbSbsProjeto");

            entity.Property(e => e.IdProjeto).HasColumnName("idProjeto");
            entity.Property(e => e.CdProjeto)
                .HasMaxLength(10)
                .HasColumnName("cdProjeto");
            entity.Property(e => e.NmProjeto)
                .HasMaxLength(250)
                .HasColumnName("nmProjeto");

            entity.HasOne(d => d.IdSubVencaoSocialNavigation).WithMany(p => p.TbSbsProjetos)
                .HasForeignKey(d => d.IdSubVencaoSocial)
                .HasConstraintName("FK_tbSbsProjeto_tbSbsSubvencaoSocial");
        });

        modelBuilder.Entity<TbSbsRendimento>(entity =>
        {
            entity.HasKey(e => e.IdRendimento);

            entity.ToTable("tbSbsRendimentos");

            entity.Property(e => e.DsObservacoes)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("dsObservacoes");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlRendimento)
                .HasColumnType("money")
                .HasColumnName("vlRendimento");

            entity.HasOne(d => d.IdSubVencaoSocialNavigation).WithMany(p => p.TbSbsRendimentos)
                .HasForeignKey(d => d.IdSubVencaoSocial)
                .HasConstraintName("FK_tbSbsRendimentos_tbSbsSubvencaoSocial");
        });

        modelBuilder.Entity<TbSbsSubvencaoSocial>(entity =>
        {
            entity.HasKey(e => e.IdSubVencaoSocial);

            entity.ToTable("tbSbsSubvencaoSocial");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdContaContabilContraPartida)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilContraPartida");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdPeriodicidadePrestacao).HasColumnName("cdPeriodicidadePrestacao");
            entity.Property(e => e.CdSubvencaoSocial).HasColumnName("cdSubvencaoSocial");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsLeiAutorizatoria)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("dsLeiAutorizatoria");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObjeto)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DsTipoPrestaConta)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoPrestaConta");
            entity.Property(e => e.DtCelebracao)
                .HasColumnType("datetime")
                .HasColumnName("dtCelebracao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtInicioConvenio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioConvenio");
            entity.Property(e => e.DtPrazoFinal)
                .HasColumnType("datetime")
                .HasColumnName("dtPrazoFinal");
            entity.Property(e => e.DtPrazoInicial)
                .HasColumnType("datetime")
                .HasColumnName("dtPrazoInicial");
            entity.Property(e => e.DtPublicacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacao");
            entity.Property(e => e.DtVencimentoConvenio)
                .HasColumnType("datetime")
                .HasColumnName("dtVencimentoConvenio");
            entity.Property(e => e.FlRecebeDoacaoPortal)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flRecebeDoacaoPortal");
            entity.Property(e => e.IdLeiAto).HasColumnName("idLeiAto");
            entity.Property(e => e.IdPessoa).HasColumnName("idPessoa");
            entity.Property(e => e.IdTipoObjeto).HasColumnName("idTipoObjeto");
            entity.Property(e => e.IdTpEntidade).HasColumnName("idTpEntidade");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrArtigoLdo).HasColumnName("nrArtigoLDO");
            entity.Property(e => e.NrArtigoLoa).HasColumnName("nrArtigoLOA");
            entity.Property(e => e.NrEdicaoPublicacao).HasColumnName("nrEdicaoPublicacao");
            entity.Property(e => e.NrQtdPrevista).HasColumnName("nrQtdPrevista");
            entity.Property(e => e.NrTermo).HasColumnName("nrTermo");
            entity.Property(e => e.VlContrapartida)
                .HasColumnType("money")
                .HasColumnName("vlContrapartida");
            entity.Property(e => e.VlPrevisto)
                .HasColumnType("money")
                .HasColumnName("vlPrevisto");

            entity.HasOne(d => d.IdTipoExecucaoNavigation).WithMany(p => p.TbSbsSubvencaoSocials)
                .HasForeignKey(d => d.IdTipoExecucao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbSbsSubvencaoSocial_tbSbsTipoExecucao");

            entity.HasOne(d => d.IdTpEntidadeNavigation).WithMany(p => p.TbSbsSubvencaoSocials)
                .HasForeignKey(d => d.IdTpEntidade)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbSbsSubvencaoSocial_tbSbsTipoEntidades");

            entity.HasOne(d => d.IdUnidadeMedidaNavigation).WithMany(p => p.TbSbsSubvencaoSocials)
                .HasForeignKey(d => d.IdUnidadeMedida)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbSbsSubvencaoSocial_tbDspUnidadesMedida");

            entity.HasOne(d => d.IdVeiculoPublicacaoNavigation).WithMany(p => p.TbSbsSubvencaoSocials)
                .HasForeignKey(d => d.IdVeiculoPublicacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbSbsSubvencaoSocial_tbLicVeiculosPublicacoes");
        });

        modelBuilder.Entity<TbSbsSubvencaoSocialAnexosOldMigrado>(entity =>
        {
            entity.HasKey(e => e.IdAnexo).HasName("PK_tbSbsSubvencaoSocialAnexos");

            entity.ToTable("tbSbsSubvencaoSocialAnexos_OldMigrado");

            entity.Property(e => e.IdAnexo).HasColumnName("idAnexo");
            entity.Property(e => e.BnObjeto).HasColumnName("bnObjeto");
            entity.Property(e => e.DsExtencao)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("dsExtencao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObjeto)
                .HasMaxLength(255)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlPublicaPortalFornecedor)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPublicaPortalFornecedor");
            entity.Property(e => e.FlPublicaPortalTransparencia)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPublicaPortalTransparencia");
            entity.Property(e => e.NmAnexo)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("nmAnexo");

            entity.HasOne(d => d.IdSubVencaoSocialNavigation).WithMany(p => p.TbSbsSubvencaoSocialAnexosOldMigrados)
                .HasForeignKey(d => d.IdSubVencaoSocial)
                .HasConstraintName("FK_tbSbsSubvencaoSocialAnexos_tbSbsSubvencaoSocial");
        });

        modelBuilder.Entity<TbSbsSubvencaoSocialCompl>(entity =>
        {
            entity.HasKey(e => e.IdSubVencaoSocial);

            entity.ToTable("tbSbsSubvencaoSocialCompl");

            entity.Property(e => e.IdSubVencaoSocial).ValueGeneratedNever();
            entity.Property(e => e.DsCargoPessoaFiscalizador)
                .HasMaxLength(100)
                .HasColumnName("dsCargoPessoaFiscalizador");
            entity.Property(e => e.DsPeriodicoOficalCedente)
                .HasMaxLength(50)
                .HasColumnName("dsPeriodicoOficalCedente");
            entity.Property(e => e.DsPeriodicoOficalTomador)
                .HasMaxLength(50)
                .HasColumnName("dsPeriodicoOficalTomador");
            entity.Property(e => e.DtAtaConselho)
                .HasColumnType("datetime")
                .HasColumnName("dtAtaConselho");
            entity.Property(e => e.DtPublicacaoProcedimento)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoProcedimento");
            entity.Property(e => e.NrAnoProcedimento).HasColumnName("nrAnoProcedimento");
            entity.Property(e => e.NrAtaConselho)
                .HasMaxLength(10)
                .HasColumnName("nrAtaConselho");
            entity.Property(e => e.NrProcedimento)
                .HasMaxLength(10)
                .HasColumnName("nrProcedimento");

            entity.HasOne(d => d.IdContaCorrenteNavigation).WithMany(p => p.TbSbsSubvencaoSocialCompls)
                .HasForeignKey(d => d.IdContaCorrente)
                .HasConstraintName("FK_tbSbsSubvencaoSocialCompl_tbGerContasCorrente");

            entity.HasOne(d => d.IdPessoaFiscalizadorNavigation).WithMany(p => p.TbSbsSubvencaoSocialCompls)
                .HasForeignKey(d => d.IdPessoaFiscalizador)
                .HasConstraintName("FK_tbSbsSubvencaoSocialCompl_tbGerPessoas");

            entity.HasOne(d => d.IdSubVencaoSocialNavigation).WithOne(p => p.TbSbsSubvencaoSocialCompl)
                .HasForeignKey<TbSbsSubvencaoSocialCompl>(d => d.IdSubVencaoSocial)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbSbsSubvencaoSocialCompl_tbSbsSubvencaoSocial");

            entity.HasMany(d => d.Cds).WithMany(p => p.IdSubVencaoSocials)
                .UsingEntity<Dictionary<string, object>>(
                    "TbSbsSubvencaoSocialComplSit",
                    r => r.HasOne<TbSbsComplementosSit>().WithMany()
                        .HasForeignKey("CdTabelaSit", "CdCampoSit")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbSbsSubvencaoSocialComplSIT_tbSbsComplementosSIT1"),
                    l => l.HasOne<TbSbsSubvencaoSocialCompl>().WithMany()
                        .HasForeignKey("IdSubVencaoSocial")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbSbsSubvencaoSocialComplSIT_tbSbsSubvencaoSocialCompl1"),
                    j =>
                    {
                        j.HasKey("IdSubVencaoSocial", "CdTabelaSit", "CdCampoSit");
                        j.ToTable("tbSbsSubvencaoSocialComplSIT");
                        j.IndexerProperty<int>("CdTabelaSit").HasColumnName("cdTabelaSit");
                        j.IndexerProperty<string>("CdCampoSit")
                            .HasMaxLength(50)
                            .HasColumnName("cdCampoSit");
                    });
        });

        modelBuilder.Entity<TbSbsSubvencaoSocialEmpenho>(entity =>
        {
            entity.HasKey(e => new { e.IdSubVencaoSocial, e.IdEmpenho });

            entity.ToTable("tbSbsSubvencaoSocialEmpenhos");

            entity.Property(e => e.DsSetorArquivamento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsSetorArquivamento");
            entity.Property(e => e.DtProtocolo)
                .HasColumnType("datetime")
                .HasColumnName("dtProtocolo");
            entity.Property(e => e.NrProtocolo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrProtocolo");

            entity.HasOne(d => d.IdEmpenhoNavigation).WithMany(p => p.TbSbsSubvencaoSocialEmpenhos)
                .HasForeignKey(d => d.IdEmpenho)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbSbsSubvencaoSocialEmpenhos_tbDspEmpenhos");

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.TbSbsSubvencaoSocialEmpenhos)
                .HasForeignKey(d => d.IdPessoa)
                .HasConstraintName("FK_tbSbsSubvencaoSocialEmpenhos_tbGerPessoas");

            entity.HasOne(d => d.IdSubVencaoSocialNavigation).WithMany(p => p.TbSbsSubvencaoSocialEmpenhos)
                .HasForeignKey(d => d.IdSubVencaoSocial)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbSbsSubvencaoSocialEmpenhos_tbSbsSubvencaoSocial");
        });

        modelBuilder.Entity<TbSbsSubvencaoSocialPrestacao>(entity =>
        {
            entity.HasKey(e => e.IdPrestacao);

            entity.ToTable("tbSbsSubvencaoSocialPrestacao");

            entity.Property(e => e.IdPrestacao).HasColumnName("idPrestacao");
            entity.Property(e => e.DsJustificativa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsJustificativa");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtApresentada)
                .HasColumnType("datetime")
                .HasColumnName("dtApresentada");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtPrestacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPrestacao");
            entity.Property(e => e.NrPrazoAnalise).HasColumnName("nrPrazoAnalise");
            entity.Property(e => e.TpResultadoConclusivo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("tpResultadoConclusivo");

            entity.HasOne(d => d.IdSubVencaoSocialNavigation).WithMany(p => p.TbSbsSubvencaoSocialPrestacaos)
                .HasForeignKey(d => d.IdSubVencaoSocial)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbSbsSubvencaoSocialPrestacao_tbSbsSubvencaoSocial");
        });

        modelBuilder.Entity<TbSbsSubvencaoSocialUsuario>(entity =>
        {
            entity.HasKey(e => new { e.IdSubVencaoSocial, e.DsLogin });

            entity.ToTable("tbSbsSubvencaoSocialUsuarios");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .HasColumnName("dsLogin");
        });

        modelBuilder.Entity<TbSbsTipoBeneficiario>(entity =>
        {
            entity.HasKey(e => e.IdTipoBeneficiario);

            entity.ToTable("tbSbsTipoBeneficiarios");

            entity.Property(e => e.IdTipoBeneficiario).ValueGeneratedNever();
            entity.Property(e => e.NmTipoBeneficiario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmTipoBeneficiario");
        });

        modelBuilder.Entity<TbSbsTipoDespesa>(entity =>
        {
            entity.HasKey(e => e.CdTipoDespesa);

            entity.ToTable("tbSbsTipoDespesa");

            entity.Property(e => e.CdTipoDespesa)
                .ValueGeneratedNever()
                .HasColumnName("cdTipoDespesa");
            entity.Property(e => e.CdNatDespesa)
                .HasMaxLength(12)
                .HasColumnName("cdNatDespesa");
            entity.Property(e => e.DsTipoDespesa)
                .HasMaxLength(100)
                .HasColumnName("dsTipoDespesa");
        });

        modelBuilder.Entity<TbSbsTipoEntidade>(entity =>
        {
            entity.HasKey(e => e.IdTpEntidade);

            entity.ToTable("tbSbsTipoEntidades");

            entity.Property(e => e.DsTpEntidade)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTpEntidade");
        });

        modelBuilder.Entity<TbSbsTipoExecuco>(entity =>
        {
            entity.HasKey(e => e.IdTipoExecucao).HasName("PK_tbSbsTipoExecucao");

            entity.ToTable("tbSbsTipoExecucoes");

            entity.Property(e => e.IdTipoExecucao).ValueGeneratedNever();
            entity.Property(e => e.DsTipoExecucao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsTipoExecucao");
        });

        modelBuilder.Entity<TbSbsTipoObjeto>(entity =>
        {
            entity.HasKey(e => e.IdTipoObjeto);

            entity.ToTable("tbSbsTipoObjeto");

            entity.Property(e => e.IdTipoObjeto).HasColumnName("idTipoObjeto");
            entity.Property(e => e.DsTipoObjeto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTipoObjeto");
        });

        modelBuilder.Entity<TbSisQueriesParam>(entity =>
        {
            entity.HasKey(e => e.IdParam);

            entity.ToTable("tbSisQueriesParams");

            entity.Property(e => e.DsParam)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsParam");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.NmParam)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmParam");
        });

        modelBuilder.Entity<TbSisQuery>(entity =>
        {
            entity.HasKey(e => e.IdQuery);

            entity.ToTable("tbSisQueries");

            entity.Property(e => e.DsAgrapumento)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("dsAgrapumento");
            entity.Property(e => e.DsQuery)
                .IsUnicode(false)
                .HasColumnName("dsQuery");
            entity.Property(e => e.DsTipoQuery)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("dsTipoQuery");
            entity.Property(e => e.NmQuery)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmQuery");
        });

        modelBuilder.Entity<TbSisTexto>(entity =>
        {
            entity.HasKey(e => e.IdTexto);

            entity.ToTable("tbSisTextos");

            entity.Property(e => e.DsObservacao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsObservacao");
            entity.Property(e => e.DsTexto)
                .IsUnicode(false)
                .HasColumnName("dsTexto");
            entity.Property(e => e.DsTitulo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsTitulo");
            entity.Property(e => e.NmTexto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmTexto");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<TbStnCorrelacaoFonte>(entity =>
        {
            entity.HasKey(e => e.IdCorrelacao);

            entity.ToTable("tbStnCorrelacaoFontes");

            entity.Property(e => e.CdFonteGiig)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonteGIIG");
            entity.Property(e => e.CdFonteStn)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonteSTN");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<TbStnCorrelacaoNaturezasDespesa>(entity =>
        {
            entity.HasKey(e => e.IdCorrelacao);

            entity.ToTable("tbStnCorrelacaoNaturezasDespesa");

            entity.Property(e => e.CdNatDespesaGiig)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdNatDespesaGIIG");
            entity.Property(e => e.CdNatDespesaStn)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdNatDespesaSTN");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<TbStnFontePadrao>(entity =>
        {
            entity.HasKey(e => e.CdFontePadraoStn);

            entity.ToTable("tbStnFontePadrao");

            entity.Property(e => e.CdFontePadraoStn)
                .ValueGeneratedNever()
                .HasColumnName("cdFontePadraoSTN");
            entity.Property(e => e.DsEspecificação)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("dsEspecificação");
            entity.Property(e => e.DsFontePadraoStn)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsFontePadraoSTN");

            entity.HasMany(d => d.CdMarcadorStns).WithMany(p => p.CdFontePadraoStns)
                .UsingEntity<Dictionary<string, object>>(
                    "TbStnFontePadraoMarcador",
                    r => r.HasOne<TbStnMarcador>().WithMany()
                        .HasForeignKey("CdMarcadorStn")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbStnFontePadraoMarcador_tbStnMarcador"),
                    l => l.HasOne<TbStnFontePadrao>().WithMany()
                        .HasForeignKey("CdFontePadraoStn")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbStnFontePadraoMarcador_tbStnFontePadrao"),
                    j =>
                    {
                        j.HasKey("CdFontePadraoStn", "CdMarcadorStn");
                        j.ToTable("tbStnFontePadraoMarcador");
                        j.IndexerProperty<int>("CdFontePadraoStn").HasColumnName("cdFontePadraoSTN");
                        j.IndexerProperty<string>("CdMarcadorStn")
                            .HasMaxLength(4)
                            .IsUnicode(false)
                            .IsFixedLength()
                            .HasColumnName("cdMarcadorSTN");
                    });
        });

        modelBuilder.Entity<TbStnGrupoFontePadrao>(entity =>
        {
            entity.HasKey(e => e.CdGrupoFonte);

            entity.ToTable("tbStnGrupoFontePadrao");

            entity.Property(e => e.CdGrupoFonte)
                .ValueGeneratedNever()
                .HasColumnName("cdGrupoFonte");
            entity.Property(e => e.DsGrupo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsGrupo");
        });

        modelBuilder.Entity<TbStnMarcador>(entity =>
        {
            entity.HasKey(e => e.CdMarcadorStn);

            entity.ToTable("tbStnMarcador");

            entity.Property(e => e.CdMarcadorStn)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdMarcadorSTN");
            entity.Property(e => e.DsEspecificação)
                .HasMaxLength(600)
                .IsUnicode(false)
                .HasColumnName("dsEspecificação");
            entity.Property(e => e.DsMarcadorStn)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("dsMarcadorSTN");
        });

        modelBuilder.Entity<TbStnMatrizContabilImportaco>(entity =>
        {
            entity.HasKey(e => e.IdLancamento);

            entity.ToTable("tbStnMatrizContabilImportacoes");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.DsIc1)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsIc1");
            entity.Property(e => e.DsIc2)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsIc2");
            entity.Property(e => e.DsIc3)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsIc3");
            entity.Property(e => e.DsIc4)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsIc4");
            entity.Property(e => e.DsIc5)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsIc5");
            entity.Property(e => e.DsIc6)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsIc6");
            entity.Property(e => e.DsIc7)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsIc7");
            entity.Property(e => e.DsTipoIc1)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoIc1");
            entity.Property(e => e.DsTipoIc2)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoIc2");
            entity.Property(e => e.DsTipoIc3)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoIc3");
            entity.Property(e => e.DsTipoIc4)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoIc4");
            entity.Property(e => e.DsTipoIc5)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoIc5");
            entity.Property(e => e.DsTipoIc6)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoIc6");
            entity.Property(e => e.DsTipoIc7)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoIc7");
            entity.Property(e => e.DsTipoValor)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoValor");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.TpNaturezaValor)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpNaturezaValor");
            entity.Property(e => e.VlLancamento)
                .HasColumnType("money")
                .HasColumnName("vlLancamento");
        });

        modelBuilder.Entity<TbStnMatrizContabilLancamento>(entity =>
        {
            entity.HasKey(e => e.IdLancamentoMatriz);

            entity.ToTable("tbStnMatrizContabilLancamentos");

            entity.HasIndex(e => new { e.NrMes, e.NrAno, e.CdComplementoFonte }, "IX_tbStnMatrizContabilLancamentos_nrMes_nrAno_cdComplementoFonte_inc_IdLancMatriz_IdLanc_IdEmp_cdCC");

            entity.HasIndex(e => new { e.NrMes, e.NrAno, e.CdComplementoFonte }, "IX_tbStnMatrizContabilLancamentos_nrMes_nrAno_cdComplementoFonte_inc_IdLancamentoMatriz");

            entity.HasIndex(e => new { e.NrMes, e.NrAno, e.CdContaContabil }, "IX_tbStnMatrizContabilLancamentos_nrMes_nrAno_cdContaContabil_inc_IdEmpresa_vlLancamento_cdInfComp_tpNatValor");

            entity.HasIndex(e => new { e.NrMes, e.NrAno, e.CdContaContabil }, "IX_tbStnMatrizContabilLancamentos_nrMes_nrAno_cdContaContabil_inc_IdEmpresa_vlLancamento_cdInfComp_tpNatValor_dsTipoIC1");

            entity.HasIndex(e => new { e.NrMes, e.NrAno, e.CdEs }, "IX_tbStnMatrizContabilLancamentos_nrMes_nrAno_cdES_inc_IdLancamentoMatriz");

            entity.HasIndex(e => new { e.NrMes, e.NrAno, e.CdFonteStn, e.CdFonte }, "IX_tbStnMatrizContabilLancamentos_nrMes_nrAno_cdFonteSTN_cdFonte_inc_IdLancamentoMatriz");

            entity.HasIndex(e => new { e.NrMes, e.NrAno, e.CdFonte, e.CdFonteStn }, "IX_tbStnMatrizContabilLancamentos_nrMes_nrAno_cdFonte_cdFonteSTN_inc_IdLancamentoMatriz");

            entity.HasIndex(e => new { e.NrMes, e.NrAno, e.DsTipoValor }, "IX_tbStnMatrizContabilLancamentos_nrMes_nrAno_dsTipoValor_inc_IdLanc_IdEmp_cdCC_vlLanc");

            entity.HasIndex(e => new { e.NrMes, e.NrAno }, "IX_tbStnMatrizContabilLancamentos_nrMes_nrAno_inc_IdEmp_cdCC_vlLanc_tpNaturezaValor");

            entity.HasIndex(e => new { e.NrMes, e.NrAno }, "IX_tbStnMatrizContabilLancamentos_nrMes_nrAno_inc_IdLancMatriz_IdLanc_IdEmp_cdCC_vlLanc");

            entity.HasIndex(e => new { e.NrMes, e.NrAno }, "IX_tbStnMatrizContabilLancamentos_nrMes_nrAno_inc_IdLancamentoMatriz");

            entity.HasIndex(e => new { e.NrMes, e.NrAno }, "IX_tbStnMatrizContabilLancamentos_nrMes_nrAno_inc_cdCC_vlLanc_cdInfComp_tpNatVlr");

            entity.HasIndex(e => new { e.NrMes, e.NrAno }, "IX_tbStnMatrizContabilLancamentos_nrMes_nrAno_inc_cdCC_vlLanc_cdInfComp_tpNatVlr_dsTipoIC1");

            entity.HasIndex(e => new { e.NrMes, e.NrAno }, "IX_tbStnMatrizContabilLancamentos_nrMes_nrAno_inc_cdContaContabil_vlLancamento_cdInformacaoComplementar");

            entity.HasIndex(e => new { e.NrMes, e.NrAno, e.TpNaturezaValor, e.CdFonte }, "IX_tbStnMatrizContabilLancamentos_nrMes_nrAno_tpNaturezaValor_cdFonte_inc_IdLancamentoMatriz_IdLancamento");

            entity.HasIndex(e => new { e.NrMes, e.NrAno, e.TpNaturezaValor }, "IX_tbStnMatrizContabilLancamentos_nrMes_nrAno_tpNaturezaValor_inc_vlLancamento");

            entity.Property(e => e.CdComplementoFonte)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdComplementoFonte");
            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdDivida)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdDivida");
            entity.Property(e => e.CdEs)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdES");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.CdFonteStn)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonteSTN");
            entity.Property(e => e.CdFuncaoSubFuncao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdFuncaoSubFuncao");
            entity.Property(e => e.CdInformacaoComplementar)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdInformacaoComplementar");
            entity.Property(e => e.CdNatDespesa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdNatDespesa");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdReceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsIc1)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsIC1");
            entity.Property(e => e.DsNumObjeto)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsNumObjeto");
            entity.Property(e => e.DsObjeto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DsTipoIc1)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoIC1");
            entity.Property(e => e.DsTipoValor)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoValor");
            entity.Property(e => e.DtLancamento)
                .HasColumnType("datetime")
                .HasColumnName("dtLancamento");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrAnoRap).HasColumnName("nrAnoRAP");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.NrOrdemExibicao).HasColumnName("nrOrdemExibicao");
            entity.Property(e => e.TpFp)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpFP");
            entity.Property(e => e.TpNaturezaValor)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpNaturezaValor");
            entity.Property(e => e.VlLancamento)
                .HasColumnType("money")
                .HasColumnName("vlLancamento");
        });

        modelBuilder.Entity<TbStnPlanoConta>(entity =>
        {
            entity.HasKey(e => e.IdContaContabilStn);

            entity.ToTable("tbStnPlanoContas");

            entity.HasIndex(e => new { e.CdContaContabil, e.IdContaContabilStn }, "IX_tbStnPlanoContas_cdContaCantabil_IdContaContabilSTN_inc_tpSuperavitFinanceiro");

            entity.HasIndex(e => new { e.DsNivelConta, e.CdContaContabil, e.CdInformacaoComplementar }, "IX_tbStnPlanoContas_dsNivelConta_cdContaContabil_cdInformacaoComplementar").HasFillFactor(90);

            entity.Property(e => e.IdContaContabilStn).HasColumnName("IdContaContabilSTN");
            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdContaContabilRaiz)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilRaiz");
            entity.Property(e => e.CdInformacaoComplementar)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdInformacaoComplementar");
            entity.Property(e => e.DsContaContabil)
                .IsUnicode(false)
                .HasColumnName("dsContaContabil");
            entity.Property(e => e.DsInformacaoComplementar)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsInformacaoComplementar");
            entity.Property(e => e.DsNivelConta)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsNivelConta");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.TpNaturezaSaldo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpNaturezaSaldo");
            entity.Property(e => e.TpSuperavitFinanceiro)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpSuperavitFinanceiro");
        });

        modelBuilder.Entity<TbStnPlanoPadraoFonte>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbStnPlanoPadraoFonte");

            entity.Property(e => e.CdAplicacao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdAplicacao");
            entity.Property(e => e.CdDesdobramento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdDesdobramento");
            entity.Property(e => e.CdDetalhamento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdDetalhamento");
            entity.Property(e => e.CdFontePadrao)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFontePadrao");
            entity.Property(e => e.CdFontePadraoStn).HasColumnName("cdFontePadraoSTN");
            entity.Property(e => e.CdOrigem)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdOrigem");
            entity.Property(e => e.DsFonte)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("dsFonte");
            entity.Property(e => e.DtDesativacao)
                .HasColumnType("datetime")
                .HasColumnName("dtDesativacao");

            entity.HasOne(d => d.CdFontePadraoStnNavigation).WithMany()
                .HasForeignKey(d => d.CdFontePadraoStn)
                .HasConstraintName("FK_tbStnPlanoPadraoFonte_tbStnFontePadrao");
        });

        modelBuilder.Entity<TbSycSincronismo>(entity =>
        {
            entity.HasKey(e => e.IdSincronismo);

            entity.ToTable("tbSycSincronismos");

            entity.Property(e => e.DsDeleteCommand)
                .IsUnicode(false)
                .HasColumnName("dsDeleteCommand");
            entity.Property(e => e.DsResultado)
                .IsUnicode(false)
                .HasColumnName("dsResultado");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
            entity.Property(e => e.DsXmlfiltro)
                .IsUnicode(false)
                .HasColumnName("dsXMLFiltro");
            entity.Property(e => e.DtSincronia)
                .HasColumnType("datetime")
                .HasColumnName("dtSincronia");
        });

        modelBuilder.Entity<TbSysFilasContabei>(entity =>
        {
            entity.HasKey(e => new { e.CdObjeto, e.IdObjeto }).HasName("PK_tbSysFilasContabeis_1");

            entity.ToTable("tbSysFilasContabeis");

            entity.HasIndex(e => new { e.CdObjeto, e.IdObjeto }, "IX_tbSysFilasContabeis");

            entity.HasIndex(e => new { e.DtProcesso, e.DtObjeto }, "IX_tbSysFilasContabeis_1");

            entity.HasIndex(e => e.DtObjeto, "IX_tbSysFilasContabeis_dtObjeto_inc_1_2_7_8_9_10");

            entity.HasIndex(e => e.DtProcesso, "IX_tbSysFilasContabeis_dtProcesso");

            entity.HasIndex(e => new { e.IdObjeto, e.CdObjeto }, "IX_tbSysFilasContabeis_idObjeto_cdObjeto");

            entity.Property(e => e.CdObjeto)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdObjeto");
            entity.Property(e => e.IdObjeto).HasColumnName("idObjeto");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsErro)
                .IsUnicode(false)
                .HasColumnName("dsErro");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtObjeto)
                .HasColumnType("datetime")
                .HasColumnName("dtObjeto");
            entity.Property(e => e.DtProcesso)
                .HasColumnType("datetime")
                .HasColumnName("dtProcesso");
            entity.Property(e => e.IdEmpresa).HasColumnName("idEmpresa");
            entity.Property(e => e.NrEnderecoIp)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrEnderecoIP");

            entity.HasOne(d => d.CdObjetoNavigation).WithMany(p => p.TbSysFilasContabeis)
                .HasForeignKey(d => d.CdObjeto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbSysFilasContabeis_tbSysObjetosContabeis");
        });

        modelBuilder.Entity<TbSysIntegracaoSat>(entity =>
        {
            entity.HasKey(e => e.IdIntegracao);

            entity.ToTable("tbSysIntegracaoSAT");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsOrgao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsOrgao");
            entity.Property(e => e.DtGeracao)
                .HasColumnType("datetime")
                .HasColumnName("dtGeracao");
            entity.Property(e => e.DtRetencao)
                .HasColumnType("datetime")
                .HasColumnName("dtRetencao");
            entity.Property(e => e.FlTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flTipo");
            entity.Property(e => e.NmPrestador)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmPrestador");
            entity.Property(e => e.NrAliquota)
                .HasColumnType("money")
                .HasColumnName("nrAliquota");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrCnpjprestador)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrCNPJPrestador");
            entity.Property(e => e.NrCnpjtomador)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrCNPJTomador");
            entity.Property(e => e.NrCpfprestador)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nrCPFPrestador");
            entity.Property(e => e.NrInscricaoPrestador).HasColumnName("nrInscricaoPrestador");
            entity.Property(e => e.NrReferencia)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("nrReferencia");
            entity.Property(e => e.VlIssqn)
                .HasColumnType("money")
                .HasColumnName("vlISSQN");
            entity.Property(e => e.VlServico)
                .HasColumnType("money")
                .HasColumnName("vlServico");
        });

        modelBuilder.Entity<TbSysNumeraObjetoTce>(entity =>
        {
            entity.HasKey(e => e.IdNumeracao);

            entity.ToTable("tbSysNumeraObjetoTCE");

            entity.HasIndex(e => new { e.IdEmpresa, e.IdTabela, e.TpNumeracao, e.DtNumeracao }, "IX_tbSysNumeraObjetoTCE");

            entity.HasIndex(e => new { e.IdEmpresa, e.NrAno, e.NmTabela, e.TpNumeracao, e.DtNumeracao }, "IX_tbSysNumeraObjetoTCE_idEmpresa_nrAno_nmTabela_tpNumeracao_inc_nrSequencia_idTabela");

            entity.HasIndex(e => new { e.IdTabela, e.NmTabela, e.TpNumeracao }, "IX_tbSysNumeraObjetoTCE_idTabela_nmTabela_tpNumeracao");

            entity.HasIndex(e => new { e.IdTabela, e.NmTabela, e.TpNumeracao, e.IdNumeracao, e.NrSequencia }, "IX_tbSysNumeraObjetoTCE_idTabela_nmTabela_tpNumeracao_idNumeracao_nrSequencia");

            entity.HasIndex(e => new { e.IdTabela, e.TpNumeracao, e.NmTabela, e.NrSequencia }, "IX_tbSysNumeraObjetoTCE_idTabela_tpNumeracao_nmTabela_nrSequencia");

            entity.Property(e => e.IdNumeracao).HasColumnName("idNumeracao");
            entity.Property(e => e.DtNumeracao)
                .HasColumnType("datetime")
                .HasColumnName("dtNumeracao");
            entity.Property(e => e.IdEmpresa).HasColumnName("idEmpresa");
            entity.Property(e => e.IdTabela).HasColumnName("idTabela");
            entity.Property(e => e.NmTabela)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nmTabela");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.TpNumeracao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpNumeracao");
        });

        modelBuilder.Entity<TbSysObjetosContabei>(entity =>
        {
            entity.HasKey(e => e.CdObjeto);

            entity.ToTable("tbSysObjetosContabeis");

            entity.Property(e => e.CdObjeto)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdObjeto");
            entity.Property(e => e.DsSiglasIntegracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsSiglasIntegracao");
            entity.Property(e => e.NmAnterior)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmAnterior");
            entity.Property(e => e.NmClasse)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmClasse");
        });

        modelBuilder.Entity<TbTcmMatrizSaldosContasContabei>(entity =>
        {
            entity.HasKey(e => e.IdMatrizDespesa);

            entity.ToTable("tbTcmMatrizSaldosContasContabeis");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.CdNatDespesa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdNatDespesa");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdReceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsFuncaoSubFuncao)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsFuncaoSubFuncao");
            entity.Property(e => e.DsPoderOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("dsPoderOrgao");
            entity.Property(e => e.DsTipoValor)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoValor");
            entity.Property(e => e.FlDividaConsolidada)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flDividaConsolidada");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.NrOrdemExibicao).HasColumnName("nrOrdemExibicao");
            entity.Property(e => e.TpNaturezaValor)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpNaturezaValor");
            entity.Property(e => e.TpSuperavitFinanceiro)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpSuperavitFinanceiro");
            entity.Property(e => e.VlLancamento)
                .HasColumnType("money")
                .HasColumnName("vlLancamento");
        });

        modelBuilder.Entity<TbTcmPainelConferenciaDespesa>(entity =>
        {
            entity.HasKey(e => e.IdConferencia);

            entity.ToTable("tbTcmPainelConferenciaDespesa");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsPeriodo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsPeriodo");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlCreditoLiquidadoPagar)
                .HasColumnType("money")
                .HasColumnName("vlCreditoLiquidadoPagar");
            entity.Property(e => e.VlCreditoLiquidadoPago)
                .HasColumnType("money")
                .HasColumnName("vlCreditoLiquidadoPago");
            entity.Property(e => e.VlCreditoLiquidar)
                .HasColumnType("money")
                .HasColumnName("vlCreditoLiquidar");
            entity.Property(e => e.VlCreditoUtilizado)
                .HasColumnType("money")
                .HasColumnName("vlCreditoUtilizado");
            entity.Property(e => e.VlEmpenhadoDdr)
                .HasColumnType("money")
                .HasColumnName("vlEmpenhadoDDR");
            entity.Property(e => e.VlLiquidarDdr)
                .HasColumnType("money")
                .HasColumnName("vlLiquidarDDR");
            entity.Property(e => e.VlPagarDdr)
                .HasColumnType("money")
                .HasColumnName("vlPagarDDR");
            entity.Property(e => e.VlPagoDdr)
                .HasColumnType("money")
                .HasColumnName("vlPagoDDR");
        });

        modelBuilder.Entity<TbTempContasContabeisEstatai>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbTempContasContabeisEstatais");

            entity.Property(e => e.CdClase)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdClase");
            entity.Property(e => e.CdGrupo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdGrupo");
            entity.Property(e => e.CdItem)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdItem");
            entity.Property(e => e.CdNivel10)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdNivel10");
            entity.Property(e => e.CdNivel11)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdNivel11");
            entity.Property(e => e.CdNivel12)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdNivel12");
            entity.Property(e => e.CdNivel8)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdNivel8");
            entity.Property(e => e.CdNivel9)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdNivel9");
            entity.Property(e => e.CdSubGrupo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdSubGrupo");
            entity.Property(e => e.CdSubItem)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdSubItem");
            entity.Property(e => e.CdSubTitulo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdSubTitulo");
            entity.Property(e => e.CdTitulo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdTitulo");
            entity.Property(e => e.DsTitulo)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("dsTitulo");
            entity.Property(e => e.FlEscrituracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("flEscrituracao");
            entity.Property(e => e.Funcao)
                .HasMaxLength(5000)
                .IsUnicode(false);
            entity.Property(e => e.TpControle)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("tpControle");
            entity.Property(e => e.TpIndicSupFinanc)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("tpIndicSupFinanc");
            entity.Property(e => e.TpNaturezaInformacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("tpNaturezaInformacao");
            entity.Property(e => e.TpNaturezaSaldo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("tpNaturezaSaldo");
        });

        modelBuilder.Entity<TbTempDirf>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbTempDirf");

            entity.Property(e => e.CdReceitaIrrf)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdReceitaIRRF");
            entity.Property(e => e.DsTipoPessoa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoPessoa");
            entity.Property(e => e.NmPessoa)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmPessoa");
            entity.Property(e => e.NrCnpjcpf)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrCNPJCPF");
            entity.Property(e => e.Tipo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.VlAbril)
                .HasColumnType("money")
                .HasColumnName("vlAbril");
            entity.Property(e => e.VlAgosto)
                .HasColumnType("money")
                .HasColumnName("vlAgosto");
            entity.Property(e => e.VlDezembro)
                .HasColumnType("money")
                .HasColumnName("vlDezembro");
            entity.Property(e => e.VlFevereiro)
                .HasColumnType("money")
                .HasColumnName("vlFevereiro");
            entity.Property(e => e.VlJaneiro)
                .HasColumnType("money")
                .HasColumnName("vlJaneiro");
            entity.Property(e => e.VlJulho)
                .HasColumnType("money")
                .HasColumnName("vlJulho");
            entity.Property(e => e.VlJunho)
                .HasColumnType("money")
                .HasColumnName("vlJunho");
            entity.Property(e => e.VlMaio)
                .HasColumnType("money")
                .HasColumnName("vlMaio");
            entity.Property(e => e.VlMarco)
                .HasColumnType("money")
                .HasColumnName("vlMarco");
            entity.Property(e => e.VlNovembro)
                .HasColumnType("money")
                .HasColumnName("vlNovembro");
            entity.Property(e => e.VlOutubro)
                .HasColumnType("money")
                .HasColumnName("vlOutubro");
            entity.Property(e => e.VlSetembro)
                .HasColumnType("money")
                .HasColumnName("vlSetembro");
        });

        modelBuilder.Entity<TbTempHodometroHorimetro>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbTempHodometroHorimetro");

            entity.Property(e => e.CdBem).HasColumnName("cdBem");
            entity.Property(e => e.DsNotaExplicativa)
                .IsUnicode(false)
                .HasColumnName("dsNotaExplicativa");
            entity.Property(e => e.Flag)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("flag");
            entity.Property(e => e.IdPessoa).HasColumnName("idPessoa");
            entity.Property(e => e.IdTipoMedidor)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("idTipoMedidor");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMedicaoDeclarada)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrMedicaoDeclarada");
            entity.Property(e => e.NrMedicaoFinal)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrMedicaoFinal");
            entity.Property(e => e.NrMedicaoInicial)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrMedicaoInicial");
            entity.Property(e => e.NrMes)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("nrMes");
            entity.Property(e => e.NrSequencialHodoHori).HasColumnName("nrSequencialHodoHori");
        });

        modelBuilder.Entity<TbTempLicitacaoTce>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbTempLicitacaoTCE");

            entity.Property(e => e.CdImportacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdImportacao");
            entity.Property(e => e.DsMotivo)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtOcorrencia)
                .HasColumnType("datetime")
                .HasColumnName("dtOcorrencia");
            entity.Property(e => e.FlAtiva)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flAtiva");
            entity.Property(e => e.IdModalidadeTce)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("IdModalidadeTCE");
            entity.Property(e => e.IdSituacao).HasColumnName("idSituacao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrAnoTce)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrAnoTCE");
            entity.Property(e => e.NrLicitacao).HasColumnName("nrLicitacao");
            entity.Property(e => e.NrTce)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrTCE");
        });

        modelBuilder.Entity<TbTmpDeParaReceita>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.CdReceitaAnterior)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceitaAnterior");
            entity.Property(e => e.CdReceitaAtual)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceitaAtual");
        });

        modelBuilder.Entity<TbTmpDeParaReceitasOperacao>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TbTmpDeParaReceitasOperacao");

            entity.Property(e => e.IdReceitaAtual).HasColumnName("idReceitaAtual");
            entity.Property(e => e.IdReceitaFonte).HasColumnName("idReceitaFonte");
        });

        modelBuilder.Entity<TbTmpDespesaEmpenhadum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbTmpDespesaEmpenhada");

            entity.Property(e => e.Ano).HasColumnName("ano");
            entity.Property(e => e.IdDespesaEmpenhada).ValueGeneratedOnAdd();
            entity.Property(e => e.Mes).HasColumnName("mes");
            entity.Property(e => e.NrEmpenho).HasColumnName("nrEmpenho");
            entity.Property(e => e.ValorEmpenhado)
                .HasColumnType("money")
                .HasColumnName("valorEmpenhado");
            entity.Property(e => e.ValorEstornado)
                .HasColumnType("money")
                .HasColumnName("valorEstornado");
            entity.Property(e => e.ValorLiquido)
                .HasColumnType("money")
                .HasColumnName("valorLiquido");
            entity.Property(e => e.ValorRevertido)
                .HasColumnType("money")
                .HasColumnName("valorRevertido");
        });

        modelBuilder.Entity<TbTmpPlanoRealizado>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbTmpPlanoRealizado");

            entity.Property(e => e.CdConta)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdConta");
            entity.Property(e => e.DsConta)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsConta");
            entity.Property(e => e.DsPlanoConta)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsPlanoConta");
            entity.Property(e => e.DsTipoConta)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipoConta");
            entity.Property(e => e.DtExecucao)
                .HasColumnType("datetime")
                .HasColumnName("dtExecucao");
            entity.Property(e => e.Spid).HasColumnName("SPID");
            entity.Property(e => e.VlCreditosPeriodo)
                .HasColumnType("money")
                .HasColumnName("vlCreditosPeriodo");
            entity.Property(e => e.VlCreditosPeriodoSemEstorno)
                .HasColumnType("money")
                .HasColumnName("vlCreditosPeriodoSemEstorno");
            entity.Property(e => e.VlDebitosPeriodo)
                .HasColumnType("money")
                .HasColumnName("vlDebitosPeriodo");
            entity.Property(e => e.VlDebitosPeriodoSemEstorno)
                .HasColumnType("money")
                .HasColumnName("vlDebitosPeriodoSemEstorno");
            entity.Property(e => e.VlRealizado)
                .HasColumnType("money")
                .HasColumnName("vlRealizado");
            entity.Property(e => e.VlSaldoInicial)
                .HasColumnType("money")
                .HasColumnName("vlSaldoInicial");
        });

        modelBuilder.Entity<TbTrbCancelamentosTributo>(entity =>
        {
            entity.HasKey(e => e.IdCancelamento).HasName("PK_tbTrbCancelamentosTributos_idCancelamento");

            entity.ToTable("tbTrbCancelamentosTributos");

            entity.Property(e => e.IdCancelamento).HasColumnName("idCancelamento");
            entity.Property(e => e.DsMotivo)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.IdTipoCancelamento).HasColumnName("idTipoCancelamento");
            entity.Property(e => e.NmContribuinte)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmContribuinte");
            entity.Property(e => e.NrBimestre).HasColumnName("nrBimestre");
            entity.Property(e => e.NrContribuintes).HasColumnName("nrContribuintes");
            entity.Property(e => e.NrExercicio).HasColumnName("nrExercicio");
            entity.Property(e => e.NrExercicioDivida).HasColumnName("nrExercicioDivida");
            entity.Property(e => e.VlCancelado)
                .HasColumnType("money")
                .HasColumnName("vlCancelado");
        });

        modelBuilder.Entity<TbTrbEditaisContribMelhorium>(entity =>
        {
            entity.HasKey(e => e.IdEdital).HasName("PK_tbTrbEditaisContribMelhoria_idEdital");

            entity.ToTable("tbTrbEditaisContribMelhoria");

            entity.Property(e => e.IdEdital).HasColumnName("idEdital");
            entity.Property(e => e.DsObjeto)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DtEdital)
                .HasColumnType("datetime")
                .HasColumnName("dtEdital");
            entity.Property(e => e.NrBimestre).HasColumnName("nrBimestre");
            entity.Property(e => e.NrEdital).HasColumnName("nrEdital");
            entity.Property(e => e.NrExercicio).HasColumnName("nrExercicio");
        });

        modelBuilder.Entity<TbTrbRolDivida>(entity =>
        {
            entity.HasKey(e => e.IdDivida);

            entity.ToTable("tbTrbRolDividas");

            entity.HasIndex(e => e.IdDividaOrigem, "IX_tbTrbRolDividas");

            entity.HasIndex(e => new { e.CdTributo, e.TpCadastro, e.TpOperacao }, "IX_tbTrbRolDividas_1");

            entity.Property(e => e.IdDivida).HasColumnName("idDivida");
            entity.Property(e => e.CdDivida)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("cdDivida");
            entity.Property(e => e.CdTipoDeducao).HasColumnName("cdTipoDeducao");
            entity.Property(e => e.CdTributo).HasColumnName("cdTributo");
            entity.Property(e => e.DsDescricaoDeducao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsDescricaoDeducao");
            entity.Property(e => e.DsTributo)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("dsTributo");
            entity.Property(e => e.DtEdital)
                .HasColumnType("datetime")
                .HasColumnName("dtEdital");
            entity.Property(e => e.DtOperacao)
                .HasColumnType("datetime")
                .HasColumnName("dtOperacao");
            entity.Property(e => e.FlClassificado).HasColumnName("flClassificado");
            entity.Property(e => e.FlPagamentoTotal).HasColumnName("flPagamentoTotal");
            entity.Property(e => e.IdDividaOrigem).HasColumnName("idDividaOrigem");
            entity.Property(e => e.NmContribuinte)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmContribuinte");
            entity.Property(e => e.NrAnoDivida).HasColumnName("nrAnoDivida");
            entity.Property(e => e.NrAnoGeracao).HasColumnName("nrAnoGeracao");
            entity.Property(e => e.NrBimestre).HasColumnName("nrBimestre");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.NrEdital).HasColumnName("nrEdital");
            entity.Property(e => e.NrExercicio).HasColumnName("nrExercicio");
            entity.Property(e => e.NrParcela).HasColumnName("nrParcela");
            entity.Property(e => e.TpCadastro).HasColumnName("tpCadastro");
            entity.Property(e => e.TpDivida).HasColumnName("tpDivida");
            entity.Property(e => e.TpDocumento).HasColumnName("tpDocumento");
            entity.Property(e => e.TpOperacao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpOperacao");
            entity.Property(e => e.VlOperacao)
                .HasColumnType("money")
                .HasColumnName("vlOperacao");
        });

        modelBuilder.Entity<TbWflAnexo>(entity =>
        {
            entity.HasKey(e => e.IdAnexo);

            entity.ToTable("tbWflAnexos");

            entity.HasIndex(e => e.IdRemessa, "IX_tbWflAnexos_IdRemessa_inc_IdAnexo_dtAnexo_dsAnexo_dsTipoAnexo");

            entity.Property(e => e.DsAnexo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsAnexo");
            entity.Property(e => e.DsExtensaoAnexo)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("dsExtensaoAnexo");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsTipoAnexo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsTipoAnexo");
            entity.Property(e => e.DtAnexo)
                .HasColumnType("datetime")
                .HasColumnName("dtAnexo");
            entity.Property(e => e.ImAnexo)
                .HasColumnType("image")
                .HasColumnName("imAnexo");

            entity.HasOne(d => d.IdRemessaNavigation).WithMany(p => p.TbWflAnexos)
                .HasForeignKey(d => d.IdRemessa)
                .HasConstraintName("FK_tbWflAnexos_tbWflRemessas");
        });

        modelBuilder.Entity<TbWflDespachosFluxo>(entity =>
        {
            entity.HasKey(e => new { e.DsLogin, e.IdFluxoTramitacao, e.IdDespachoPadrao });

            entity.ToTable("tbWflDespachosFluxo");

            entity.HasIndex(e => e.IdFluxoTramitacao, "IX_tbWflDespachosFluxo_IdFluxoTramitacao_inc_dsLogin");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.FlEncaminhamento)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flEncaminhamento");
            entity.Property(e => e.FlRecebimento)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flRecebimento");

            entity.HasOne(d => d.IdDespachoPadraoNavigation).WithMany(p => p.TbWflDespachosFluxos)
                .HasForeignKey(d => d.IdDespachoPadrao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbWflDespachosFluxo_tbWflDespachosPadrao");

            entity.HasOne(d => d.IdFluxoTramitacaoNavigation).WithMany(p => p.TbWflDespachosFluxos)
                .HasForeignKey(d => d.IdFluxoTramitacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbWflDespachosFluxo_tbWflFluxosTramitacao");
        });

        modelBuilder.Entity<TbWflDespachosPadrao>(entity =>
        {
            entity.HasKey(e => e.IdDespachoPadrao).HasName("PK_tbWflDespachosFluxos");

            entity.ToTable("tbWflDespachosPadrao");

            entity.Property(e => e.DsDespachoPadrao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsDespachoPadrao");
            entity.Property(e => e.FlAprovaRequisicao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flAprovaRequisicao");
            entity.Property(e => e.FlCancelaRequisicao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flCancelaRequisicao");
            entity.Property(e => e.FlDespachaEmpenho)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flDespachaEmpenho");
            entity.Property(e => e.FlEncaminhaRmsLicitacao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flEncaminhaRmsLicitacao");
            entity.Property(e => e.FlInterrompeFluxo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flInterrompeFluxo");
            entity.Property(e => e.FlRequisicaoPendente)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flRequisicaoPendente");
            entity.Property(e => e.FlRetornaOrigem)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flRetornaOrigem");
            entity.Property(e => e.NmDespachoPadrao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmDespachoPadrao");
        });

        modelBuilder.Entity<TbWflFluxosTramitacao>(entity =>
        {
            entity.HasKey(e => e.IdFluxoTramitacao);

            entity.ToTable("tbWflFluxosTramitacao");

            entity.Property(e => e.NrFluxoTramitacao).HasColumnName("nrFluxoTramitacao");

            entity.HasOne(d => d.IdTipoFluxoNavigation).WithMany(p => p.TbWflFluxosTramitacaos)
                .HasForeignKey(d => d.IdTipoFluxo)
                .HasConstraintName("FK_tbWflFluxosTramitacao_tbWflTiposFluxos");

            entity.HasOne(d => d.IdTipoProcessoNavigation).WithMany(p => p.TbWflFluxosTramitacaos)
                .HasForeignKey(d => d.IdTipoProcesso)
                .HasConstraintName("FK_tbWflFluxosTramitacao_tbWflTiposProcessos");
        });

        modelBuilder.Entity<TbWflRecebimento>(entity =>
        {
            entity.HasKey(e => e.IdRecebimento);

            entity.ToTable("tbWflRecebimentos");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtRecebimento)
                .HasColumnType("datetime")
                .HasColumnName("dtRecebimento");
        });

        modelBuilder.Entity<TbWflRemessa>(entity =>
        {
            entity.HasKey(e => e.IdRemessa);

            entity.ToTable("tbWflRemessas");

            entity.HasIndex(e => new { e.IdRms, e.DtRemessa, e.IdDespachoPadrao, e.IdTipoFluxoDestino, e.IdTipoFluxoRemetente }, "IX_IdRms_dtRemessa_IdDespachoPadrao_IdTipoFluxoDestino")
                .IsDescending(false, true, false, false, false)
                .HasFillFactor(90);

            entity.Property(e => e.CdHashAssinatura)
                .IsUnicode(false)
                .HasColumnName("cdHashAssinatura");
            entity.Property(e => e.DsLoginRemetente)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginRemetente");
            entity.Property(e => e.DsRemessa)
                .IsUnicode(false)
                .HasColumnName("dsRemessa");
            entity.Property(e => e.DsSigner)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("dsSigner");
            entity.Property(e => e.DtRemessa)
                .HasColumnType("datetime")
                .HasColumnName("dtRemessa");

            entity.HasOne(d => d.IdDespachoPadraoNavigation).WithMany(p => p.TbWflRemessas)
                .HasForeignKey(d => d.IdDespachoPadrao)
                .HasConstraintName("FK_tbWflRemessas_tbWflDespachosPadrao");

            entity.HasOne(d => d.IdTipoFluxoDestinoNavigation).WithMany(p => p.TbWflRemessaIdTipoFluxoDestinoNavigations)
                .HasForeignKey(d => d.IdTipoFluxoDestino)
                .HasConstraintName("FK_tbWflRemessas_tbWflTiposFluxos1");

            entity.HasOne(d => d.IdTipoFluxoRemetenteNavigation).WithMany(p => p.TbWflRemessaIdTipoFluxoRemetenteNavigations)
                .HasForeignKey(d => d.IdTipoFluxoRemetente)
                .HasConstraintName("FK_tbWflRemessas_tbWflTiposFluxos");

            entity.HasMany(d => d.IdRecebimentos).WithMany(p => p.IdRemessas)
                .UsingEntity<Dictionary<string, object>>(
                    "TbWflRemessasRecebimento",
                    r => r.HasOne<TbWflRecebimento>().WithMany()
                        .HasForeignKey("IdRecebimento")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbWflRemessasRecebimento_tbWflRecebimentos"),
                    l => l.HasOne<TbWflRemessa>().WithMany()
                        .HasForeignKey("IdRemessa")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_tbWflRemessasRecebimento_tbWflRemessas"),
                    j =>
                    {
                        j.HasKey("IdRemessa", "IdRecebimento");
                        j.ToTable("tbWflRemessasRecebimento");
                    });
        });

        modelBuilder.Entity<TbWflRmsRessalva>(entity =>
        {
            entity.HasKey(e => e.IdRessalva);

            entity.ToTable("tbWflRmsRessalvas");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginResposta)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginResposta");
            entity.Property(e => e.DsResposta)
                .IsUnicode(false)
                .HasColumnName("dsResposta");
            entity.Property(e => e.DsRessalva)
                .IsUnicode(false)
                .HasColumnName("dsRessalva");
            entity.Property(e => e.DtResposta)
                .HasColumnType("datetime")
                .HasColumnName("dtResposta");
            entity.Property(e => e.DtRessalva)
                .HasColumnType("datetime")
                .HasColumnName("dtRessalva");
        });

        modelBuilder.Entity<TbWflTiposFluxo>(entity =>
        {
            entity.HasKey(e => e.IdTipoFluxo);

            entity.ToTable("tbWflTiposFluxos");

            entity.Property(e => e.DsTipoFluxo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsTipoFluxo");
            entity.Property(e => e.FlRestringeOrgaoUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flRestringeOrgaoUnidade");
            entity.Property(e => e.NmTipoFluxo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmTipoFluxo");
        });

        modelBuilder.Entity<TbWflTiposProcesso>(entity =>
        {
            entity.HasKey(e => e.IdTipoProcesso);

            entity.ToTable("tbWflTiposProcessos");

            entity.Property(e => e.CdNatDespesas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdNatDespesas");
            entity.Property(e => e.FlRestringeFluxo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flRestringeFluxo");
            entity.Property(e => e.NmTipoProcesso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nmTipoProcesso");
        });

        modelBuilder.Entity<TbaaaCcalterada>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbaaaCCalteradas");

            entity.Property(e => e.CdClasse)
                .HasMaxLength(1)
                .HasColumnName("cdClasse");
            entity.Property(e => e.CdGrupo)
                .HasMaxLength(1)
                .HasColumnName("cdGrupo");
            entity.Property(e => e.CdItem)
                .HasMaxLength(2)
                .HasColumnName("cdItem");
            entity.Property(e => e.CdNivel10)
                .HasMaxLength(2)
                .HasColumnName("cdNivel10");
            entity.Property(e => e.CdNivel11)
                .HasMaxLength(2)
                .HasColumnName("cdNivel11");
            entity.Property(e => e.CdNivel12)
                .HasMaxLength(2)
                .HasColumnName("cdNivel12");
            entity.Property(e => e.CdNivel8)
                .HasMaxLength(2)
                .HasColumnName("cdNivel8");
            entity.Property(e => e.CdNivel9)
                .HasMaxLength(2)
                .HasColumnName("cdNivel9");
            entity.Property(e => e.CdSubGrupo)
                .HasMaxLength(1)
                .HasColumnName("cdSubGrupo");
            entity.Property(e => e.CdSubItem)
                .HasMaxLength(2)
                .HasColumnName("cdSubItem");
            entity.Property(e => e.CdSubTitulo)
                .HasMaxLength(1)
                .HasColumnName("cdSubTitulo");
            entity.Property(e => e.CdTitulo)
                .HasMaxLength(1)
                .HasColumnName("cdTitulo");
            entity.Property(e => e.DsTitulo)
                .HasMaxLength(500)
                .HasColumnName("dsTitulo");
            entity.Property(e => e.FlEscrituracao)
                .HasMaxLength(1)
                .HasColumnName("flEscrituracao");
            entity.Property(e => e.Funcao)
                .HasMaxLength(500)
                .HasColumnName("FUNCAO");
            entity.Property(e => e.TpControle)
                .HasMaxLength(1)
                .HasColumnName("tpControle");
            entity.Property(e => e.TpIndicSupFinanc)
                .HasMaxLength(1)
                .HasColumnName("tpIndicSupFinanc");
            entity.Property(e => e.TpNaturezaInformacao)
                .HasMaxLength(1)
                .HasColumnName("tpNaturezaInformacao");
            entity.Property(e => e.TpNaturezaSaldo)
                .HasMaxLength(1)
                .HasColumnName("tpNaturezaSaldo");
        });

        modelBuilder.Entity<TbaaaCcexcluida>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbaaaCCexcluidas");

            entity.Property(e => e.CdClasse)
                .HasMaxLength(1)
                .HasColumnName("cdClasse");
            entity.Property(e => e.CdGrupo)
                .HasMaxLength(1)
                .HasColumnName("cdGrupo");
            entity.Property(e => e.CdItem)
                .HasMaxLength(2)
                .HasColumnName("cdItem");
            entity.Property(e => e.CdNivel10)
                .HasMaxLength(2)
                .HasColumnName("cdNivel10");
            entity.Property(e => e.CdNivel11)
                .HasMaxLength(2)
                .HasColumnName("cdNivel11");
            entity.Property(e => e.CdNivel12)
                .HasMaxLength(2)
                .HasColumnName("cdNivel12");
            entity.Property(e => e.CdNivel8)
                .HasMaxLength(2)
                .HasColumnName("cdNivel8");
            entity.Property(e => e.CdNivel9)
                .HasMaxLength(2)
                .HasColumnName("cdNivel9");
            entity.Property(e => e.CdSubGrupo)
                .HasMaxLength(1)
                .HasColumnName("cdSubGrupo");
            entity.Property(e => e.CdSubItem)
                .HasMaxLength(2)
                .HasColumnName("cdSubItem");
            entity.Property(e => e.CdSubTitulo)
                .HasMaxLength(1)
                .HasColumnName("cdSubTitulo");
            entity.Property(e => e.CdTitulo)
                .HasMaxLength(1)
                .HasColumnName("cdTitulo");
            entity.Property(e => e.DsTitulo)
                .HasMaxLength(500)
                .HasColumnName("dsTitulo");
            entity.Property(e => e.FlEscrituracao)
                .HasMaxLength(1)
                .HasColumnName("flEscrituracao");
            entity.Property(e => e.Funcao)
                .HasMaxLength(500)
                .HasColumnName("FUNCAO");
            entity.Property(e => e.TpControle)
                .HasMaxLength(1)
                .HasColumnName("tpControle");
            entity.Property(e => e.TpIndicSupFinanc)
                .HasMaxLength(1)
                .HasColumnName("tpIndicSupFinanc");
            entity.Property(e => e.TpNaturezaInformacao)
                .HasMaxLength(1)
                .HasColumnName("tpNaturezaInformacao");
            entity.Property(e => e.TpNaturezaSaldo)
                .HasMaxLength(1)
                .HasColumnName("tpNaturezaSaldo");
        });

        modelBuilder.Entity<TbaaaCcincluida>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbaaaCCincluidas");

            entity.Property(e => e.CdClasse)
                .HasMaxLength(1)
                .HasColumnName("cdClasse");
            entity.Property(e => e.CdGrupo)
                .HasMaxLength(1)
                .HasColumnName("cdGrupo");
            entity.Property(e => e.CdItem)
                .HasMaxLength(2)
                .HasColumnName("cdItem");
            entity.Property(e => e.CdNivel10)
                .HasMaxLength(2)
                .HasColumnName("cdNivel10");
            entity.Property(e => e.CdNivel11)
                .HasMaxLength(2)
                .HasColumnName("cdNivel11");
            entity.Property(e => e.CdNivel12)
                .HasMaxLength(2)
                .HasColumnName("cdNivel12");
            entity.Property(e => e.CdNivel8)
                .HasMaxLength(2)
                .HasColumnName("cdNivel8");
            entity.Property(e => e.CdNivel9)
                .HasMaxLength(2)
                .HasColumnName("cdNivel9");
            entity.Property(e => e.CdSubGrupo)
                .HasMaxLength(1)
                .HasColumnName("cdSubGrupo");
            entity.Property(e => e.CdSubItem)
                .HasMaxLength(2)
                .HasColumnName("cdSubItem");
            entity.Property(e => e.CdSubTitulo)
                .HasMaxLength(1)
                .HasColumnName("cdSubTitulo");
            entity.Property(e => e.CdTitulo)
                .HasMaxLength(1)
                .HasColumnName("cdTitulo");
            entity.Property(e => e.DsTitulo)
                .HasMaxLength(500)
                .HasColumnName("dsTitulo");
            entity.Property(e => e.FlEscrituracao)
                .HasMaxLength(1)
                .HasColumnName("flEscrituracao");
            entity.Property(e => e.Funcao)
                .HasMaxLength(500)
                .HasColumnName("FUNCAO");
            entity.Property(e => e.TpControle)
                .HasMaxLength(1)
                .HasColumnName("tpControle");
            entity.Property(e => e.TpIndicSupFinanc)
                .HasMaxLength(1)
                .HasColumnName("tpIndicSupFinanc");
            entity.Property(e => e.TpNaturezaInformacao)
                .HasMaxLength(1)
                .HasColumnName("tpNaturezaInformacao");
            entity.Property(e => e.TpNaturezaSaldo)
                .HasMaxLength(1)
                .HasColumnName("tpNaturezaSaldo");
        });

        modelBuilder.Entity<TbaaaCctoda>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbaaaCCtodas");

            entity.Property(e => e.CdClasse)
                .HasMaxLength(1)
                .HasColumnName("cdClasse");
            entity.Property(e => e.CdGrupo)
                .HasMaxLength(1)
                .HasColumnName("cdGrupo");
            entity.Property(e => e.CdItem)
                .HasMaxLength(2)
                .HasColumnName("cdItem");
            entity.Property(e => e.CdNivel10)
                .HasMaxLength(2)
                .HasColumnName("cdNivel10");
            entity.Property(e => e.CdNivel11)
                .HasMaxLength(2)
                .HasColumnName("cdNivel11");
            entity.Property(e => e.CdNivel12)
                .HasMaxLength(2)
                .HasColumnName("cdNivel12");
            entity.Property(e => e.CdNivel8)
                .HasMaxLength(2)
                .HasColumnName("cdNivel8");
            entity.Property(e => e.CdNivel9)
                .HasMaxLength(2)
                .HasColumnName("cdNivel9");
            entity.Property(e => e.CdSubGrupo)
                .HasMaxLength(1)
                .HasColumnName("cdSubGrupo");
            entity.Property(e => e.CdSubItem)
                .HasMaxLength(2)
                .HasColumnName("cdSubItem");
            entity.Property(e => e.CdSubTitulo)
                .HasMaxLength(1)
                .HasColumnName("cdSubTitulo");
            entity.Property(e => e.CdTitulo)
                .HasMaxLength(1)
                .HasColumnName("cdTitulo");
            entity.Property(e => e.DsTitulo).HasColumnName("dsTitulo");
            entity.Property(e => e.FlEscrituracao)
                .HasMaxLength(1)
                .HasColumnName("flEscrituracao");
            entity.Property(e => e.Funcao).HasColumnName("FUNCAO");
            entity.Property(e => e.TpControle)
                .HasMaxLength(1)
                .HasColumnName("tpControle");
            entity.Property(e => e.TpIndicSupFinanc)
                .HasMaxLength(1)
                .HasColumnName("tpIndicSupFinanc");
            entity.Property(e => e.TpNaturezaInformacao)
                .HasMaxLength(1)
                .HasColumnName("tpNaturezaInformacao");
            entity.Property(e => e.TpNaturezaSaldo)
                .HasMaxLength(1)
                .HasColumnName("tpNaturezaSaldo");
        });

        modelBuilder.Entity<TbaaaDespesa>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbaaaDespesa");

            entity.Property(e => e.Especificacao).HasColumnName("ESPECIFICACAO");
            entity.Property(e => e.Nivel1).HasMaxLength(1);
            entity.Property(e => e.Nivel2)
                .HasMaxLength(1)
                .HasColumnName("nivel2");
            entity.Property(e => e.Nivel3)
                .HasMaxLength(2)
                .HasColumnName("nivel3");
            entity.Property(e => e.Nivel4)
                .HasMaxLength(2)
                .HasColumnName("nivel4");
            entity.Property(e => e.Nivel5)
                .HasMaxLength(2)
                .HasColumnName("nivel5");
            entity.Property(e => e.Nivel6)
                .HasMaxLength(2)
                .HasColumnName("nivel6");
            entity.Property(e => e.Nivelsa)
                .HasMaxLength(1)
                .HasColumnName("NIVELSA");
            entity.Property(e => e.Rpps)
                .HasMaxLength(1)
                .HasColumnName("RPPS");
            entity.Property(e => e.Titulo).HasColumnName("TITULO");
            entity.Property(e => e.Versao)
                .HasMaxLength(1)
                .HasColumnName("VERSAO");
        });

        modelBuilder.Entity<TbdspliquidacoesdoctosintegradosBck>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbdspliquidacoesdoctosintegrados_bck");

            entity.Property(e => e.DsSituacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.IdNfse).HasColumnName("idNfse");
            entity.Property(e => e.VlAliquota)
                .HasColumnType("money")
                .HasColumnName("vlAliquota");
            entity.Property(e => e.VlIss)
                .HasColumnType("money")
                .HasColumnName("vlISS");
        });

        modelBuilder.Entity<TbsbsSaldoBancario>(entity =>
        {
            entity.HasKey(e => e.IdSaldoBancario);

            entity.ToTable("tbsbsSaldoBancario");

            entity.Property(e => e.DtSaldoBancario)
                .HasColumnType("datetime")
                .HasColumnName("dtSaldoBancario");
            entity.Property(e => e.VlSaldoContaApliccao)
                .HasColumnType("money")
                .HasColumnName("vlSaldoContaApliccao");
            entity.Property(e => e.VlSaldoContaCorrente)
                .HasColumnType("money")
                .HasColumnName("vlSaldoContaCorrente");

            entity.HasOne(d => d.IdSubvencaoSocialNavigation).WithMany(p => p.TbsbsSaldoBancarios)
                .HasForeignKey(d => d.IdSubvencaoSocial)
                .HasConstraintName("FK_tbsbsSaldoBancario_tbSbsSubvencaoSocial");
        });

        modelBuilder.Entity<Tbsimamestornodividaativa>(entity =>
        {
            entity.HasKey(e => e.Idestorno);

            entity.ToTable("tbsimamestornodividaativa");

            entity.Property(e => e.Idestorno)
                .ValueGeneratedNever()
                .HasColumnName("idestorno");
            entity.Property(e => e.Dsmotivo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsmotivo");
            entity.Property(e => e.Dtestorno)
                .HasColumnType("date")
                .HasColumnName("dtestorno");
            entity.Property(e => e.Idlei).HasColumnName("idlei");
            entity.Property(e => e.Nranosequencia).HasColumnName("nranosequencia");
            entity.Property(e => e.NranosequenciaDa).HasColumnName("nranosequenciaDA");
            entity.Property(e => e.Nrsequencia).HasColumnName("nrsequencia");
            entity.Property(e => e.NrsequenciaDa).HasColumnName("nrsequenciaDA");
            entity.Property(e => e.Vlatualizacao)
                .HasColumnType("money")
                .HasColumnName("vlatualizacao");
            entity.Property(e => e.Vlestorno)
                .HasColumnType("money")
                .HasColumnName("vlestorno");
        });

        modelBuilder.Entity<Tbsimarrecadacaocredito>(entity =>
        {
            entity.HasKey(e => e.Idarrecadacao);

            entity.ToTable("tbsimarrecadacaocredito");

            entity.Property(e => e.Idarrecadacao).HasColumnName("idarrecadacao");
            entity.Property(e => e.Idtipoarrecadacao).HasColumnName("idtipoarrecadacao");
            entity.Property(e => e.Idtipoorigemreceita).HasColumnName("idtipoorigemreceita");
            entity.Property(e => e.Nranoarrecadacao).HasColumnName("nranoarrecadacao");
            entity.Property(e => e.Nranosequencial).HasColumnName("nranosequencial");
            entity.Property(e => e.NranosequencialDa).HasColumnName("nranosequencialDA");
            entity.Property(e => e.Nranosequencialinscricao).HasColumnName("nranosequencialinscricao");
            entity.Property(e => e.Nrmesarrecadacao).HasColumnName("nrmesarrecadacao");
            entity.Property(e => e.Nrsequencial).HasColumnName("nrsequencial");
            entity.Property(e => e.NrsequencialDa).HasColumnName("nrsequencialDA");
            entity.Property(e => e.NrsequencialInscricao).HasColumnName("nrsequencialInscricao");
            entity.Property(e => e.Vloperacao)
                .HasColumnType("money")
                .HasColumnName("vloperacao");
        });

        modelBuilder.Entity<TbsimarrecadacaocreditoAux>(entity =>
        {
            entity.HasKey(e => e.Idarrecadacao);

            entity.ToTable("tbsimarrecadacaocreditoAUX");

            entity.Property(e => e.Idarrecadacao).HasColumnName("idarrecadacao");
            entity.Property(e => e.Idtipoarrecadacao).HasColumnName("idtipoarrecadacao");
            entity.Property(e => e.Idtipocredito).HasColumnName("idtipocredito");
            entity.Property(e => e.Idtipoorigemreceita).HasColumnName("idtipoorigemreceita");
            entity.Property(e => e.Nranoarrecadacao).HasColumnName("nranoarrecadacao");
            entity.Property(e => e.NranosequencialDa).HasColumnName("nranosequencialDA");
            entity.Property(e => e.Nranosequencialinscricao).HasColumnName("nranosequencialinscricao");
            entity.Property(e => e.Nrmesarrecadacao).HasColumnName("nrmesarrecadacao");
            entity.Property(e => e.NrsequencialDa).HasColumnName("nrsequencialDA");
            entity.Property(e => e.NrsequencialInscricao).HasColumnName("nrsequencialInscricao");
            entity.Property(e => e.Vloperacao)
                .HasColumnType("money")
                .HasColumnName("vloperacao");
        });

        modelBuilder.Entity<Tbsimatualizacaocredito>(entity =>
        {
            entity.HasKey(e => e.Idlancamento);

            entity.ToTable("tbsimatualizacaocredito");

            entity.Property(e => e.Idlancamento).HasColumnName("idlancamento");
            entity.Property(e => e.Dtatualizacao)
                .HasColumnType("date")
                .HasColumnName("dtatualizacao");
            entity.Property(e => e.Nranosequencia).HasColumnName("nranosequencia");
            entity.Property(e => e.Nranosequenciacredito).HasColumnName("nranosequenciacredito");
            entity.Property(e => e.Nrsequencia).HasColumnName("nrsequencia");
            entity.Property(e => e.Nrsequenciacredito).HasColumnName("nrsequenciacredito");
            entity.Property(e => e.Tipooperacao).HasColumnName("tipooperacao");
            entity.Property(e => e.Vlatualizacao)
                .HasColumnType("money")
                .HasColumnName("vlatualizacao");
        });

        modelBuilder.Entity<TbsimatualizacaocreditoAux>(entity =>
        {
            entity.HasKey(e => e.Idlancamento);

            entity.ToTable("tbsimatualizacaocreditoAUX");

            entity.Property(e => e.Idlancamento).HasColumnName("idlancamento");
            entity.Property(e => e.Dtatualizacao)
                .HasColumnType("date")
                .HasColumnName("dtatualizacao");
            entity.Property(e => e.Nranosequenciacredito).HasColumnName("nranosequenciacredito");
            entity.Property(e => e.Nrsequenciacredito).HasColumnName("nrsequenciacredito");
            entity.Property(e => e.Tipooperacao).HasColumnName("tipooperacao");
            entity.Property(e => e.Vlatualizacao)
                .HasColumnType("money")
                .HasColumnName("vlatualizacao");
        });

        modelBuilder.Entity<Tbsimatualizacaodividaativa>(entity =>
        {
            entity.HasKey(e => e.Idlancamento);

            entity.ToTable("tbsimatualizacaodividaativa");

            entity.Property(e => e.Idlancamento).HasColumnName("idlancamento");
            entity.Property(e => e.Dtatualizacao)
                .HasColumnType("date")
                .HasColumnName("dtatualizacao");
            entity.Property(e => e.Nranosequencia).HasColumnName("nranosequencia");
            entity.Property(e => e.NranosequenciaDa).HasColumnName("nranosequenciaDA");
            entity.Property(e => e.Nrsequencia).HasColumnName("nrsequencia");
            entity.Property(e => e.NrsequenciaDa).HasColumnName("nrsequenciaDA");
            entity.Property(e => e.Tipooperacao).HasColumnName("tipooperacao");
            entity.Property(e => e.Vlatualizacao)
                .HasColumnType("money")
                .HasColumnName("vlatualizacao");
        });

        modelBuilder.Entity<TbsimatualizacaodividaativaAux>(entity =>
        {
            entity.HasKey(e => e.Idlancamento);

            entity.ToTable("tbsimatualizacaodividaativaAUX");

            entity.Property(e => e.Idlancamento).HasColumnName("idlancamento");
            entity.Property(e => e.Dtatualizacao)
                .HasColumnType("date")
                .HasColumnName("dtatualizacao");
            entity.Property(e => e.NranosequenciaDa).HasColumnName("nranosequenciaDA");
            entity.Property(e => e.NrsequenciaDa).HasColumnName("nrsequenciaDA");
            entity.Property(e => e.Tipooperacao).HasColumnName("tipooperacao");
            entity.Property(e => e.Vlatualizacao)
                .HasColumnType("money")
                .HasColumnName("vlatualizacao");
        });

        modelBuilder.Entity<Tbsimdeducaodividaativa>(entity =>
        {
            entity.HasKey(e => e.Idlancamento);

            entity.ToTable("tbsimdeducaodividaativa");

            entity.Property(e => e.Idlancamento).HasColumnName("idlancamento");
            entity.Property(e => e.Dtdeducao)
                .HasColumnType("date")
                .HasColumnName("dtdeducao");
            entity.Property(e => e.Nranosequencia).HasColumnName("nranosequencia");
            entity.Property(e => e.NranosequenciaDa).HasColumnName("nranosequenciaDA");
            entity.Property(e => e.Nrsequencia).HasColumnName("nrsequencia");
            entity.Property(e => e.NrsequenciaDa).HasColumnName("nrsequenciaDA");
            entity.Property(e => e.Tipooperacao).HasColumnName("tipooperacao");
            entity.Property(e => e.Vldeducao)
                .HasColumnType("money")
                .HasColumnName("vldeducao");
        });

        modelBuilder.Entity<TbsimdeducaodividaativaAux>(entity =>
        {
            entity.HasKey(e => e.Idlancamento);

            entity.ToTable("tbsimdeducaodividaativaAUX");

            entity.Property(e => e.Idlancamento).HasColumnName("idlancamento");
            entity.Property(e => e.Dsmotivo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsmotivo");
            entity.Property(e => e.Dtdeducao)
                .HasColumnType("date")
                .HasColumnName("dtdeducao");
            entity.Property(e => e.Idleiato).HasColumnName("idleiato");
            entity.Property(e => e.NranosequenciaDa).HasColumnName("nranosequenciaDA");
            entity.Property(e => e.NrsequenciaDa).HasColumnName("nrsequenciaDA");
            entity.Property(e => e.Tipooperacao).HasColumnName("tipooperacao");
            entity.Property(e => e.Vldeducao)
                .HasColumnType("money")
                .HasColumnName("vldeducao");
        });

        modelBuilder.Entity<Tbsimdeducaolancamentocredito>(entity =>
        {
            entity.HasKey(e => e.Idlancamento);

            entity.ToTable("tbsimdeducaolancamentocredito");

            entity.Property(e => e.Idlancamento).HasColumnName("idlancamento");
            entity.Property(e => e.Dtdeducao)
                .HasColumnType("date")
                .HasColumnName("dtdeducao");
            entity.Property(e => e.Idleiato).HasColumnName("idleiato");
            entity.Property(e => e.Nranosequencia).HasColumnName("nranosequencia");
            entity.Property(e => e.Nranosequenciacredito).HasColumnName("nranosequenciacredito");
            entity.Property(e => e.Nrsequencia).HasColumnName("nrsequencia");
            entity.Property(e => e.Nrsequenciacredito).HasColumnName("nrsequenciacredito");
            entity.Property(e => e.Tipooperacao).HasColumnName("tipooperacao");
            entity.Property(e => e.Vldeducao)
                .HasColumnType("money")
                .HasColumnName("vldeducao");
        });

        modelBuilder.Entity<TbsimdeducaolancamentocreditoAux>(entity =>
        {
            entity.HasKey(e => e.Idlancamento);

            entity.ToTable("tbsimdeducaolancamentocreditoAUX");

            entity.Property(e => e.Idlancamento).HasColumnName("idlancamento");
            entity.Property(e => e.Dsmotivo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsmotivo");
            entity.Property(e => e.Dtdeducao)
                .HasColumnType("date")
                .HasColumnName("dtdeducao");
            entity.Property(e => e.Idcredito).HasColumnName("idcredito");
            entity.Property(e => e.Nranosequenciainscricao).HasColumnName("nranosequenciainscricao");
            entity.Property(e => e.Nrsequenciainscricao).HasColumnName("nrsequenciainscricao");
            entity.Property(e => e.Tipooperacao).HasColumnName("tipooperacao");
            entity.Property(e => e.Vldeducao)
                .HasColumnType("money")
                .HasColumnName("vldeducao");
        });

        modelBuilder.Entity<Tbsimestornoarrecadacaocredito>(entity =>
        {
            entity.HasKey(e => e.Idlancamento);

            entity.ToTable("tbsimestornoarrecadacaocredito");

            entity.Property(e => e.Idlancamento).HasColumnName("idlancamento");
            entity.Property(e => e.Idcredito).HasColumnName("idcredito");
            entity.Property(e => e.Nranoestorno).HasColumnName("nranoestorno");
            entity.Property(e => e.Nranosequencia).HasColumnName("nranosequencia");
            entity.Property(e => e.Nranosequenciacredito).HasColumnName("nranosequenciacredito");
            entity.Property(e => e.Nrmesestorno).HasColumnName("nrmesestorno");
            entity.Property(e => e.Nrsequencia).HasColumnName("nrsequencia");
            entity.Property(e => e.Nrsequenciacredito).HasColumnName("nrsequenciacredito");
            entity.Property(e => e.Vlestorno)
                .HasColumnType("money")
                .HasColumnName("vlestorno");
        });

        modelBuilder.Entity<TbsimestornoarrecadacaocreditoAux>(entity =>
        {
            entity.HasKey(e => e.Idlancamento);

            entity.ToTable("tbsimestornoarrecadacaocreditoAUX");

            entity.Property(e => e.Idlancamento).HasColumnName("idlancamento");
            entity.Property(e => e.Idcredito).HasColumnName("idcredito");
            entity.Property(e => e.Nranoestorno).HasColumnName("nranoestorno");
            entity.Property(e => e.NranosequenciaDa).HasColumnName("nranosequenciaDA");
            entity.Property(e => e.Nranosequenciacredito).HasColumnName("nranosequenciacredito");
            entity.Property(e => e.Nrmesestorno).HasColumnName("nrmesestorno");
            entity.Property(e => e.NrsequenciaDa).HasColumnName("nrsequenciaDA");
            entity.Property(e => e.Nrsequenciacredito).HasColumnName("nrsequenciacredito");
            entity.Property(e => e.Vlestorno)
                .HasColumnType("money")
                .HasColumnName("vlestorno");
        });

        modelBuilder.Entity<Tbsimestornolancamentocredito>(entity =>
        {
            entity.HasKey(e => e.Idlancamento);

            entity.ToTable("tbsimestornolancamentocredito");

            entity.Property(e => e.Idlancamento).HasColumnName("idlancamento");
            entity.Property(e => e.Dsmotivo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsmotivo");
            entity.Property(e => e.Dtestorno)
                .HasColumnType("date")
                .HasColumnName("dtestorno");
            entity.Property(e => e.Nranosequencia).HasColumnName("nranosequencia");
            entity.Property(e => e.Nranosequenciainscricao).HasColumnName("nranosequenciainscricao");
            entity.Property(e => e.Nrsequencia).HasColumnName("nrsequencia");
            entity.Property(e => e.Nrsequenciainscricao).HasColumnName("nrsequenciainscricao");
            entity.Property(e => e.Vlestorno)
                .HasColumnType("money")
                .HasColumnName("vlestorno");
        });

        modelBuilder.Entity<TbsimestornolancamentocreditoAux>(entity =>
        {
            entity.HasKey(e => e.Idlancamento);

            entity.ToTable("tbsimestornolancamentocreditoAUX");

            entity.Property(e => e.Idlancamento).HasColumnName("idlancamento");
            entity.Property(e => e.Dsmotivo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsmotivo");
            entity.Property(e => e.Dtestorno)
                .HasColumnType("date")
                .HasColumnName("dtestorno");
            entity.Property(e => e.Nranosequenciainscricao).HasColumnName("nranosequenciainscricao");
            entity.Property(e => e.Nrsequenciainscricao).HasColumnName("nrsequenciainscricao");
            entity.Property(e => e.Vlestorno)
                .HasColumnType("money")
                .HasColumnName("vlestorno");
        });

        modelBuilder.Entity<Tbsiminscricaodividaativa>(entity =>
        {
            entity.HasKey(e => e.Idlancamento);

            entity.ToTable("tbsiminscricaodividaativa");

            entity.Property(e => e.Idlancamento).HasColumnName("idlancamento");
            entity.Property(e => e.Dtinscricao)
                .HasColumnType("date")
                .HasColumnName("dtinscricao");
            entity.Property(e => e.Idleiato).HasColumnName("idleiato");
            entity.Property(e => e.Idnaturezacredito).HasColumnName("idnaturezacredito");
            entity.Property(e => e.Idtipocredito).HasColumnName("idtipocredito");
            entity.Property(e => e.Idtipooperacao).HasColumnName("idtipooperacao");
            entity.Property(e => e.Nranobase).HasColumnName("nranobase");
            entity.Property(e => e.Nranoinscricao).HasColumnName("nranoinscricao");
            entity.Property(e => e.Nranosequencia).HasColumnName("nranosequencia");
            entity.Property(e => e.Nrsequencia).HasColumnName("nrsequencia");
            entity.Property(e => e.TapId).HasColumnName("TapID");
            entity.Property(e => e.Vlinscrito)
                .HasColumnType("numeric(14, 2)")
                .HasColumnName("vlinscrito");
        });

        modelBuilder.Entity<TbsiminscricaodividaativaDivida>(entity =>
        {
            entity.HasKey(e => e.Idlancamento).HasName("PK_tbsiminscricaodividaativaAUX");

            entity.ToTable("tbsiminscricaodividaativaDividas");

            entity.Property(e => e.Idlancamento).HasColumnName("idlancamento");
            entity.Property(e => e.ConIddivida).HasColumnName("ConIDDivida");
            entity.Property(e => e.DivEmpId).HasColumnName("DivEmpID");
            entity.Property(e => e.Dtinscricao)
                .HasColumnType("date")
                .HasColumnName("dtinscricao");
            entity.Property(e => e.Idleiato).HasColumnName("idleiato");
            entity.Property(e => e.Idnaturezacredito).HasColumnName("idnaturezacredito");
            entity.Property(e => e.Idtipocredito).HasColumnName("idtipocredito");
            entity.Property(e => e.Idtipooperacao).HasColumnName("idtipooperacao");
            entity.Property(e => e.ImoIddivida).HasColumnName("ImoIDDivida");
            entity.Property(e => e.Nranobase).HasColumnName("nranobase");
            entity.Property(e => e.Nranoinscricao).HasColumnName("nranoinscricao");
            entity.Property(e => e.Vlinscrito)
                .HasColumnType("numeric(14, 2)")
                .HasColumnName("vlinscrito");
        });

        modelBuilder.Entity<Tbsimlancamentocredito>(entity =>
        {
            entity.HasKey(e => e.Idlancamento);

            entity.ToTable("tbsimlancamentocredito");

            entity.Property(e => e.Idlancamento).HasColumnName("idlancamento");
            entity.Property(e => e.Dtlancamento)
                .HasColumnType("date")
                .HasColumnName("dtlancamento");
            entity.Property(e => e.Idleiato).HasColumnName("idleiato");
            entity.Property(e => e.Idnaturezacredito).HasColumnName("idnaturezacredito");
            entity.Property(e => e.Idtipocredito).HasColumnName("idtipocredito");
            entity.Property(e => e.Idtipooperacao).HasColumnName("idtipooperacao");
            entity.Property(e => e.Nranocompetencia).HasColumnName("nranocompetencia");
            entity.Property(e => e.Nranosequencia).HasColumnName("nranosequencia");
            entity.Property(e => e.Nrmescompetencia).HasColumnName("nrmescompetencia");
            entity.Property(e => e.Nrsequencia).HasColumnName("nrsequencia");
            entity.Property(e => e.Vlexcesso)
                .HasColumnType("money")
                .HasColumnName("vlexcesso");
            entity.Property(e => e.Vllancamento)
                .HasColumnType("numeric(14, 2)")
                .HasColumnName("vllancamento");
        });

        modelBuilder.Entity<TbsimlancamentocreditoDivida>(entity =>
        {
            entity.HasKey(e => e.Idlancamento).HasName("PK_tbsimlancamentocreditoAUX");

            entity.ToTable("tbsimlancamentocreditoDividas");

            entity.Property(e => e.Idlancamento).HasColumnName("idlancamento");
            entity.Property(e => e.ConIddivida).HasColumnName("ConIDDivida");
            entity.Property(e => e.DataInscricaoDa)
                .HasColumnType("date")
                .HasColumnName("DataInscricaoDA");
            entity.Property(e => e.DivEmpId).HasColumnName("DivEmpID");
            entity.Property(e => e.Dsorigem)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsorigem");
            entity.Property(e => e.Dtlancamento)
                .HasColumnType("date")
                .HasColumnName("dtlancamento");
            entity.Property(e => e.Idcredito).HasColumnName("idcredito");
            entity.Property(e => e.Idleiato).HasColumnName("idleiato");
            entity.Property(e => e.Idnaturezacredito).HasColumnName("idnaturezacredito");
            entity.Property(e => e.Idtipocredito).HasColumnName("idtipocredito");
            entity.Property(e => e.Idtipooperacao).HasColumnName("idtipooperacao");
            entity.Property(e => e.ImoIddivida).HasColumnName("ImoIDDivida");
            entity.Property(e => e.Nranocompetencia).HasColumnName("nranocompetencia");
            entity.Property(e => e.Nranodivida).HasColumnName("nranodivida");
            entity.Property(e => e.Nrmescompetencia).HasColumnName("nrmescompetencia");
            entity.Property(e => e.TapId).HasColumnName("TapID");
            entity.Property(e => e.TipoDivida)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Tipobxid).HasColumnName("tipobxid");
            entity.Property(e => e.Tipotribid).HasColumnName("tipotribid");
            entity.Property(e => e.Vllancamento)
                .HasColumnType("numeric(14, 2)")
                .HasColumnName("vllancamento");
        });

        modelBuilder.Entity<TbtempBkp2022>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbtempBKP2022");

            entity.Property(e => e.Conta)
                .IsUnicode(false)
                .HasColumnName("conta");
        });

        modelBuilder.Entity<Tbtempconsigna2022>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbtempconsigna2022");

            entity.Property(e => e.Conta)
                .IsUnicode(false)
                .HasColumnName("conta");
            entity.Property(e => e.Nomecsg)
                .IsUnicode(false)
                .HasColumnName("nomecsg");
            entity.Property(e => e.Pessoa)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("pessoa");
        });

        modelBuilder.Entity<TbtrbroldividasIptu2012Old>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbtrbroldividas_IPTU2012_Old");

            entity.Property(e => e.CdDivida)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("cdDivida");
            entity.Property(e => e.CdTipoDeducao).HasColumnName("cdTipoDeducao");
            entity.Property(e => e.CdTributo).HasColumnName("cdTributo");
            entity.Property(e => e.DsDescricaoDeducao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsDescricaoDeducao");
            entity.Property(e => e.DsTributo)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("dsTributo");
            entity.Property(e => e.DtEdital)
                .HasColumnType("datetime")
                .HasColumnName("dtEdital");
            entity.Property(e => e.DtOperacao)
                .HasColumnType("datetime")
                .HasColumnName("dtOperacao");
            entity.Property(e => e.FlClassificado).HasColumnName("flClassificado");
            entity.Property(e => e.IdDivida)
                .ValueGeneratedOnAdd()
                .HasColumnName("idDivida");
            entity.Property(e => e.IdDividaOrigem).HasColumnName("idDividaOrigem");
            entity.Property(e => e.NmContribuinte)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmContribuinte");
            entity.Property(e => e.NrAnoDivida).HasColumnName("nrAnoDivida");
            entity.Property(e => e.NrAnoGeracao).HasColumnName("nrAnoGeracao");
            entity.Property(e => e.NrBimestre).HasColumnName("nrBimestre");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.NrEdital).HasColumnName("nrEdital");
            entity.Property(e => e.NrExercicio).HasColumnName("nrExercicio");
            entity.Property(e => e.NrParcela).HasColumnName("nrParcela");
            entity.Property(e => e.TpCadastro).HasColumnName("tpCadastro");
            entity.Property(e => e.TpDivida).HasColumnName("tpDivida");
            entity.Property(e => e.TpDocumento).HasColumnName("tpDocumento");
            entity.Property(e => e.TpOperacao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpOperacao");
            entity.Property(e => e.VlOperacao)
                .HasColumnType("money")
                .HasColumnName("vlOperacao");
        });

        modelBuilder.Entity<TempTbCapConvAuxPrograma>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TEMP_tbCapConvAuxProgramas");

            entity.Property(e => e.CdCap).HasColumnName("cdCap");
            entity.Property(e => e.DsObjeto)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DsTipoRecurso)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipoRecurso");
            entity.Property(e => e.DsTipoRecursoRepassador)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipoRecursoRepassador");
            entity.Property(e => e.DtCelebracaoTermo)
                .HasColumnType("datetime")
                .HasColumnName("dtCelebracaoTermo");
            entity.Property(e => e.DtEvento)
                .HasColumnType("datetime")
                .HasColumnName("dtEvento");
            entity.Property(e => e.DtInicioVigencia)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioVigencia");
            entity.Property(e => e.DtPublicacaoDoe)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoDoe");
            entity.Property(e => e.DtTerminoVigencia)
                .HasColumnType("datetime")
                .HasColumnName("dtTerminoVigencia");
            entity.Property(e => e.FlPublicacaoDiario)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPublicacaoDiario");
            entity.Property(e => e.NrAnoConvenio).HasColumnName("nrAnoConvenio");
            entity.Property(e => e.NrAnoPublicacaoDoe).HasColumnName("nrAnoPublicacaoDoe");
            entity.Property(e => e.NrConvenio).HasColumnName("nrConvenio");
            entity.Property(e => e.NrDoe).HasColumnName("nrDoe");
            entity.Property(e => e.NrTermo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrTermo");
            entity.Property(e => e.NrTransferencia).HasColumnName("nrTransferencia");
            entity.Property(e => e.VlContraPartida)
                .HasColumnType("money")
                .HasColumnName("vlContraPartida");
            entity.Property(e => e.VlMetaPrevista)
                .HasColumnType("money")
                .HasColumnName("vlMetaPrevista");
            entity.Property(e => e.VlPrevisto)
                .HasColumnType("money")
                .HasColumnName("vlPrevisto");
        });

        modelBuilder.Entity<TempTbCapRecurso>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TEMP_tbCapRecursos");

            entity.Property(e => e.CdContaContabilConsignar)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabilConsignar");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.DsRecurso)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsRecurso");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
            entity.Property(e => e.DsTipoRecurso)
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasColumnName("dsTipoRecurso");
            entity.Property(e => e.FlInativo).HasColumnName("flInativo");
            entity.Property(e => e.IdRecurso).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TempTbCntAtosContratuai>(entity =>
        {
            entity.HasKey(e => e.IdAtoContratual);

            entity.ToTable("TEMP_tbCntAtosContratuais");

            entity.Property(e => e.CdTcm)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdTCM");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivo)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DsTipoAditivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("dsTipoAditivo");
            entity.Property(e => e.DtEscrituracao)
                .HasColumnType("datetime")
                .HasColumnName("dtEscrituracao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtNovaTermino)
                .HasColumnType("datetime")
                .HasColumnName("dtNovaTermino");
            entity.Property(e => e.DtPublicacaoTermo)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoTermo");
            entity.Property(e => e.DtTermo)
                .HasColumnType("datetime")
                .HasColumnName("dtTermo");
            entity.Property(e => e.FlPrevisaoContratual)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPrevisaoContratual");
            entity.Property(e => e.IdNumeroAto).HasColumnName("idNumeroAto");
            entity.Property(e => e.IdTipoMotivoRescisao).HasColumnName("idTipoMotivoRescisao");
            entity.Property(e => e.IdTipoOperacaoAto).HasColumnName("idTipoOperacaoAto");
            entity.Property(e => e.NrAditivo).HasColumnName("nrAditivo");
            entity.Property(e => e.VlAditivo)
                .HasColumnType("money")
                .HasColumnName("vlAditivo");
            entity.Property(e => e.VlAtualizadoContrato)
                .HasColumnType("money")
                .HasColumnName("vlAtualizadoContrato");
        });

        modelBuilder.Entity<TempTbCntAtosContratuaisItensLicitacao>(entity =>
        {
            entity.HasKey(e => e.IdAtoContratoItem);

            entity.ToTable("TEMP_tbCntAtosContratuaisItensLicitacao");

            entity.Property(e => e.DsTipoOperacao)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoOperacao");
            entity.Property(e => e.IdTipoRedimensionamento).HasColumnName("idTipoRedimensionamento");
            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.NrQtdAditivada)
                .HasColumnType("money")
                .HasColumnName("nrQtdAditivada");
            entity.Property(e => e.VlTotalAditivado)
                .HasColumnType("money")
                .HasColumnName("vlTotalAditivado");
            entity.Property(e => e.VlUnitAditivado)
                .HasColumnType("money")
                .HasColumnName("vlUnitAditivado");
        });

        modelBuilder.Entity<TempTbCntContrato>(entity =>
        {
            entity.HasKey(e => e.IdContrato);

            entity.ToTable("TEMP_tbCntContratos");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdTcm)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdTCM");
            entity.Property(e => e.CdTipoAtoContratual).HasColumnName("cdTipoAtoContratual");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsContratoGerado)
                .IsUnicode(false)
                .HasColumnName("dsContratoGerado");
            entity.Property(e => e.DsFormaPagamento)
                .IsUnicode(false)
                .HasColumnName("dsFormaPagamento");
            entity.Property(e => e.DsGarantiaContrato)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsGarantiaContrato");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginAlteracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginAlteracao");
            entity.Property(e => e.DsMultaInadimplemento)
                .IsUnicode(false)
                .HasColumnName("dsMultaInadimplemento");
            entity.Property(e => e.DsMultaRescisoria)
                .IsUnicode(false)
                .HasColumnName("dsMultaRescisoria");
            entity.Property(e => e.DsObjeto)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DtAlteracao)
                .HasColumnType("datetime")
                .HasColumnName("dtAlteracao");
            entity.Property(e => e.DtAssinatura)
                .HasColumnType("datetime")
                .HasColumnName("dtAssinatura");
            entity.Property(e => e.DtContrato)
                .HasColumnType("datetime")
                .HasColumnName("dtContrato");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtInicioPrazo)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioPrazo");
            entity.Property(e => e.DtPublicacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacao");
            entity.Property(e => e.DtTerminoPrazo)
                .HasColumnType("datetime")
                .HasColumnName("dtTerminoPrazo");
            entity.Property(e => e.FlCessaoContratual)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flCessaoContratual");
            entity.Property(e => e.FlFornecimentoImediato)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flFornecimentoImediato");
            entity.Property(e => e.FlPrevisaoSubContratacao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPrevisaoSubContratacao");
            entity.Property(e => e.IdTcecontrato).HasColumnName("IdTCEContrato");
            entity.Property(e => e.IdTipoMultaContrato).HasColumnName("idTipoMultaContrato");
            entity.Property(e => e.IdTipoOrigemContrato).HasColumnName("idTipoOrigemContrato");
            entity.Property(e => e.NmOrgao)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("nmOrgao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrContrato).HasColumnName("nrContrato");
            entity.Property(e => e.NrProtocolo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrProtocolo");
            entity.Property(e => e.TpClassificacaoContabil)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpClassificacaoContabil");
            entity.Property(e => e.VlContrato)
                .HasColumnType("money")
                .HasColumnName("vlContrato");
            entity.Property(e => e.VlRecursoOperCredito)
                .HasColumnType("money")
                .HasColumnName("vlRecursoOperCredito");
        });

        modelBuilder.Entity<TempTbCntContratosCmfi>(entity =>
        {
            entity.HasKey(e => e.IdContrato);

            entity.ToTable("Temp_tbCntContratos_CMFI");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdTcm)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdTCM");
            entity.Property(e => e.CdTipoAtoContratual).HasColumnName("cdTipoAtoContratual");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsContratoGerado)
                .IsUnicode(false)
                .HasColumnName("dsContratoGerado");
            entity.Property(e => e.DsFormaPagamento)
                .IsUnicode(false)
                .HasColumnName("dsFormaPagamento");
            entity.Property(e => e.DsGarantiaContrato)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsGarantiaContrato");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginAlteracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginAlteracao");
            entity.Property(e => e.DsMultaInadimplemento)
                .IsUnicode(false)
                .HasColumnName("dsMultaInadimplemento");
            entity.Property(e => e.DsMultaRescisoria)
                .IsUnicode(false)
                .HasColumnName("dsMultaRescisoria");
            entity.Property(e => e.DsObjeto)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DtAlteracao)
                .HasColumnType("datetime")
                .HasColumnName("dtAlteracao");
            entity.Property(e => e.DtAssinatura)
                .HasColumnType("datetime")
                .HasColumnName("dtAssinatura");
            entity.Property(e => e.DtContrato)
                .HasColumnType("datetime")
                .HasColumnName("dtContrato");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtInicioPrazo)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioPrazo");
            entity.Property(e => e.DtPublicacao)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacao");
            entity.Property(e => e.DtTerminoPrazo)
                .HasColumnType("datetime")
                .HasColumnName("dtTerminoPrazo");
            entity.Property(e => e.FlCessaoContratual)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flCessaoContratual");
            entity.Property(e => e.FlFornecimentoImediato)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flFornecimentoImediato");
            entity.Property(e => e.FlPrevisaoSubContratacao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPrevisaoSubContratacao");
            entity.Property(e => e.IdContratoOrigem).HasColumnName("idContratoOrigem");
            entity.Property(e => e.IdTcecontrato).HasColumnName("IdTCEContrato");
            entity.Property(e => e.IdTipoMultaContrato).HasColumnName("idTipoMultaContrato");
            entity.Property(e => e.IdTipoOrigemContrato).HasColumnName("idTipoOrigemContrato");
            entity.Property(e => e.NmOrgao)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("nmOrgao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrContrato).HasColumnName("nrContrato");
            entity.Property(e => e.NrProtocolo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrProtocolo");
            entity.Property(e => e.TpClassificacaoContabil)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpClassificacaoContabil");
            entity.Property(e => e.VlContrato)
                .HasColumnType("money")
                .HasColumnName("vlContrato");
            entity.Property(e => e.VlRecursoOperCredito)
                .HasColumnType("money")
                .HasColumnName("vlRecursoOperCredito");
        });

        modelBuilder.Entity<TempTbCntContratosItensLicitacao>(entity =>
        {
            entity.HasKey(e => e.IdContratoItemLicitacao);

            entity.ToTable("TEMP_tbCntContratosItensLicitacao");

            entity.Property(e => e.DsMarca)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsMarca");
            entity.Property(e => e.FlStatus)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flStatus");
            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.NrQtde)
                .HasColumnType("money")
                .HasColumnName("nrQtde");
            entity.Property(e => e.NrQtdeAditivada)
                .HasColumnType("money")
                .HasColumnName("nrQtdeAditivada");
            entity.Property(e => e.VlTotal)
                .HasColumnType("money")
                .HasColumnName("vlTotal");
            entity.Property(e => e.VlTotalAditivado)
                .HasColumnType("money")
                .HasColumnName("vlTotalAditivado");
            entity.Property(e => e.VlUnitAtualizado)
                .HasColumnType("money")
                .HasColumnName("vlUnitAtualizado");
            entity.Property(e => e.VlUnitario)
                .HasColumnType("money")
                .HasColumnName("vlUnitario");
        });

        modelBuilder.Entity<TempTbCntContratosParte>(entity =>
        {
            entity.HasKey(e => e.IdParteContrato);

            entity.ToTable("TEMP_tbCntContratosPartes");

            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.IdTipoParteContrato).HasColumnName("idTipoParteContrato");
            entity.Property(e => e.VlContrato)
                .HasColumnType("money")
                .HasColumnName("vlContrato");
        });

        modelBuilder.Entity<TempTbCntNumeroAtosContratuai>(entity =>
        {
            entity.HasKey(e => e.IdNumeroAto);

            entity.ToTable("TEMP_tbCntNumeroAtosContratuais");

            entity.Property(e => e.IdNumeroAto).HasColumnName("idNumeroAto");
            entity.Property(e => e.CdTcm)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdTCM");
            entity.Property(e => e.CdTipoNumero)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdTipoNumero");
            entity.Property(e => e.DsAditivo)
                .IsUnicode(false)
                .HasColumnName("dsAditivo");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsLoginAlteracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginAlteracao");
            entity.Property(e => e.DsTipoLateral)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoLateral");
            entity.Property(e => e.DtAlteracao)
                .HasColumnType("datetime")
                .HasColumnName("dtAlteracao");
            entity.Property(e => e.DtEscrituracao)
                .HasColumnType("datetime")
                .HasColumnName("dtEscrituracao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtTermo)
                .HasColumnType("datetime")
                .HasColumnName("dtTermo");
            entity.Property(e => e.FlTipoLateral).HasColumnName("flTipoLateral");
            entity.Property(e => e.IdNumeroAtoOrigem).HasColumnName("idNumeroAtoOrigem");
            entity.Property(e => e.NrAditivo).HasColumnName("nrAditivo");
            entity.Property(e => e.NrAnoAditivo).HasColumnName("nrAnoAditivo");
        });

        modelBuilder.Entity<TempTbFinCompensacaoDiarioTesouraria20032013>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("temp_tbFinCompensacaoDiarioTesouraria_20_03_2013");

            entity.Property(e => e.DtCompensacao)
                .HasColumnType("datetime")
                .HasColumnName("dtCompensacao");
            entity.Property(e => e.FlTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flTipo");
            entity.Property(e => e.IdCompensacaoDiario).ValueGeneratedOnAdd();
            entity.Property(e => e.NrSequencial).HasColumnName("nrSequencial");
            entity.Property(e => e.VlCompensacao)
                .HasColumnType("money")
                .HasColumnName("vlCompensacao");
        });

        modelBuilder.Entity<TempTbFinConciliacoesBancarias20032013>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("temp_tbFinConciliacoesBancarias_20_03_2013");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsOperacao)
                .IsUnicode(false)
                .HasColumnName("dsOperacao");
            entity.Property(e => e.DsTipoOperacao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipoOperacao");
            entity.Property(e => e.DtBaixa)
                .HasColumnType("datetime")
                .HasColumnName("dtBaixa");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtOperacao)
                .HasColumnType("datetime")
                .HasColumnName("dtOperacao");
            entity.Property(e => e.FlParcial)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flParcial");
            entity.Property(e => e.IdCc).HasColumnName("IdCC");
            entity.Property(e => e.IdCcorigemDestino).HasColumnName("IdCCOrigemDestino");
            entity.Property(e => e.IdConciliacao).ValueGeneratedOnAdd();
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlOperacao)
                .HasColumnType("money")
                .HasColumnName("vlOperacao");
        });

        modelBuilder.Entity<TempTbFinDividaFundadaMovimento>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("temp_tbFinDividaFundadaMovimentos");

            entity.Property(e => e.DsMotivo)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DsOrigem)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsOrigem");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.IdMovimento).ValueGeneratedOnAdd();
            entity.Property(e => e.IdObjetoOrigem).HasColumnName("idObjetoOrigem");
            entity.Property(e => e.NmOrigem)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nmOrigem");
            entity.Property(e => e.NrAnoMovimento).HasColumnName("nrAnoMovimento");
            entity.Property(e => e.NrMovimento).HasColumnName("nrMovimento");
            entity.Property(e => e.NrParcelas).HasColumnName("nrParcelas");
            entity.Property(e => e.TpMovimento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpMovimento");
            entity.Property(e => e.TpOperacao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpOperacao");
            entity.Property(e => e.VlMovimento)
                .HasColumnType("money")
                .HasColumnName("vlMovimento");
        });

        modelBuilder.Entity<TempTbFinLancamentosPartidaDobrada>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TEMP_tbFinLancamentosPartidaDobradas");

            entity.Property(e => e.IdTipoFinanceiroPatrimonial).HasColumnName("idTipoFinanceiroPatrimonial");
            entity.Property(e => e.IdTipoMovimento).HasColumnName("idTipoMovimento");
            entity.Property(e => e.IdTipoVariacao).HasColumnName("idTipoVariacao");
            entity.Property(e => e.NrSequenciaAnual).HasColumnName("nrSequenciaAnual");
            entity.Property(e => e.TpLancamento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpLancamento");
        });

        modelBuilder.Entity<TempTbGerPessoa>(entity =>
        {
            entity.HasKey(e => e.IdPessoa);

            entity.ToTable("TEMP_tbGerPessoas");

            entity.Property(e => e.DsAtividade)
                .IsUnicode(false)
                .HasColumnName("dsAtividade");
            entity.Property(e => e.DsCategoriaCadastramento)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsCategoriaCadastramento");
            entity.Property(e => e.DsComplEndereco)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsComplEndereco");
            entity.Property(e => e.DsEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsEmail");
            entity.Property(e => e.DsEntidadeProfissional)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsEntidadeProfissional");
            entity.Property(e => e.DsObjetoContratual)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsObjetoContratual");
            entity.Property(e => e.DsObservacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsObservacao");
            entity.Property(e => e.DsOrgaoExp)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsOrgaoExp");
            entity.Property(e => e.DsOrigemCadastro)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("dsOrigemCadastro");
            entity.Property(e => e.DsSite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsSite");
            entity.Property(e => e.DsTipoPessoa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoPessoa");
            entity.Property(e => e.DsufExp)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsufExp");
            entity.Property(e => e.DtAlteracao)
                .HasColumnType("datetime")
                .HasColumnName("dtAlteracao");
            entity.Property(e => e.DtBaseTce)
                .HasColumnType("datetime")
                .HasColumnName("dtBaseTCE");
            entity.Property(e => e.DtEmissaoRg)
                .HasColumnType("datetime")
                .HasColumnName("dtEmissaoRG");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtNascimento)
                .HasColumnType("datetime")
                .HasColumnName("dtNascimento");
            entity.Property(e => e.DtRegistroJuntaComercial)
                .HasColumnType("datetime")
                .HasColumnName("dtRegistroJuntaComercial");
            entity.Property(e => e.FlMicroEmpresa)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flMicroEmpresa");
            entity.Property(e => e.FlTratamentoDiferenciado)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flTratamentoDiferenciado");
            entity.Property(e => e.NmFantasia)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmFantasia");
            entity.Property(e => e.NmPessoa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmPessoa");
            entity.Property(e => e.NrCnpjcpf)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrCNPJCPF");
            entity.Property(e => e.NrFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nrFax");
            entity.Property(e => e.NrIlcorrente)
                .HasColumnType("money")
                .HasColumnName("nrILCorrente");
            entity.Property(e => e.NrIlglobal)
                .HasColumnType("money")
                .HasColumnName("nrILGlobal");
            entity.Property(e => e.NrPredial)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("nrPredial");
            entity.Property(e => e.NrRegistroJuntaComercial)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrRegistroJuntaComercial");
            entity.Property(e => e.NrRgIe)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrRg_IE");
            entity.Property(e => e.NrSolvenciaGeral)
                .HasColumnType("money")
                .HasColumnName("nrSolvenciaGeral");
            entity.Property(e => e.NrTelefones)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nrTelefones");
            entity.Property(e => e.VlCapitalSocial)
                .HasColumnType("money")
                .HasColumnName("vlCapitalSocial");
            entity.Property(e => e.VlPatrimonioLiquido)
                .HasColumnType("money")
                .HasColumnName("vlPatrimonioLiquido");
        });

        modelBuilder.Entity<TempTbLicCotacaoIten>(entity =>
        {
            entity.HasKey(e => e.IdCotacao);

            entity.ToTable("TEMP_tbLicCotacaoItens");

            entity.Property(e => e.DsDetalhamento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsDetalhamento");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMarca)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsMarca");
            entity.Property(e => e.DtCotacao)
                .HasColumnType("datetime")
                .HasColumnName("dtCotacao");
            entity.Property(e => e.DtHomologacao)
                .HasColumnType("datetime")
                .HasColumnName("dtHomologacao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtPrazoEntrega)
                .HasColumnType("datetime")
                .HasColumnName("dtPrazoEntrega");
            entity.Property(e => e.DtUltAlteracao)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAlteracao");
            entity.Property(e => e.DtVencimentoProposta)
                .HasColumnType("datetime")
                .HasColumnName("dtVencimentoProposta");
            entity.Property(e => e.FlCotacao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flCotacao");
            entity.Property(e => e.FlVencedor)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flVencedor");
            entity.Property(e => e.NrClassificacao).HasColumnName("nrClassificacao");
            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.NrQuantidade)
                .HasColumnType("money")
                .HasColumnName("nrQuantidade");
            entity.Property(e => e.VlDesconto)
                .HasColumnType("money")
                .HasColumnName("vlDesconto");
            entity.Property(e => e.VlTotal)
                .HasColumnType("money")
                .HasColumnName("vlTotal");
            entity.Property(e => e.VlTotalNegociado)
                .HasColumnType("money")
                .HasColumnName("vlTotalNegociado");
            entity.Property(e => e.VlUnitario)
                .HasColumnType("money")
                .HasColumnName("vlUnitario");
        });

        modelBuilder.Entity<TempTbLicLicitacoesIten>(entity =>
        {
            entity.HasKey(e => e.IdLicitacaoItem).HasName("PK_TEMP_tbLicItensLicitacoes");

            entity.ToTable("TEMP_tbLicLicitacoesItens");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrPrazoLimiteEntrega).HasColumnName("nrPrazoLimiteEntrega");
            entity.Property(e => e.NrQuantidade)
                .HasColumnType("money")
                .HasColumnName("nrQuantidade");
            entity.Property(e => e.TpEntrega)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpEntrega");
            entity.Property(e => e.VlUnitarioMaximo)
                .HasColumnType("money")
                .HasColumnName("vlUnitarioMaximo");
        });

        modelBuilder.Entity<TempTbLicLicitacoesItensLote>(entity =>
        {
            entity.HasKey(e => new { e.NrLote, e.IdLicitacaoItem });

            entity.ToTable("TEMP_tbLicLicitacoesItensLotes");

            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NrQuantidade)
                .HasColumnType("money")
                .HasColumnName("nrQuantidade");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
        });

        modelBuilder.Entity<TempTbLicMovimentosSituaco>(entity =>
        {
            entity.HasKey(e => e.IdMovLicitacao);

            entity.ToTable("TEMP_tbLicMovimentosSituacoes");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsMotivacao");
            entity.Property(e => e.DtBaseTce)
                .HasColumnType("datetime")
                .HasColumnName("dtBaseTCE");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.IdLeiAto).HasColumnName("idLeiAto");
        });

        modelBuilder.Entity<TempTbLicParticipante>(entity =>
        {
            entity.HasKey(e => e.IdParticipante);

            entity.ToTable("TEMP_tbLicParticipantes");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivoNaoHabilitacao)
                .IsUnicode(false)
                .HasColumnName("dsMotivoNaoHabilitacao");
            entity.Property(e => e.DtConvite)
                .HasColumnType("datetime")
                .HasColumnName("dtConvite");
            entity.Property(e => e.DtCredenciamento)
                .HasColumnType("datetime")
                .HasColumnName("dtCredenciamento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlConvidado)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flConvidado");
            entity.Property(e => e.FlHabilitado)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flHabilitado");
            entity.Property(e => e.IdCrcf).HasColumnName("IdCRCF");
            entity.Property(e => e.NrIdade).HasColumnName("nrIdade");
        });

        modelBuilder.Entity<TempTbOrcProgramasAcoes2014>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("temp_tbOrcProgramasAcoes_2014");

            entity.Property(e => e.CdAcao)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdAcao");
            entity.Property(e => e.CdFuncao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFuncao");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdPrograma)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdPrograma");
            entity.Property(e => e.CdSubFuncao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdSubFuncao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsAcao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsAcao");
            entity.Property(e => e.DsJustifExpansao)
                .IsUnicode(false)
                .HasColumnName("dsJustifExpansao");
            entity.Property(e => e.DsJustifLimite)
                .IsUnicode(false)
                .HasColumnName("dsJustifLimite");
            entity.Property(e => e.DsQdd)
                .IsUnicode(false)
                .HasColumnName("dsQDD");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.DtLimite)
                .HasColumnType("datetime")
                .HasColumnName("dtLimite");
            entity.Property(e => e.FlPlanejamento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPlanejamento");
            entity.Property(e => e.IdAcao).ValueGeneratedOnAdd();
            entity.Property(e => e.Idempresa).HasColumnName("IDEmpresa");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMetaExpansao)
                .HasColumnType("decimal(16, 2)")
                .HasColumnName("nrMetaExpansao");
            entity.Property(e => e.NrMetaLimite)
                .HasColumnType("decimal(16, 2)")
                .HasColumnName("nrMetaLimite");
            entity.Property(e => e.NrPrioridade).HasColumnName("nrPrioridade");
            entity.Property(e => e.VlExpansao)
                .HasColumnType("money")
                .HasColumnName("vlExpansao");
            entity.Property(e => e.VlLimite)
                .HasColumnType("money")
                .HasColumnName("vlLimite");
        });

        modelBuilder.Entity<TempTbOrcProgramasAcoesGeral>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("temp_tbOrcProgramasAcoes_geral");

            entity.Property(e => e.CdAcao)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdAcao");
            entity.Property(e => e.CdFuncao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFuncao");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdPrograma)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdPrograma");
            entity.Property(e => e.CdSubFuncao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdSubFuncao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsAcao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsAcao");
            entity.Property(e => e.DsJustifExpansao)
                .IsUnicode(false)
                .HasColumnName("dsJustifExpansao");
            entity.Property(e => e.DsJustifLimite)
                .IsUnicode(false)
                .HasColumnName("dsJustifLimite");
            entity.Property(e => e.DsQdd)
                .IsUnicode(false)
                .HasColumnName("dsQDD");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.DtLimite)
                .HasColumnType("datetime")
                .HasColumnName("dtLimite");
            entity.Property(e => e.FlPlanejamento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPlanejamento");
            entity.Property(e => e.IdAcao).ValueGeneratedOnAdd();
            entity.Property(e => e.Idempresa).HasColumnName("IDEmpresa");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMetaExpansao)
                .HasColumnType("decimal(16, 2)")
                .HasColumnName("nrMetaExpansao");
            entity.Property(e => e.NrMetaLimite)
                .HasColumnType("decimal(16, 2)")
                .HasColumnName("nrMetaLimite");
            entity.Property(e => e.NrPrioridade).HasColumnName("nrPrioridade");
            entity.Property(e => e.VlExpansao)
                .HasColumnType("money")
                .HasColumnName("vlExpansao");
            entity.Property(e => e.VlLimite)
                .HasColumnType("money")
                .HasColumnName("vlLimite");
        });

        modelBuilder.Entity<TempTbOrcReceitasOrcamentoAnual>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("temp_tbOrcReceitasOrcamentoAnual");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipo");
            entity.Property(e => e.IdReceitaOrcamentoAnual).ValueGeneratedOnAdd();
            entity.Property(e => e.VlOrcado)
                .HasColumnType("money")
                .HasColumnName("vlOrcado");
        });

        modelBuilder.Entity<TempTbPlaAcoesMovimento>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TEMP_tbPlaAcoesMovimentos");

            entity.Property(e => e.CdFuncao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFuncao");
            entity.Property(e => e.CdOrgaoResponsavel)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgaoResponsavel");
            entity.Property(e => e.CdSubFuncao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdSubFuncao");
            entity.Property(e => e.CdUnidadeResponsavel)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidadeResponsavel");
            entity.Property(e => e.DsAcao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsAcao");
            entity.Property(e => e.DsNotaExplicativa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsNotaExplicativa");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.FlAcaoContinua)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flAcaoContinua");
            entity.Property(e => e.IdAcao).HasColumnName("idAcao");
            entity.Property(e => e.IdEmpresaExecutor).HasColumnName("idEmpresaExecutor");
            entity.Property(e => e.IdMovimento)
                .ValueGeneratedOnAdd()
                .HasColumnName("idMovimento");
            entity.Property(e => e.IdNaturezaAcao).HasColumnName("idNaturezaAcao");
            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.IdTipoAcao).HasColumnName("idTipoAcao");
            entity.Property(e => e.IdTipoExecucaoAcao).HasColumnName("idTipoExecucaoAcao");
            entity.Property(e => e.IdTipoMovimento).HasColumnName("idTipoMovimento");
            entity.Property(e => e.IdUnidadeMedida).HasColumnName("idUnidadeMedida");
            entity.Property(e => e.IdVersaoMovimento).HasColumnName("idVersaoMovimento");
            entity.Property(e => e.NrMovimento).HasColumnName("nrMovimento");
        });

        modelBuilder.Entity<TempTbPlaAcoesMovimentosPm>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TEMP_tbPlaAcoesMovimentos_PMS");

            entity.Property(e => e.CdFuncao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFuncao");
            entity.Property(e => e.CdOrgaoResponsavel)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgaoResponsavel");
            entity.Property(e => e.CdSubFuncao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdSubFuncao");
            entity.Property(e => e.CdUnidadeResponsavel)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidadeResponsavel");
            entity.Property(e => e.DsAcao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsAcao");
            entity.Property(e => e.DsNotaExplicativa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsNotaExplicativa");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtMovimento)
                .HasColumnType("datetime")
                .HasColumnName("dtMovimento");
            entity.Property(e => e.FlAcaoContinua)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flAcaoContinua");
            entity.Property(e => e.IdAcao).HasColumnName("idAcao");
            entity.Property(e => e.IdEmpresaExecutor).HasColumnName("idEmpresaExecutor");
            entity.Property(e => e.IdMovimento)
                .ValueGeneratedOnAdd()
                .HasColumnName("idMovimento");
            entity.Property(e => e.IdNaturezaAcao).HasColumnName("idNaturezaAcao");
            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.IdTipoAcao).HasColumnName("idTipoAcao");
            entity.Property(e => e.IdTipoExecucaoAcao).HasColumnName("idTipoExecucaoAcao");
            entity.Property(e => e.IdTipoMovimento).HasColumnName("idTipoMovimento");
            entity.Property(e => e.IdUnidadeMedida).HasColumnName("idUnidadeMedida");
            entity.Property(e => e.IdVersaoMovimento).HasColumnName("idVersaoMovimento");
            entity.Property(e => e.NrMovimento).HasColumnName("nrMovimento");
        });

        modelBuilder.Entity<TempTbPlaAcoesPm>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TEMP_tbPlaAcoes_PMS");

            entity.Property(e => e.CdAcao)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdAcao");
            entity.Property(e => e.IdAcao)
                .ValueGeneratedOnAdd()
                .HasColumnName("idAcao");
            entity.Property(e => e.IdEscopo).HasColumnName("idEscopo");
            entity.Property(e => e.IdMovimento).HasColumnName("idMovimento");
            entity.Property(e => e.IdVersaoCriacao).HasColumnName("idVersaoCriacao");
            entity.Property(e => e.NmAcao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("nmAcao");
            entity.Property(e => e.TpComando)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpComando");
        });

        modelBuilder.Entity<TempTbPlaProjecoesReceita>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("temp_tbPlaProjecoesReceitas");

            entity.Property(e => e.CdArea).HasColumnName("cdArea");
            entity.Property(e => e.DsTpComando)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTpComando");
            entity.Property(e => e.IdEmpresa).HasColumnName("idEmpresa");
            entity.Property(e => e.IdExecutor).HasColumnName("idExecutor");
            entity.Property(e => e.IdProjecao)
                .ValueGeneratedOnAdd()
                .HasColumnName("idProjecao");
            entity.Property(e => e.IdVersaoProjecao).HasColumnName("idVersaoProjecao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlEstimado)
                .HasColumnType("money")
                .HasColumnName("vlEstimado");
        });

        modelBuilder.Entity<TempTbPlaProjetosAtividade>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TEMP_tbPlaProjetosAtividades");

            entity.Property(e => e.CdProjetoAtividade)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdProjetoAtividade");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsProjetoAtividade)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsProjetoAtividade");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdProjetoAtividade)
                .ValueGeneratedOnAdd()
                .HasColumnName("idProjetoAtividade");
            entity.Property(e => e.IdVersaoCriacao).HasColumnName("idVersaoCriacao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<TempTbPlaProjetosAtividadesAco>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TEMP_tbPlaProjetosAtividadesAcoes");

            entity.Property(e => e.DsNotaExplicativa)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("dsNotaExplicativa");
            entity.Property(e => e.DtCancelamento)
                .HasColumnType("datetime")
                .HasColumnName("dtCancelamento");
            entity.Property(e => e.DtVinculo)
                .HasColumnType("datetime")
                .HasColumnName("dtVinculo");
            entity.Property(e => e.IdAcao).HasColumnName("idAcao");
            entity.Property(e => e.IdProjetoAtividade).HasColumnName("idProjetoAtividade");
            entity.Property(e => e.IdVersaoCancelamento).HasColumnName("idVersaoCancelamento");
            entity.Property(e => e.IdVersaoVinculo).HasColumnName("idVersaoVinculo");
        });

        modelBuilder.Entity<TmpDobrado>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmpDobrados");

            entity.Property(e => e.CdCep)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdCEP");
            entity.Property(e => e.CdIbge)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdIBGE");
            entity.Property(e => e.DsEndereco)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsEndereco");
            entity.Property(e => e.NmPessoa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nmPessoa");
            entity.Property(e => e.NrCpf)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrCPF");
            entity.Property(e => e.SgUf)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("sgUF");
            entity.Property(e => e.TpDocumento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("tpDocumento");
        });

        modelBuilder.Entity<TmpDobradosFora>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmpDobradosFora");

            entity.Property(e => e.ConId).HasColumnName("ConID");
        });

        modelBuilder.Entity<TmpDocumentosSemFila>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmp_documentosSemFila");

            entity.Property(e => e.CdCfop).HasColumnName("cdCFOP");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsSerie)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsSerie");
            entity.Property(e => e.DsSerieSeloSefa)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSerieSeloSEFA");
            entity.Property(e => e.DtDocumento)
                .HasColumnType("datetime")
                .HasColumnName("dtDocumento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtRecebimento)
                .HasColumnType("datetime")
                .HasColumnName("dtRecebimento");
            entity.Property(e => e.DtVencimento)
                .HasColumnType("datetime")
                .HasColumnName("dtVencimento");
            entity.Property(e => e.IdLiquidacaoDocto).ValueGeneratedOnAdd();
            entity.Property(e => e.IdTipoSerieDocFiscal).HasColumnName("idTipoSerieDocFiscal");
            entity.Property(e => e.NrCodigoBarras)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrCodigoBarras");
            entity.Property(e => e.NrCompAno).HasColumnName("nrCompAno");
            entity.Property(e => e.NrCompMes).HasColumnName("nrCompMes");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.NrSeloSefa)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("nrSeloSEFA");
            entity.Property(e => e.VlDocumento)
                .HasColumnType("money")
                .HasColumnName("vlDocumento");
            entity.Property(e => e.VlIcmsdestacado)
                .HasColumnType("money")
                .HasColumnName("vlICMSDestacado");
            entity.Property(e => e.VlIcmsretido)
                .HasColumnType("money")
                .HasColumnName("vlICMSRetido");
        });

        modelBuilder.Entity<TmpDspLiquidacoesDoctosItensCmfi>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmpDspLiquidacoesDoctosItensCMFI");

            entity.Property(e => e.Idempenho).HasColumnName("idempenho");
            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.NrQtde)
                .HasColumnType("money")
                .HasColumnName("nrQtde");
            entity.Property(e => e.VlDesconto)
                .HasColumnType("money")
                .HasColumnName("vlDesconto");
            entity.Property(e => e.VlTotal)
                .HasColumnType("money")
                .HasColumnName("vlTotal");
        });

        modelBuilder.Entity<TmpJob>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmpJobs");

            entity.Property(e => e.DsMotivo)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DtEstorno)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dtEstorno");
            entity.Property(e => e.IdOperacaoConta).HasColumnName("idOperacaoConta");
            entity.Property(e => e.Idlancamentodiario).HasColumnName("idlancamentodiario");
            entity.Property(e => e.NrAnoEstorno).HasColumnName("nrAnoEstorno");
            entity.Property(e => e.NrAnoOperacaoConta).HasColumnName("nrAnoOperacaoConta");
            entity.Property(e => e.NrEstorno).HasColumnName("nrEstorno");
            entity.Property(e => e.VlLancamento)
                .HasColumnType("money")
                .HasColumnName("vlLancamento");
        });

        modelBuilder.Entity<TmpLiquidaco>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmp_liquidacoes");

            entity.Property(e => e.CdCfop).HasColumnName("cdCFOP");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsSerie)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsSerie");
            entity.Property(e => e.DsSerieSeloSefa)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSerieSeloSEFA");
            entity.Property(e => e.DtDocumento)
                .HasColumnType("datetime")
                .HasColumnName("dtDocumento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtRecebimento)
                .HasColumnType("datetime")
                .HasColumnName("dtRecebimento");
            entity.Property(e => e.DtVencimento)
                .HasColumnType("datetime")
                .HasColumnName("dtVencimento");
            entity.Property(e => e.IdTipoSerieDocFiscal).HasColumnName("idTipoSerieDocFiscal");
            entity.Property(e => e.NrCodigoBarras)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrCodigoBarras");
            entity.Property(e => e.NrCompAno).HasColumnName("nrCompAno");
            entity.Property(e => e.NrCompMes).HasColumnName("nrCompMes");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.NrSeloSefa)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("nrSeloSEFA");
            entity.Property(e => e.VlDocumento)
                .HasColumnType("money")
                .HasColumnName("vlDocumento");
            entity.Property(e => e.VlIcmsdestacado)
                .HasColumnType("money")
                .HasColumnName("vlICMSDestacado");
            entity.Property(e => e.VlIcmsretido)
                .HasColumnType("money")
                .HasColumnName("vlICMSRetido");
        });

        modelBuilder.Entity<TmpRap>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmp_rap");

            entity.Property(e => e.Cdnatdespesa)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("CDNATDESPESA");
            entity.Property(e => e.ContaInscricao)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.Idempenho).HasColumnName("idempenho");
            entity.Property(e => e.InscritoProcessado).HasColumnType("money");
            entity.Property(e => e.Nrano).HasColumnName("nrano");
            entity.Property(e => e.Nrempenho).HasColumnName("nrempenho");
            entity.Property(e => e.SaldoContaLiquidado).HasColumnType("money");
            entity.Property(e => e.VlInscrito2013)
                .HasColumnType("money")
                .HasColumnName("vlInscrito2013");
            entity.Property(e => e.VlInscrito2014)
                .HasColumnType("money")
                .HasColumnName("vlInscrito2014");
        });

        modelBuilder.Entity<TmpRap1>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmpRAP");

            entity.Property(e => e.IdEmpenho).ValueGeneratedOnAdd();
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrEmpenho).HasColumnName("nrEmpenho");
            entity.Property(e => e.VlProcessadoEmLiquidacao)
                .HasColumnType("money")
                .HasColumnName("vlProcessadoEmLiquidacao");
            entity.Property(e => e.VlSaldoNaoProcessado)
                .HasColumnType("money")
                .HasColumnName("vlSaldoNaoProcessado");
            entity.Property(e => e.VlSaldoProcessado)
                .HasColumnType("money")
                .HasColumnName("vlSaldoProcessado");
        });

        modelBuilder.Entity<TmpSaldosRap2012Am>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmp_SaldosRAP2012_AM");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(21)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.DsCategoriaConta)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsCategoriaConta");
            entity.Property(e => e.DsContaContabil)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsContaContabil");
            entity.Property(e => e.DsEspecificacao)
                .IsUnicode(false)
                .HasColumnName("dsEspecificacao");
            entity.Property(e => e.DsLoginAlteracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginAlteracao");
            entity.Property(e => e.DsLoginInclusao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginInclusao");
            entity.Property(e => e.DsTipoContaPadrao)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoContaPadrao");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.DtCriacao)
                .HasColumnType("datetime")
                .HasColumnName("dtCriacao");
            entity.Property(e => e.DtDesativacao)
                .HasColumnType("datetime")
                .HasColumnName("dtDesativacao");
            entity.Property(e => e.FlContaPadrao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flContaPadrao");
            entity.Property(e => e.FlEscrituracao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flEscrituracao");
            entity.Property(e => e.IdContaContabil).ValueGeneratedOnAdd();
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.TpControle)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpControle");
            entity.Property(e => e.TpIndicSupFinanc)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpIndicSupFinanc");
            entity.Property(e => e.TpNaturezaInformacao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpNaturezaInformacao");
            entity.Property(e => e.TpNaturezaSaldo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpNaturezaSaldo");
            entity.Property(e => e.VlSaldoInicial)
                .HasColumnType("money")
                .HasColumnName("vlSaldoInicial");
        });

        modelBuilder.Entity<TmpSaldosRap2012giig>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmp_SaldosRAP2012GIIG");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.VlSaldo)
                .HasColumnType("money")
                .HasColumnName("vlSaldo");
        });

        modelBuilder.Entity<TmpTbOrcProgramasAcoesLoa2014>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmp_tbOrcProgramasAcoesLOA2014");

            entity.Property(e => e.CdAcao)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdAcao");
            entity.Property(e => e.CdFuncao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFuncao");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdPrograma)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdPrograma");
            entity.Property(e => e.CdSubFuncao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdSubFuncao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsAcao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsAcao");
            entity.Property(e => e.DsJustifExpansao)
                .IsUnicode(false)
                .HasColumnName("dsJustifExpansao");
            entity.Property(e => e.DsJustifLimite)
                .IsUnicode(false)
                .HasColumnName("dsJustifLimite");
            entity.Property(e => e.DsQdd)
                .IsUnicode(false)
                .HasColumnName("dsQDD");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.DtLimite)
                .HasColumnType("datetime")
                .HasColumnName("dtLimite");
            entity.Property(e => e.FlPlanejamento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPlanejamento");
            entity.Property(e => e.IdAcao).ValueGeneratedOnAdd();
            entity.Property(e => e.Idempresa).HasColumnName("IDEmpresa");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMetaExpansao)
                .HasColumnType("decimal(16, 2)")
                .HasColumnName("nrMetaExpansao");
            entity.Property(e => e.NrMetaLimite)
                .HasColumnType("decimal(16, 2)")
                .HasColumnName("nrMetaLimite");
            entity.Property(e => e.NrPrioridade).HasColumnName("nrPrioridade");
            entity.Property(e => e.VlExpansao)
                .HasColumnType("money")
                .HasColumnName("vlExpansao");
            entity.Property(e => e.VlLimite)
                .HasColumnType("money")
                .HasColumnName("vlLimite");
        });

        modelBuilder.Entity<TmpdocCombustivel>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TMPDocCombustivel");

            entity.Property(e => e.NrDocumento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
        });

        modelBuilder.Entity<TmpdspLiquidacoesDocumentosCmfi>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TMPDspLiquidacoesDocumentosCMFI");

            entity.Property(e => e.CdCfop).HasColumnName("cdCFOP");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsSerie)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsSerie");
            entity.Property(e => e.DsSerieSeloSefa)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSerieSeloSEFA");
            entity.Property(e => e.DsTipoComunicacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoComunicacao");
            entity.Property(e => e.DtDocumento)
                .HasColumnType("datetime")
                .HasColumnName("dtDocumento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtRecebimento)
                .HasColumnType("datetime")
                .HasColumnName("dtRecebimento");
            entity.Property(e => e.DtVencimento)
                .HasColumnType("datetime")
                .HasColumnName("dtVencimento");
            entity.Property(e => e.IdTipoSerieDocFiscal).HasColumnName("idTipoSerieDocFiscal");
            entity.Property(e => e.NrAutenticacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrAutenticacao");
            entity.Property(e => e.NrCodigoBarras)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrCodigoBarras");
            entity.Property(e => e.NrCompAno).HasColumnName("nrCompAno");
            entity.Property(e => e.NrCompMes).HasColumnName("nrCompMes");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.NrLinhaDigitavel)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("nrLinhaDigitavel");
            entity.Property(e => e.NrReferencia)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrReferencia");
            entity.Property(e => e.NrSeloSefa)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("nrSeloSEFA");
            entity.Property(e => e.VlDescontoGru)
                .HasColumnType("money")
                .HasColumnName("vlDescontoGRU");
            entity.Property(e => e.VlDocumento)
                .HasColumnType("money")
                .HasColumnName("vlDocumento");
            entity.Property(e => e.VlIcmsdestacado)
                .HasColumnType("money")
                .HasColumnName("vlICMSDestacado");
            entity.Property(e => e.VlIcmsretido)
                .HasColumnType("money")
                .HasColumnName("vlICMSRetido");
            entity.Property(e => e.VlMoraJuros)
                .HasColumnType("money")
                .HasColumnName("vlMoraJuros");
            entity.Property(e => e.VlPrincipalGru)
                .HasColumnType("money")
                .HasColumnName("vlPrincipalGRU");
        });

        modelBuilder.Entity<Tmpextrasremovido>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmpextrasremovidos");

            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsMotivo)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DtEstorno)
                .HasColumnType("datetime")
                .HasColumnName("dtEstorno");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdEstorno).ValueGeneratedOnAdd();
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlEstorno)
                .HasColumnType("money")
                .HasColumnName("vlEstorno");
        });

        modelBuilder.Entity<Tmpgambi>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmpgambis");

            entity.Property(e => e.Dtlancamento)
                .HasColumnType("datetime")
                .HasColumnName("dtlancamento");
            entity.Property(e => e.Historicos)
                .IsUnicode(false)
                .HasColumnName("historicos");
            entity.Property(e => e.Idcontacontabilcredito).HasColumnName("idcontacontabilcredito");
            entity.Property(e => e.Iddividafundada).HasColumnName("iddividafundada");
            entity.Property(e => e.Idlancamento).HasColumnName("idlancamento");
            entity.Property(e => e.Vllancamento)
                .HasColumnType("money")
                .HasColumnName("vllancamento");
        });

        modelBuilder.Entity<Tmpidsverificar>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmpidsverificar");

            entity.Property(e => e.Dsnumobjeto).HasColumnName("dsnumobjeto");
        });

        modelBuilder.Entity<TmpliquidaCmfi>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmpliquidaCMFI");

            entity.Property(e => e.Dshistorico).HasColumnName("dshistorico");
            entity.Property(e => e.Dslogin)
                .HasMaxLength(50)
                .IsFixedLength()
                .HasColumnName("dslogin");
            entity.Property(e => e.Dtinclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtinclusao");
            entity.Property(e => e.Dtliquidacao)
                .HasColumnType("datetime")
                .HasColumnName("dtliquidacao");
            entity.Property(e => e.Flcisaofusao).HasColumnName("flcisaofusao");
            entity.Property(e => e.Idccarrecadadora).HasColumnName("idccarrecadadora");
            entity.Property(e => e.Idccfavorrecido).HasColumnName("idccfavorrecido");
            entity.Property(e => e.Idccgrafica).HasColumnName("idccgrafica");
            entity.Property(e => e.Idempresa).HasColumnName("idempresa");
            entity.Property(e => e.Idpessoaliquidante).HasColumnName("idpessoaliquidante");
            entity.Property(e => e.Idsolicitacao).HasColumnName("idsolicitacao");
            entity.Property(e => e.Nmservidor)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("nmservidor");
            entity.Property(e => e.Nrano).HasColumnName("nrano");
            entity.Property(e => e.Nrcpfservidor)
                .HasMaxLength(11)
                .IsUnicode(false)
                .HasColumnName("nrcpfservidor");
            entity.Property(e => e.Nrsequencia).HasColumnName("nrsequencia");
            entity.Property(e => e.Nrsequenciaanual).HasColumnName("nrsequenciaanual");
            entity.Property(e => e.Vlliquidacao)
                .HasColumnType("money")
                .HasColumnName("vlliquidacao");
        });

        modelBuilder.Entity<TmpliquidacaoCmfi>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmpliquidacaoCMFI");

            entity.Property(e => e.Dshistorico)
                .HasMaxLength(250)
                .IsFixedLength()
                .HasColumnName("dshistorico");
            entity.Property(e => e.Dslogin)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("dslogin");
            entity.Property(e => e.Dtinclusao)
                .HasColumnType("date")
                .HasColumnName("dtinclusao");
            entity.Property(e => e.Dtliquidacao)
                .HasColumnType("date")
                .HasColumnName("dtliquidacao");
            entity.Property(e => e.Flcisaofusao)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("flcisaofusao");
            entity.Property(e => e.Idccarrecadadora)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("idccarrecadadora");
            entity.Property(e => e.Idccgrafica)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("idccgrafica");
            entity.Property(e => e.Iddfavoreciso)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("iddfavoreciso");
            entity.Property(e => e.Idempenho)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("idempenho");
            entity.Property(e => e.Idempresa)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("idempresa");
            entity.Property(e => e.Idliquidacao)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("idliquidacao");
            entity.Property(e => e.Idpessoaliquidante)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("idpessoaliquidante");
            entity.Property(e => e.Idsolicitante)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("idsolicitante");
            entity.Property(e => e.Nmservidor)
                .HasMaxLength(25)
                .IsFixedLength()
                .HasColumnName("nmservidor");
            entity.Property(e => e.Nrano)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("nrano");
            entity.Property(e => e.Nrcpfliquidante)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("nrcpfliquidante");
            entity.Property(e => e.Nrsequenciaanual)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("nrsequenciaanual");
            entity.Property(e => e.Vlliquidacao)
                .HasColumnType("money")
                .HasColumnName("vlliquidacao");
        });

        modelBuilder.Entity<TmpliquidacoesCmfi>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmpliquidacoesCMFI");

            entity.Property(e => e.Dshistorico)
                .HasMaxLength(250)
                .IsFixedLength()
                .HasColumnName("dshistorico");
            entity.Property(e => e.Dslogin)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("dslogin");
            entity.Property(e => e.Dtliquidacao)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("dtliquidacao");
            entity.Property(e => e.Dtonclusao)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("dtonclusao");
            entity.Property(e => e.Flcisaofusao)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("flcisaofusao");
            entity.Property(e => e.Idccarrecadadora)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("idccarrecadadora");
            entity.Property(e => e.Idccfavorecido)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("idccfavorecido");
            entity.Property(e => e.Idccgrafica)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("idccgrafica");
            entity.Property(e => e.Idempenho).HasColumnName("idempenho");
            entity.Property(e => e.Idempresa).HasColumnName("idempresa");
            entity.Property(e => e.Idpessoaliquidante)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("idpessoaliquidante");
            entity.Property(e => e.Idsolicitacao)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("idsolicitacao");
            entity.Property(e => e.Nmservidor)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("nmservidor");
            entity.Property(e => e.Nrano)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("nrano");
            entity.Property(e => e.Nrcpfliquidante)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("nrcpfliquidante");
            entity.Property(e => e.Nrsequencia)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("nrsequencia");
            entity.Property(e => e.Vliquidacao)
                .HasColumnType("money")
                .HasColumnName("vliquidacao");
        });

        modelBuilder.Entity<Tmpnota>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmpnotas");

            entity.Property(e => e.DtLiquidacao)
                .HasColumnType("datetime")
                .HasColumnName("dtLiquidacao");
            entity.Property(e => e.DtRecebimento)
                .HasColumnType("datetime")
                .HasColumnName("dtRecebimento");
        });

        modelBuilder.Entity<Tmpsaldo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmpsaldos");

            entity.Property(e => e.Ano).HasColumnName("ano");
            entity.Property(e => e.CdEvento).HasColumnName("cdEvento");
            entity.Property(e => e.Data)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("data");
            entity.Property(e => e.DsOperacao)
                .HasMaxLength(22)
                .IsUnicode(false)
                .HasColumnName("dsOperacao");
            entity.Property(e => e.Dshistorico)
                .HasMaxLength(31)
                .IsUnicode(false)
                .HasColumnName("dshistorico");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Ip)
                .HasMaxLength(9)
                .IsUnicode(false)
                .HasColumnName("ip");
            entity.Property(e => e.Objeto)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("objeto");
            entity.Property(e => e.Orgao).HasColumnName("orgao");
            entity.Property(e => e.Processado).HasColumnName("processado");
            entity.Property(e => e.Unidade).HasColumnName("unidade");
            entity.Property(e => e.Usuario)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("usuario");
            entity.Property(e => e.VlLancamento)
                .HasColumnType("money")
                .HasColumnName("vlLancamento");
        });

        modelBuilder.Entity<TmptbDspConsignacoesCmfi>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmptbDspConsignacoesCMFI");

            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtConsignacao)
                .HasColumnType("datetime")
                .HasColumnName("dtConsignacao");
            entity.Property(e => e.DtExclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtExclusao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.FlExcluido)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flExcluido");
            entity.Property(e => e.IdCcorigem).HasColumnName("IdCCOrigem");
            entity.Property(e => e.IdConsignaPmfi).HasColumnName("IdConsignaPMFI");
            entity.Property(e => e.NrCei)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("nrCEI");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.NrPercentual)
                .HasColumnType("money")
                .HasColumnName("nrPercentual");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlConsignacao)
                .HasColumnType("money")
                .HasColumnName("vlConsignacao");
        });

        modelBuilder.Entity<TmptbDspDespesaExtraOrcamentariaCmfi>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TMPtbDspDespesaExtraOrcamentariaCMFI");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipo");
            entity.Property(e => e.DtDespesa)
                .HasColumnType("datetime")
                .HasColumnName("dtDespesa");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.IdCcfavorecido).HasColumnName("IdCCFavorecido");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrDocFinanceiro)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocFinanceiro");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.VlDespesa)
                .HasColumnType("money")
                .HasColumnName("vlDespesa");
        });

        modelBuilder.Entity<TmptbDspPagamentosCmfi>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TMPtbDspPagamentosCMFI");

            entity.Property(e => e.DsHistorico)
                .IsUnicode(false)
                .HasColumnName("dsHistorico");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DtDoctoPagamento)
                .HasColumnType("datetime")
                .HasColumnName("dtDoctoPagamento");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtPagamento)
                .HasColumnType("datetime")
                .HasColumnName("dtPagamento");
            entity.Property(e => e.IdCcarrecadadora).HasColumnName("IdCCArrecadadora");
            entity.Property(e => e.IdCcempresa).HasColumnName("IdCCEmpresa");
            entity.Property(e => e.IdCcfavorecido).HasColumnName("IdCCFavorecido");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrDocumento");
            entity.Property(e => e.NrSequencia).HasColumnName("nrSequencia");
            entity.Property(e => e.NrSequenciaAnual).HasColumnName("nrSequenciaAnual");
            entity.Property(e => e.VlPagamento)
                .HasColumnType("money")
                .HasColumnName("vlPagamento");
            entity.Property(e => e.VlRetencoes)
                .HasColumnType("money")
                .HasColumnName("vlRetencoes");
        });

        modelBuilder.Entity<TmptbFinContasContabei>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmptbFinContasContabeis");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(21)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.DsCategoriaConta)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsCategoriaConta");
            entity.Property(e => e.DsContaContabil)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsContaContabil");
            entity.Property(e => e.DsEspecificacao)
                .IsUnicode(false)
                .HasColumnName("dsEspecificacao");
            entity.Property(e => e.DsLoginAlteracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginAlteracao");
            entity.Property(e => e.DsLoginInclusao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLoginInclusao");
            entity.Property(e => e.DsTipoContaPadrao)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoContaPadrao");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.DtCriacao)
                .HasColumnType("datetime")
                .HasColumnName("dtCriacao");
            entity.Property(e => e.DtDesativacao)
                .HasColumnType("datetime")
                .HasColumnName("dtDesativacao");
            entity.Property(e => e.FlContaPadrao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flContaPadrao");
            entity.Property(e => e.FlEscrituracao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flEscrituracao");
            entity.Property(e => e.IdContaContabil).ValueGeneratedOnAdd();
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.TpControle)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpControle");
            entity.Property(e => e.TpIndicSupFinanc)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpIndicSupFinanc");
            entity.Property(e => e.TpNaturezaInformacao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpNaturezaInformacao");
            entity.Property(e => e.TpNaturezaSaldo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpNaturezaSaldo");
            entity.Property(e => e.VlSaldoInicial)
                .HasColumnType("money")
                .HasColumnName("vlSaldoInicial");
        });

        modelBuilder.Entity<TmptbOrcFonte>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmptbOrcFontes");

            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.DsFonte)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsFonte");
            entity.Property(e => e.DsFonteRecurso)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsFonteRecurso");
            entity.Property(e => e.DsTipoFonte)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("dsTipoFonte");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.FlPadraoTce)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPadraoTCE");
            entity.Property(e => e.IdFonte).ValueGeneratedOnAdd();
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.VlSaldoInicial)
                .HasColumnType("money")
                .HasColumnName("vlSaldoInicial");
        });

        modelBuilder.Entity<TmptbOrcNaturezasDespesa>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmptbOrcNaturezasDespesa");

            entity.Property(e => e.CdNatDespesa)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("cdNatDespesa");
            entity.Property(e => e.DsEspecificacao)
                .IsUnicode(false)
                .HasColumnName("dsEspecificacao");
            entity.Property(e => e.DsNatDespesa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsNatDespesa");
            entity.Property(e => e.DsTipoNatDespesaPadrao)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoNatDespesaPadrao");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.DtDesativacao)
                .HasColumnType("datetime")
                .HasColumnName("dtDesativacao");
            entity.Property(e => e.FlNatDespesaPadrao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flNatDespesaPadrao");
            entity.Property(e => e.IdNatDespesa).ValueGeneratedOnAdd();
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<TmptbOrcReceita>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmptbOrcReceitas");

            entity.Property(e => e.CdReceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.DsEspecificacao)
                .IsUnicode(false)
                .HasColumnName("dsEspecificacao");
            entity.Property(e => e.DsReceita)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsReceita");
            entity.Property(e => e.DsTipoReceitaPadrao)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoReceitaPadrao");
            entity.Property(e => e.DtCadastro)
                .HasColumnType("datetime")
                .HasColumnName("dtCadastro");
            entity.Property(e => e.DtDesativacao)
                .HasColumnType("datetime")
                .HasColumnName("dtDesativacao");
            entity.Property(e => e.FlReceitaIntraOrcamentaria)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flReceitaIntraOrcamentaria");
            entity.Property(e => e.FlReceitaPadrao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flReceitaPadrao");
            entity.Property(e => e.IdReceita).ValueGeneratedOnAdd();
            entity.Property(e => e.IdTipoEsferaGoverno).HasColumnName("idTipoEsferaGoverno");
            entity.Property(e => e.IdTipoNivelContaNumerico).HasColumnName("idTipoNivelConta_numerico");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.Observacao)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TmptbdspempenhositensCmfi>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmptbdspempenhositensCMFI");

            entity.Property(e => e.Dsitemcompl)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("dsitemcompl");
            entity.Property(e => e.Dsmarca)
                .HasMaxLength(50)
                .IsFixedLength()
                .HasColumnName("dsmarca");
            entity.Property(e => e.Idempenho).HasColumnName("idempenho");
            entity.Property(e => e.Idempenhoitem).HasColumnName("idempenhoitem");
            entity.Property(e => e.Iditem).HasColumnName("iditem");
            entity.Property(e => e.Idnatdespesa).HasColumnName("idnatdespesa");
            entity.Property(e => e.Nrlote).HasColumnName("nrlote");
            entity.Property(e => e.Nrqtde)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrqtde");
            entity.Property(e => e.Vltotal)
                .HasColumnType("money")
                .HasColumnName("vltotal");
            entity.Property(e => e.Vlunitario)
                .HasColumnType("money")
                .HasColumnName("vlunitario");
        });

        modelBuilder.Entity<Tmptipoconsignacao>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmptipoconsignacao");

            entity.Property(e => e.Cdcontacontabil)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdcontacontabil");
            entity.Property(e => e.Idtipoconsignacao).HasColumnName("idtipoconsignacao");
        });

        modelBuilder.Entity<VwAditivo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwAditivos");

            entity.Property(e => e.DsMotivo)
                .IsUnicode(false)
                .HasColumnName("dsMotivo");
            entity.Property(e => e.DtNovaTermino)
                .HasColumnType("datetime")
                .HasColumnName("dtNovaTermino");
            entity.Property(e => e.DtTermo)
                .HasColumnType("datetime")
                .HasColumnName("dtTermo");
            entity.Property(e => e.NrAditivo).HasColumnName("nrAditivo");
            entity.Property(e => e.NrCnpj)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrCNPJ");
            entity.Property(e => e.VlAditivo)
                .HasColumnType("money")
                .HasColumnName("vlAditivo");
        });

        modelBuilder.Entity<VwContasCredore>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwContasCredores");

            entity.Property(e => e.CdBanco)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdBanco");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.NrAgencia)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nrAgencia");
            entity.Property(e => e.NrCc)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrCC");
            entity.Property(e => e.NrCpf).HasColumnName("nrCPF");
            entity.Property(e => e.NrDvCc)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nrDvCC");
            entity.Property(e => e.NrDvagencia)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nrDVAgencia");
        });

        modelBuilder.Entity<VwContrato>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwContratos");

            entity.Property(e => e.CdOrgao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdOrgao");
            entity.Property(e => e.DsFormaPagamento)
                .IsUnicode(false)
                .HasColumnName("dsFormaPagamento");
            entity.Property(e => e.DsMultaInadimplemento)
                .IsUnicode(false)
                .HasColumnName("dsMultaInadimplemento");
            entity.Property(e => e.DsMultaRescisoria)
                .IsUnicode(false)
                .HasColumnName("dsMultaRescisoria");
            entity.Property(e => e.DsObjeto)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSigla");
            entity.Property(e => e.DtAssinatura)
                .HasColumnType("datetime")
                .HasColumnName("dtAssinatura");
            entity.Property(e => e.DtContrato)
                .HasColumnType("datetime")
                .HasColumnName("dtContrato");
            entity.Property(e => e.DtTerminoPrazo)
                .HasColumnType("datetime")
                .HasColumnName("dtTerminoPrazo");
            entity.Property(e => e.FlFornecimentoImediato)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flFornecimentoImediato");
            entity.Property(e => e.FlPrevisaoSubContratacao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flPrevisaoSubContratacao");
            entity.Property(e => e.IdAm).HasColumnName("IdAM");
            entity.Property(e => e.IdContrato)
                .HasMaxLength(14)
                .IsUnicode(false);
            entity.Property(e => e.NmOrgao)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("nmOrgao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrCnpj)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrCNPJ");
            entity.Property(e => e.NrCnpjcpf)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrCNPJCPF");
            entity.Property(e => e.NrContrato).HasColumnName("nrContrato");
            entity.Property(e => e.NumLicitacao)
                .HasMaxLength(14)
                .IsUnicode(false);
            entity.Property(e => e.PrazoExecucao)
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.Representante)
                .HasMaxLength(14)
                .IsUnicode(false);
            entity.Property(e => e.RespEncargos)
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.UtilizaRecExtra)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.VlContrato)
                .HasColumnType("money")
                .HasColumnName("vlContrato");
            entity.Property(e => e.VlRecursoOperCredito)
                .HasColumnType("money")
                .HasColumnName("vlRecursoOperCredito");
        });

        modelBuilder.Entity<VwCotacaoItensVencedore>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwCotacaoItensVencedores");

            entity.Property(e => e.Cnpjempresa)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("CNPJEmpresa");
            entity.Property(e => e.DsCondicaoPgto)
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasColumnName("dsCondicaoPgto");
            entity.Property(e => e.DsDetalhamento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsDetalhamento");
            entity.Property(e => e.DsMarca)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsMarca");
            entity.Property(e => e.DsPrazoEntrega)
                .HasMaxLength(2550)
                .IsUnicode(false)
                .HasColumnName("dsPrazoEntrega");
            entity.Property(e => e.DtCotacao)
                .HasColumnType("datetime")
                .HasColumnName("dtCotacao");
            entity.Property(e => e.DtPrazoEntrega)
                .HasColumnType("datetime")
                .HasColumnName("dtPrazoEntrega");
            entity.Property(e => e.DtVencimentoProposta)
                .HasColumnType("datetime")
                .HasColumnName("dtVencimentoProposta");
            entity.Property(e => e.FlCotacao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flCotacao");
            entity.Property(e => e.FlVencedor)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flVencedor");
            entity.Property(e => e.NrClassificacao).HasColumnName("nrClassificacao");
            entity.Property(e => e.NrCnpjcpf)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrCNPJCPF");
            entity.Property(e => e.NrLote).HasColumnName("nrLote");
            entity.Property(e => e.NrQuantidade)
                .HasColumnType("money")
                .HasColumnName("nrQuantidade");
            entity.Property(e => e.NumLicitacao)
                .HasMaxLength(14)
                .IsUnicode(false);
            entity.Property(e => e.VlTotal)
                .HasColumnType("money")
                .HasColumnName("vlTotal");
            entity.Property(e => e.VlTotalNegociado)
                .HasColumnType("money")
                .HasColumnName("vlTotalNegociado");
            entity.Property(e => e.VlUnitario)
                .HasColumnType("money")
                .HasColumnName("vlUnitario");
        });

        modelBuilder.Entity<VwDimReceitaContabil2ano>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("VW_DIM_RECEITA_CONTABIL_2ANOS");

            entity.Property(e => e.Cdreceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CDRECEITA");
            entity.Property(e => e.Receita)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("RECEITA");
        });

        modelBuilder.Entity<VwFatoContabil2ano>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("VW_FATO_CONTABIL_2ANOS");

            entity.Property(e => e.Cdreceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CDRECEITA");
            entity.Property(e => e.DataDoPagamento)
                .HasColumnType("datetime")
                .HasColumnName("DATA DO PAGAMENTO");
            entity.Property(e => e.ValorLançado)
                .HasColumnType("money")
                .HasColumnName("VALOR LANÇADO");
        });

        modelBuilder.Entity<VwLicitacaoIten>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwLicitacaoItens");

            entity.Property(e => e.Cnpjempresa)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("CNPJEmpresa");
            entity.Property(e => e.NrSequencial).HasColumnName("nrSequencial");
            entity.Property(e => e.NumLicitacao)
                .HasMaxLength(14)
                .IsUnicode(false);
        });

        modelBuilder.Entity<VwLicitacoesHomologada>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwLicitacoesHomologadas");

            entity.Property(e => e.Cnpjempresa)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("CNPJEmpresa");
            entity.Property(e => e.DsClausulaProrrogacao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsClausulaProrrogacao");
            entity.Property(e => e.DsHoraAbertura)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsHoraAbertura");
            entity.Property(e => e.DsHoraJulgamento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsHoraJulgamento");
            entity.Property(e => e.DsIndiceCorrecao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsIndiceCorrecao");
            entity.Property(e => e.DsLogin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dsLogin");
            entity.Property(e => e.DsObjeto)
                .IsUnicode(false)
                .HasColumnName("dsObjeto");
            entity.Property(e => e.DtAbertura)
                .HasColumnType("datetime")
                .HasColumnName("dtAbertura");
            entity.Property(e => e.DtEdital)
                .HasColumnType("datetime")
                .HasColumnName("dtEdital");
            entity.Property(e => e.DtHomologacao)
                .HasColumnType("datetime")
                .HasColumnName("dtHomologacao");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.DtJulgamento)
                .HasColumnType("datetime")
                .HasColumnName("dtJulgamento");
            entity.Property(e => e.DtPublicacaoDoe)
                .HasColumnType("datetime")
                .HasColumnName("dtPublicacaoDOE");
            entity.Property(e => e.FlVencedorPorLote)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flVencedorPorLote");
            entity.Property(e => e.FlVencedorPorMaiorDesconto)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flVencedorPorMaiorDesconto");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrLicitacao).HasColumnName("nrLicitacao");
            entity.Property(e => e.NrPontuacaoMinima).HasColumnName("nrPontuacaoMinima");
            entity.Property(e => e.VlMaximo)
                .HasColumnType("money")
                .HasColumnName("vlMaximo");
            entity.Property(e => e.VlMinimo)
                .HasColumnType("money")
                .HasColumnName("vlMinimo");
        });

        modelBuilder.Entity<VwLicitacoesSitePmfi>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_licitacoesSitePMFI");

            entity.Property(e => e.DataAbertura).HasColumnType("datetime");
            entity.Property(e => e.HoraAbertura)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Modalidade)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Objeto).IsUnicode(false);
            entity.Property(e => e.Situacao)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<VwPessoa>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwPessoas");

            entity.Property(e => e.DsAtividade)
                .IsUnicode(false)
                .HasColumnName("dsAtividade");
            entity.Property(e => e.DsCep)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("dsCEP");
            entity.Property(e => e.DsComplEndereco)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("dsComplEndereco");
            entity.Property(e => e.DsEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsEmail");
            entity.Property(e => e.DsOrgaoExp)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsOrgaoExp");
            entity.Property(e => e.DsSite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dsSite");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipo");
            entity.Property(e => e.DsUf)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("dsUF");
            entity.Property(e => e.DsufExp)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsufExp");
            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtInclusao");
            entity.Property(e => e.NmBairro)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmBairro");
            entity.Property(e => e.NmCidade)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmCidade");
            entity.Property(e => e.NmFantasia)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nmFantasia");
            entity.Property(e => e.NmLogradouro)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nmLogradouro");
            entity.Property(e => e.NmPessoa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nmPessoa");
            entity.Property(e => e.NrAg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("nrAG");
            entity.Property(e => e.NrCc)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("nrCC");
            entity.Property(e => e.NrCmc).HasColumnName("nrCMC");
            entity.Property(e => e.NrCnpjcpf)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("nrCNPJCPF");
            entity.Property(e => e.NrFax)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("nrFax");
            entity.Property(e => e.NrPredial)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("nrPredial");
            entity.Property(e => e.NrRegistroJuntaComercial)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrRegistroJuntaComercial");
            entity.Property(e => e.NrRgIe)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nrRg_IE");
            entity.Property(e => e.NrTelefones)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nrTelefones");
            entity.Property(e => e.VlCapitalSocial)
                .HasColumnType("money")
                .HasColumnName("vlCapitalSocial");
        });

        modelBuilder.Entity<VwProventosEmpenhosPagamento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwProventosEmpenhosPagamentos");

            entity.Property(e => e.CdContaExtraOuDesconto)
                .HasMaxLength(21)
                .IsUnicode(false)
                .HasColumnName("cdContaExtraOuDesconto");
            entity.Property(e => e.CdProvento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdProvento");
            entity.Property(e => e.DsContaExtraOuDesconto)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsContaExtraOuDesconto");
            entity.Property(e => e.IdTipoOperacaoPagamento).HasColumnName("idTipoOperacaoPagamento");
            entity.Property(e => e.NrAnoEmpenho).HasColumnName("nrAnoEmpenho");
            entity.Property(e => e.NrAnoOperacaoBancoCaixa).HasColumnName("nrAnoOperacaoBancoCaixa");
            entity.Property(e => e.NrEmpenho).HasColumnName("nrEmpenho");
            entity.Property(e => e.NrOperacaoBancoCaixa).HasColumnName("nrOperacaoBancoCaixa");
            entity.Property(e => e.TpDespesa)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("tpDespesa");
            entity.Property(e => e.VlEstornadoEmpenho)
                .HasColumnType("money")
                .HasColumnName("vlEstornadoEmpenho");
            entity.Property(e => e.VlEstornadoPagamento)
                .HasColumnType("money")
                .HasColumnName("vlEstornadoPagamento");
            entity.Property(e => e.VlPagamento)
                .HasColumnType("money")
                .HasColumnName("vlPagamento");
        });

        modelBuilder.Entity<VwRelSaldosArrecadacaoReceitaFonte>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwRelSaldosArrecadacaoReceitaFonte");

            entity.Property(e => e.CdAplicacaoFonte)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdAplicacaoFonte");
            entity.Property(e => e.CdCategoriaEconomica)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("cdCategoriaEconomica");
            entity.Property(e => e.CdDesdobramentoFonte)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdDesdobramentoFonte");
            entity.Property(e => e.CdDetalhamentoFonte)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdDetalhamentoFonte");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.CdFonteNormal)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("cdFonteNormal");
            entity.Property(e => e.CdOrigem)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdOrigem");
            entity.Property(e => e.CdReceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlArrecadado)
                .HasColumnType("money")
                .HasColumnName("vlArrecadado");
        });

        modelBuilder.Entity<VwRelSaldosAtosAlteracaoSuperavit>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwRelSaldosAtosAlteracaoSuperavit");

            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.CdFonteNormal)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("cdFonteNormal");
            entity.Property(e => e.CdFuncao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFuncao");
            entity.Property(e => e.CdNatDespesa)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("cdNatDespesa");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdSubFuncao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdSubFuncao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsSigla");
            entity.Property(e => e.DsSituacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsSituacao");
            entity.Property(e => e.Idempresa).HasColumnName("IDEmpresa");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlAlteracao)
                .HasColumnType("money")
                .HasColumnName("vlAlteracao");
        });

        modelBuilder.Entity<VwRelSaldosContaContabilFonte>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwRelSaldosContaContabilFonte");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlCredito)
                .HasColumnType("money")
                .HasColumnName("vlCredito");
            entity.Property(e => e.VlCreditoDebito)
                .HasColumnType("money")
                .HasColumnName("vlCreditoDebito");
            entity.Property(e => e.VlCreditoSemEstorno)
                .HasColumnType("money")
                .HasColumnName("vlCreditoSemEstorno");
            entity.Property(e => e.VlDebito)
                .HasColumnType("money")
                .HasColumnName("vlDebito");
            entity.Property(e => e.VlDebitoCredito)
                .HasColumnType("money")
                .HasColumnName("vlDebitoCredito");
            entity.Property(e => e.VlDebitoSemEstorno)
                .HasColumnType("money")
                .HasColumnName("vlDebitoSemEstorno");
            entity.Property(e => e.VlSaldoInicial)
                .HasColumnType("money")
                .HasColumnName("vlSaldoInicial");
            entity.Property(e => e.VlSaldoProximo)
                .HasColumnType("money")
                .HasColumnName("vlSaldoProximo");
        });

        modelBuilder.Entity<VwRelSaldosContaContabilFonteDisponivelFinanceiro>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwRelSaldosContaContabilFonteDisponivelFinanceiro");

            entity.Property(e => e.CdAplicacaoFonte)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdAplicacaoFonte");
            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdDesdobramentoFonte)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdDesdobramentoFonte");
            entity.Property(e => e.CdDetalhamento)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdDetalhamento");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.CdOrigem)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdOrigem");
            entity.Property(e => e.DisponivelFinaceiro).HasColumnType("money");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlCredito)
                .HasColumnType("money")
                .HasColumnName("vlCredito");
            entity.Property(e => e.VlCreditoDebito)
                .HasColumnType("money")
                .HasColumnName("vlCreditoDebito");
            entity.Property(e => e.VlCreditoSemEstorno)
                .HasColumnType("money")
                .HasColumnName("vlCreditoSemEstorno");
            entity.Property(e => e.VlDebito)
                .HasColumnType("money")
                .HasColumnName("vlDebito");
            entity.Property(e => e.VlDebitoCredito)
                .HasColumnType("money")
                .HasColumnName("vlDebitoCredito");
            entity.Property(e => e.VlDebitoSemEstorno)
                .HasColumnType("money")
                .HasColumnName("vlDebitoSemEstorno");
            entity.Property(e => e.VlSaldoInicial)
                .HasColumnType("money")
                .HasColumnName("vlSaldoInicial");
            entity.Property(e => e.VlSaldoProximo)
                .HasColumnType("money")
                .HasColumnName("vlSaldoProximo");
        });

        modelBuilder.Entity<VwRelSaldosOperacoesCredito>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwRelSaldosOperacoesCredito");

            entity.Property(e => e.CdClassificacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdClassificacao");
            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsTipoOperacao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoOperacao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlLancado)
                .HasColumnType("money")
                .HasColumnName("vlLancado");
        });

        modelBuilder.Entity<VwRelSaldosReceitasFonte>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwRelSaldosReceitasFontes");

            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.CdFonteNormal)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("cdFonteNormal");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdReceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlArrecadado)
                .HasColumnType("money")
                .HasColumnName("vlArrecadado");
        });

        modelBuilder.Entity<VwRelSaldosReceitasIrpfdeduco>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwRelSaldosReceitasIRPFDeducoes");

            entity.Property(e => e.CdReceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.VlArrecadado)
                .HasColumnType("numeric(24, 7)")
                .HasColumnName("vlArrecadado");
        });

        modelBuilder.Entity<VwSaldosMensaisContasContabeisTipoSuperavit>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwSaldosMensaisContasContabeisTipoSuperavit");

            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsTipoContaPadrao)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsTipoContaPadrao");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrMes).HasColumnName("nrMes");
            entity.Property(e => e.TpIndicSupFinanc)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpIndicSupFinanc");
            entity.Property(e => e.VlCredito)
                .HasColumnType("money")
                .HasColumnName("vlCredito");
            entity.Property(e => e.VlCreditoDebito)
                .HasColumnType("money")
                .HasColumnName("vlCreditoDebito");
            entity.Property(e => e.VlCreditoSemEstorno)
                .HasColumnType("money")
                .HasColumnName("vlCreditoSemEstorno");
            entity.Property(e => e.VlDebito)
                .HasColumnType("money")
                .HasColumnName("vlDebito");
            entity.Property(e => e.VlDebitoCredito)
                .HasColumnType("money")
                .HasColumnName("vlDebitoCredito");
            entity.Property(e => e.VlDebitoSemEstorno)
                .HasColumnType("money")
                .HasColumnName("vlDebitoSemEstorno");
            entity.Property(e => e.VlSaldoInicial)
                .HasColumnType("money")
                .HasColumnName("vlSaldoInicial");
            entity.Property(e => e.VlSaldoProximo)
                .HasColumnType("money")
                .HasColumnName("vlSaldoProximo");
        });

        modelBuilder.Entity<XTbArrecadacao>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("xTbArrecadacao");

            entity.Property(e => e.Cdcontacontabil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdcontacontabil");
            entity.Property(e => e.Cdreceita)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdreceita");
            entity.Property(e => e.DtArrecadacao)
                .HasColumnType("datetime")
                .HasColumnName("dtArrecadacao");
            entity.Property(e => e.Vlarrecadado)
                .HasColumnType("money")
                .HasColumnName("vlarrecadado");
        });

        modelBuilder.Entity<XTbReceitasExcluidas2019>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("xTbReceitasExcluidas2019");

            entity.Property(e => e.CdReceita)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.DsDesdobramento)
                .IsUnicode(false)
                .HasColumnName("dsDesdobramento");
            entity.Property(e => e.DsEspecificacao)
                .IsUnicode(false)
                .HasColumnName("dsEspecificacao");
            entity.Property(e => e.FlReceitaIntraOrcamentaria)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flReceitaIntraOrcamentaria");
            entity.Property(e => e.IdTipoNivelConta)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("idTipoNivelConta");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<XTbReceitasIncluidas2019>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("xTbReceitasIncluidas2019");

            entity.Property(e => e.CdReceita)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdReceita");
            entity.Property(e => e.DsDesdobramento)
                .IsUnicode(false)
                .HasColumnName("dsDesdobramento");
            entity.Property(e => e.DsEspecificacao)
                .IsUnicode(false)
                .HasColumnName("dsEspecificacao");
            entity.Property(e => e.FlReceitaIntraOrcamentaria)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("flReceitaIntraOrcamentaria");
            entity.Property(e => e.IdTipoNivelConta)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("idTipoNivelConta");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
        });

        modelBuilder.Entity<XTbTmpDeParaReceita>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("xTbTmpDeParaReceitas");

            entity.Property(e => e.CdReceita2017)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceita2017");
            entity.Property(e => e.CdReceita2018)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cdReceita2018");
        });

        modelBuilder.Entity<XtbSaldoExercicioAnteriorRealizavel>(entity =>
        {
            entity.HasKey(e => e.IdSaldo);

            entity.ToTable("XtbSaldoExercicioAnteriorRealizavel");

            entity.Property(e => e.IdSaldo)
                .ValueGeneratedNever()
                .HasColumnName("idSaldo");
            entity.Property(e => e.CdContaContabil)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdContaContabil");
            entity.Property(e => e.CdFonte)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cdFonte");
            entity.Property(e => e.NrAno).HasColumnName("nrAno");
            entity.Property(e => e.NrAnoOperacao).HasColumnName("nrAnoOperacao");
            entity.Property(e => e.NrOperacao).HasColumnName("nrOperacao");
            entity.Property(e => e.TpLancamento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tpLancamento");
            entity.Property(e => e.VlLancamento)
                .HasColumnType("money")
                .HasColumnName("vlLancamento");
        });

        modelBuilder.Entity<XtbTempMovimentoDiarioContaBancarium>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("xtbTempMovimentoDiarioContaBancaria");

            entity.Property(e => e.CdClasse)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdClasse");
            entity.Property(e => e.CdGrupo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdGrupo");
            entity.Property(e => e.CdItem)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdItem");
            entity.Property(e => e.CdNivel10)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdNivel10");
            entity.Property(e => e.CdNivel11)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdNivel11");
            entity.Property(e => e.CdNivel12)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdNivel12");
            entity.Property(e => e.CdNivel8)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdNivel8");
            entity.Property(e => e.CdNivel9)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdNivel9");
            entity.Property(e => e.CdSubGrupo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdSubGrupo");
            entity.Property(e => e.CdSubItem)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdSubItem");
            entity.Property(e => e.CdSubTitulo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdSubTitulo");
            entity.Property(e => e.CdTitulo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cdTitulo");
            entity.Property(e => e.DtOperacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dtOperacao");
            entity.Property(e => e.IdConta)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("idConta");
            entity.Property(e => e.IdOperacaoConta)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("idOperacaoConta");
            entity.Property(e => e.IdPessoa)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.IdTipoOperacaoFinanceira)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("idTipoOperacaoFinanceira");
            entity.Property(e => e.NrAnoAplicacao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrAnoAplicacao");
            entity.Property(e => e.NrAnoOperacaoConta)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nrAnoOperacaoConta");
            entity.Property(e => e.Nulo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nulo");
            entity.Property(e => e.VlCredito)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("vlCredito");
            entity.Property(e => e.VlDebito)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("vlDebito");
        });

        modelBuilder.Entity<XxxTempTbPpaProgramasAco>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("XXX_Temp_tbPpaProgramasAcoes");

            entity.Property(e => e.CdAcao)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdAcao");
            entity.Property(e => e.CdFuncao)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdFuncao");
            entity.Property(e => e.CdOrgao)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("cdOrgao");
            entity.Property(e => e.CdPrograma)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdPrograma");
            entity.Property(e => e.CdSubFuncao)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdSubFuncao");
            entity.Property(e => e.CdUnidade)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("cdUnidade");
            entity.Property(e => e.DsAcao)
                .IsUnicode(false)
                .HasColumnName("dsAcao");
            entity.Property(e => e.DsContinuaAnoAnterior)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsContinuaAnoAnterior");
            entity.Property(e => e.DsMotivoCancelamento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("dsMotivoCancelamento");
            entity.Property(e => e.DsProduto)
                .IsUnicode(false)
                .HasColumnName("dsProduto");
            entity.Property(e => e.DsSigla)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dsSigla");
            entity.Property(e => e.DsTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTipo");
            entity.Property(e => e.DsTipoAcao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dsTipoAcao");
            entity.Property(e => e.DsTpComando)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("dsTpComando");
            entity.Property(e => e.DtCancelamento)
                .HasColumnType("datetime")
                .HasColumnName("dtCancelamento");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.NrAnoPpa).HasColumnName("nrAnoPPA");
            entity.Property(e => e.NrVersao).HasColumnName("nrVersao");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
