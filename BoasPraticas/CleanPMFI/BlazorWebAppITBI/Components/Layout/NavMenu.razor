@implements IDisposable
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="navmenu">
    <input type="checkbox" id="navmenu-toggle" />
    <nav class="sitenav" aria-labelledby="main-menu" onclick="document.getElementById('navmenu-toggle').click();">
        <FluentNavMenu Id="main-menu" Collapsible="true" Width="250" Title="Navigation menu" @bind-Expanded="expanded">
            <!-- <FluentNavLink Href="/"></FluentNavLink> -->
            <FluentNavLink Href="autodeclaracao" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.DocumentAdd())" IconColor="Color.Accent">Auto Declaração</FluentNavLink>
             <AuthorizeView>
                    <Authorized>
                        <FluentNavLink Href="Account/Manage" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.PersonAccounts())" IconColor="Color.Accent">@context.User.Identity?.Name</FluentNavLink>
                        <!--
                            <FluentNavLink Href="Account/Logout" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.ArrowExit())" IconColor="Color.Accent">Sair</FluentNavLink>
                        -->
                        <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Sair
                        </button>
                       
                    </form>
                    </Authorized>
                    <NotAuthorized>
                         <FluentNavLink Href="Account/Register" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.PersonAdd())" IconColor="Color.Accent">Registrar</FluentNavLink>
                        <FluentNavLink Href="Account/Login" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.PersonStar())" IconColor="Color.Accent">Login</FluentNavLink>
                    </NotAuthorized>
            </AuthorizeView>
            <!--  
            <FluentNavLink Href="/auditoria" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.PersonAlert())" IconColor="Color.Accent">Auditoria</FluentNavLink>
            <FluentNavLink Href="/avaliacao" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.Money())" IconColor="Color.Accent">Avaliações</FluentNavLink>
           -->
           
       
        </FluentNavMenu>
    </nav>
</div>

             <FluentOverlay @bind-Visible=@_overlayIsVisible
                       Opacity="0.4"
                       Alignment="Align.Center"
                       Justification="@JustifyContent.Center">
            <FluentProgressRing />
        </FluentOverlay>

@code {
    private bool expanded = true;
    private bool _overlayIsVisible = false;
   /* protected override async void OnInitialized()
    {
        _overlayIsVisible = true;

        await Task.Delay(100);

        _overlayIsVisible = false;
    }*/
    private string? currentUrl;

    protected async override void OnInitialized()
    {
       // _overlayIsVisible = true;

//        await Task.Delay(100);
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
  //      _overlayIsVisible = false;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
    public void Logout()
    {
        // Sua lógica de logout aqui
        NavigationManager.NavigateTo("/Account/Logout", forceLoad: true);
    }
}


       <!-- 
            <FluentNavLink Href="autodeclaracao" Icon="@(new Icons.Regular.Size20.DocumentAdd())" IconColor="Color.Accent">AutoDeclaração2</FluentNavLink>
            <FluentNavLink Href="/" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.Home())" IconColor="Color.Accent">Home</FluentNavLink>
            <FluentNavLink Href="uploadmanual" Icon="@(new Icons.Regular.Size20.DocumentAdd())" IconColor="Color.Accent">UpLoadManual</FluentNavLink>
            <FluentNavLink Href="uploadDefault" Icon="@(new Icons.Regular.Size20.DocumentAdd())" IconColor="Color.Accent">UpLoadDefaul</FluentNavLink>
            <FluentNavLink Href="uploadBuffer" Icon="@(new Icons.Regular.Size20.DocumentAdd())" IconColor="Color.Accent">UpLoadBuffer</FluentNavLink>
            <FluentNavLink Href="uploadStream" Icon="@(new Icons.Regular.Size20.DocumentAdd())" IconColor="Color.Accent">UpLoadStream</FluentNavLink>

            <FluentNavLink Href="counter" Icon="@(new Icons.Regular.Size20.NumberSymbolSquare())" IconColor="Color.Accent">Counter</FluentNavLink>
            <FluentNavLink Href="weather" Icon="@(new Icons.Regular.Size20.WeatherPartlyCloudyDay())" IconColor="Color.Accent">Weather</FluentNavLink>
            <FluentNavLink Href="gestao" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.AppsListDetail())" IconColor="Color.Accent">Gestão ITBI</FluentNavLink>
            <FluentNavLink Href="mapa" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.Map())" IconColor="Color.Accent">Mapa</FluentNavLink>
       -->